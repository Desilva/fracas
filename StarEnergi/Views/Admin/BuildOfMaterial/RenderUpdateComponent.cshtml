<fieldset>
    <legend>Build of Material</legend>
    <br/>
    @*@(Html.Telerik().Grid<StarEnergi.Models.bom>()*@
    @(Html.Telerik().Grid<StarEnergi.Models.BomEquipmentEntity>()
        .TableHtmlAttributes(new { style = "width:640px" })
        .Name("bom")
        .ToolBar(commands => commands.Insert().ButtonType(GridButtonType.ImageAndText).ImageHtmlAttributes(new { style = "margin-left:0" }))
        .DataKeys(keys =>
        {
            keys.Add(x => x.id);
        })
        .DataBinding(dataBinding =>
        {
            dataBinding.Ajax()
                //.Select("_SelectAjaxEditing", "BuildOfMaterial", new { id_reference = ViewBag.id, level = ViewBag.level })
                //.Insert("_InsertAjaxEditing", "BuildOfMaterial", new { id_reference = ViewBag.id, level = ViewBag.level })
                //.Update("_SaveAjaxEditing", "BuildOfMaterial", new { id_reference = ViewBag.id, level = ViewBag.level })
                //.Delete("_DeleteAjaxEditing", "BuildOfMaterial", new { id_reference = ViewBag.id, level = ViewBag.level });
                .Select("_SelectAjaxEditing", "BuildOfMaterial", new { id_reference = ViewBag.id, type = ViewBag.type })
                .Insert("_InsertAjaxEditing", "BuildOfMaterial", new { id_reference = ViewBag.id, type = ViewBag.type })
                .Update("_SaveAjaxEditing", "BuildOfMaterial", new { id_reference = ViewBag.id, type = ViewBag.type })
                .Delete("_DeleteAjaxEditing", "BuildOfMaterial", new { id_reference = ViewBag.id, type = ViewBag.type });

        })
        .Columns(columns =>
        {
            //columns.Bound(o => o.id).Hidden();
            //columns.Bound(o => o.no_key_map).Width(190).Title("No Key Map");
            //columns.Bound(o => o.description).Title("Description");
            columns.Bound(o => o.id).Hidden();
            columns.ForeignKey(o => o.id_bom, (System.Collections.IEnumerable)ViewData["build_of_material"],
                   "id", "functional_location").Width(250).Title("Functional Location");
            //columns.Bound(o => o.build_of_material.no_keymap).Width(200).Title("No Key Map");            
            columns.Command(commands =>
            {
                commands.Edit().ButtonType(GridButtonType.Image);
                commands.Delete().ButtonType(GridButtonType.Image);
            }).Width(80).Title("Commands");

        })
        .Pageable(p => p.PageSize(10))
        .Sortable()
        .Filterable()
        .Scrollable(c => c.Enabled(true).Height("250"))
        .Selectable()
    ) 
</fieldset>