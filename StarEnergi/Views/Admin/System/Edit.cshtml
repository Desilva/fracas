@model StarEnergi.Models.system

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $.post("System/GetPT",
            function (data) {
                hasil = eval(data);
                $("#id_pt").html("");
                $('<option data-score="0" data-value="0" value="">-- Select PT --</option>').appendTo("#id_pt");
                for (var i = 0; i < hasil.length; i++) {
                    $("<option data-value='" + hasil[i]['pt_value'] + "'  data-score='" + hasil[i]['pt_score'] + "' value='" + hasil[i]['id'] + "'>" + hasil[i]['pt_value'] + "-" + hasil[i]['nama'] + "</option>").appendTo("#id_pt");
                }
                $("#id_pt").val('@ViewBag.pt');
            }
        );
        $.post("System/GetPE",
           function (data) {
               hasil = eval(data);
               $("#id_pe").html("");
               $('<option data-score="0" data-value="0" value="">-- Select PE --</option>').appendTo("#id_pe");
               for (var i = 0; i < hasil.length; i++) {
                   $("<option data-value='" + hasil[i]['pe_value'] + "' data-score='" + hasil[i]['pe_score'] + "'  value='" + hasil[i]['id'] + "'>" + hasil[i]['pe_value'] + "-" + hasil[i]['nama'] + "</option>").appendTo("#id_pe");
               }
               $("#id_pe").val('@ViewBag.pe');
           }
       );
        $.post("System/GetOC",
           function (data) {
               hasil = eval(data);
               $("#id_oc").html("");
               $('<option data-score="0" data-value="0" value="">-- Select OC --</option>').appendTo("#id_oc");
               for (var i = 0; i < hasil.length; i++) {
                   $("<option  data-value='" + hasil[i]['oc_value'] + "' data-score='" + hasil[i]['oc_score'] + "'  value='" + hasil[i]['id'] + "'>" + hasil[i]['oc_value'] + "-" + hasil[i]['nama'] + "</option>").appendTo("#id_oc");
               }
               $("#id_oc").val('@ViewBag.oc');
           }
       );
        $.post("System/GetRC",
           function (data) {
               hasil = eval(data);
               $("#id_rc").html("");
               $('<option data-score="0" data-value="0" value="">-- Select RC --</option>').appendTo("#id_rc");
               for (var i = 0; i < hasil.length; i++) {
                   $("<option  data-value='" + hasil[i]['rc_value'] + "' data-score='" + hasil[i]['rc_score'] + "'  value='" + hasil[i]['id'] + "'>" + hasil[i]['rc_value'] + "-" + hasil[i]['nama'] + "</option>").appendTo("#id_rc");
               }
               $("#id_rc").val('@ViewBag.rc');
           }
       );
        $.post("System/GetSF",
           function (data) {
               hasil = eval(data);
               $("#id_sf").html("");
               $('<option data-score="0" data-value="0" value="">-- Select SF --</option>').appendTo("#id_sf");
               for (var i = 0; i < hasil.length; i++) {
                   $("<option  data-value='" + hasil[i]['sf_value'] + "' data-score='" + hasil[i]['sf_score'] + "'  value='" + hasil[i]['id'] + "'>" + hasil[i]['sf_value'] + "-" + hasil[i]['nama'] + "</option>").appendTo("#id_sf");
               }
               $("#id_sf").val('@ViewBag.sf');
           }
       );
        var oldValue = '@ViewBag.scr';
        if (oldValue !== null)
            oldValue = oldValue.replace(',', '.');
        $("#scr_label").val(oldValue);
        $(".input-dropdown").change(function (e) {
            var pt = $("#id_pt").find('option:selected');
            var ptScore = parseFloat(pt.data('score'));
            var ptValue = parseFloat(pt.data('value'));

            var pe = $("#id_pe").find('option:selected');
            var peScore = parseFloat(pe.data('score'));
            var peValue = parseFloat(pe.data('value'));

            var oc = $("#id_oc").find('option:selected');
            var ocScore = parseFloat(oc.data('score'));
            var ocValue = parseFloat(oc.data('value'));

            var rc = $("#id_rc").find('option:selected');
            var rcScore = parseFloat(rc.data('score'));
            var rcValue = parseFloat(rc.data('value'));

            var sf = $("#id_sf").find('option:selected');
            var sfScore = parseFloat(sf.data('score'));
            var sfValue = parseFloat(sf.data('value'));

            var totalScr = Math.pow(ptScore * ptValue, 2) + Math.pow(ocScore * ocValue, 2) + Math.pow(sfScore * sfValue, 2) + Math.pow(rcScore * rcValue, 2) + Math.pow(peScore * peValue, 2);
            totalScr = Math.sqrt(totalScr) / 100;
            $("#scr_label").val(totalScr);
        });
    });
       function save() {
           var values =
           {
               @*"id"                : $('#id').val(),
            "id_unit"           : eval('@ViewBag.id_unit'),
            "nama"              : $('#nama').val(),
            "kode"              : $('#kode').val(),
            "funct_description" : $('#funct_description').val(),
            "failure_scenario"  : $('#failure_scenario').val(),
            "primary_impact"    : $('#primary_impact').val(),
            "secondary_impact"  : $('#secondary_impact').val(),
            "cons_econ"         : $('#cons_econ').val(),
            "cons_hs"           : $('#cons_hs').val(),
            "cons_env"          : $('#cons_env').val(),
            "cons_total"        : $('#cons_total').attr("title"),
            "likelihood"        : $('#likelihood').attr("title"),
            "crit_code"         : $('#crit_code').attr("title"),
            "ram_crit"          : $('#ram_crit').attr("title"),
            "exist_crit"        : $('#exist_crit').attr("title"),
            "h"                 : $('#h').attr("title"),
            "e"                 : $('#e').attr("title"),
            "econ"              : $('#econ').attr("title"),
            "prob"              : $('#prob').attr("title"),
            "ram_crit_1"        : $('#ram_crit_1').attr("title"),
            "ram_crit_2"        : $('#ram_crit_2').attr("title"),
            "ram_crit_3"        : $('#ram_crit_3').attr("title")*@

               "id": $('#id').val(),
               "id_unit": eval('@ViewBag.id_unit'),
               "nama": $('#nama').val(),
               "kode": $('#kode').val(),
               "system_description": $('#system_description').val(),
               "id_oc": $('#id_oc').val(),
               "id_pt": $('#id_pt').val(),
               "id_pe": $('#id_pe').val(),
               "id_sf": $('#id_sf').val(),
               "id_rc": $('#id_rc').val(),
               "scr": $('#scr_label').val().replace('.', ',')
           }

           $.post("system/edit", values, function (data) {
               if (data != undefined) {
                   if (data["status"] == 0) {
                       var html = $('#TreeSBS').find('input.t-input[name="itemValue"][value="' + data["message"] + '"]').prev().find('img').attr('src');
                       var image = '<img class="t-image" src="' + html + '" alt="image">';
                       $('#TreeSBS').find('input.t-input[name="itemValue"][value="' + data["message"] + '"]').prev().html(image + $('#nama').val());
                       $('#content').load('System/details/' + $('#id').val());
                   } else {
                       clearError();
                       $.each(data, function (index, value) {
                           if (index != "status") {
                               //error render
                               $('#' + index).next('div').html(value);
                           }
                       });
                   }
               } else {
                   alert('Gagal mengedit data system');
               }
           });

       }

       function clearError() {
           //var field = ["nama", "kode", "funct_description", "failure_scenario", "primary_impact", "secondary_impact", "cons_econ", "cons_hs", "cons_env", "cons_total", "likelihood", "likelihood", "crit_code", "ram_crit", "exist_crit", "h", "e", "prob", "ram_crit_1", "ram_crit_2", "ram_crit_3"];
           var field = ["nama", "kode", "system_description", "id_oc", "id_pt", "id_pe", "id_sf", "id_rc"];
           $.each(field, function (index, value) {
               $('#' + value).next('div').html('');
           });
       }
</script>

<div class="fieldR">* Required Field</div>
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>system</legend>

        @Html.HiddenFor(model => model.id)
        @Html.HiddenFor(model => model.scr)

        @*<div class="editor-label">
            @Html.LabelFor(model => model.nama)<a class="bintang">*</a>
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.nama)
            <div class="errorM"></div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.kode)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.kode)
            <div class="errorM"></div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.funct_description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.funct_description)
            <div class="errorM"></div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.failure_scenario)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.failure_scenario)
            <div class="errorM"></div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.primary_impact)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.primary_impact)
            <div class="errorM"></div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.secondary_impact)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.secondary_impact)
            <div class="errorM"></div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.cons_econ)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.cons_econ)
            <div class="errorM"></div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.cons_hs)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.cons_hs)
            <div class="errorM"></div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.cons_env)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.cons_env)
            <div class="errorM"></div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.cons_total)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.cons_total)
            <div class="errorM"></div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.likelihood)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.likelihood)
            <div class="errorM"></div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.crit_code)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.crit_code)
            <div class="errorM"></div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ram_crit)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ram_crit)
            <div class="errorM"></div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.exist_crit)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.exist_crit)
            <div class="errorM"></div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.h)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.h)
            <div class="errorM"></div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.e)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.e)
            <div class="errorM"></div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.econ)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.econ)
            <div class="errorM"></div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ram_crit_1)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ram_crit_1)
            <div class="errorM"></div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.prob)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.prob)
            <div class="errorM"></div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ram_crit_2)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ram_crit_2)
            <div class="errorM"></div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ram_crit_3)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ram_crit_3)
            <div class="errorM"></div>
        </div>*@

        <div class="editor-label">
            @Html.LabelFor(model => model.nama)<a class="bintang">*</a>
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.nama)
            <div class="errorM"></div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.kode)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.kode)
            <div class="errorM"></div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.system_description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.system_description)
            <div class="errorM"></div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.id_pt)
        </div>
        <div class="editor-field">
            <select name="id_pt" id="id_pt" class="input-dropdown">
                <option value="">-- Pilih PT --</option>
            </select>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.id_oc)
        </div>
        <div class="editor-field">
            <select name="id_oc" id="id_oc" class="input-dropdown">
                <option value="">-- Pilih OC --</option>
            </select>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.id_sf)
        </div>
        <div class="editor-field">
            <select name="id_sf" id="id_sf" class="input-dropdown">
                <option value="">-- Pilih SF --</option>
            </select>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.id_rc)
        </div>
        <div class="editor-field">
            <select name="id_rc" id="id_rc" class="input-dropdown">
                <option value="">-- Pilih RC --</option>
            </select>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.id_pe)
        </div>
        <div class="editor-field">
            <select name="id_pe" id="id_pe" class="input-dropdown">
                <option value="">-- Pilih PE --</option>
            </select>
        </div>        

        <div class="editor-label">
            @Html.LabelFor(model => model.scr)
        </div>
        <div class="editor-field">
            <input id="scr_label" class="input-dropdown" disabled></input>
        </div>

        <p>
            <input type="submit" value="Save" onclick="save()"/>
        </p>
    </fieldset>
