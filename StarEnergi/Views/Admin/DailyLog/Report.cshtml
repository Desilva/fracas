@model IEnumerable<StarEnergi.Models.daily_log>
@{
    ViewBag.Title = "Add Daily Log";
    List<StarEnergi.Models.user_per_role> li = null;
    if (ViewData["user_role"] != null)
    {
        li = ViewData["user_role"] as List<StarEnergi.Models.user_per_role>;
    }
}

<script type="text/javascript">
    function OnRowDataBoundEq(e) {
        var dataItem = e.dataItem;
        var row = e.row;
        var ex = '@li.Exists(p => p.role == (int)StarEnergi.Config.role.DAILYLOGLEADER)';
        var templateComplete =  ex == 'True' ? '<a class="t-button t-grid-fracasedit t-button-icon t-button-icon t-ajax" title="Edit Daily Log" onClick="Edit('+dataItem.id +');">' : 
                                '<a class="t-button t-grid-fracasedit t-button-icon t-button-icon t-ajax" title="View Daily Log" onClick="View('+dataItem.id+');">'
                                + '<span class="t-icon t-edit"></span>'
                                + '</a>';
        row.cells[0].innerHTML = templateComplete;
        row.cells[2].innerHTML = dataItem.date;
    }

    function Edit(id) {
        $('#content').load('DailyLogs/addDailyLog', { 'id': id });
    }

    function View(id) {
        $('#contentEventLog').load('DailyLogs/DetailDailyLog', { 'id': id });
    }

</script>

<style>
    .t-grid .t-grid-header .t-header,
    .t-grid .t-grid-header .t-last-header {
        white-space: normal;
    }
</style>

@( 
 Html.Telerik().Grid<StarEnergi.Models.daily_log>()
        .TableHtmlAttributes(new { style = "width:980px" }).HtmlAttributes(new { style = "width:980px" })
        .Name("dailyLog")
        .DataKeys(keys =>
        {
            keys.Add(p => p.id);
        })
        .DataBinding(dataBinding =>
        {
            dataBinding.Ajax()
                .Delete("_DeleteAjaxDailyLog", "DailyLog")
                .Select("_SelectAjaxDailyLog", "DailyLog");
        })
        .Columns(columns =>
        {
            columns.Command(commands =>
            {
                commands.Delete().ButtonType(GridButtonType.BareImage);
            }).Width(160).Title("Action").HtmlAttributes(new { style = "text-align: center" });
            columns.Bound(o => o.id).Hidden();
            columns.Bound(o => o.date).Width(225).Title("Date");
            
        })
        .ClientEvents(
            events => events
                .OnRowDataBound("OnRowDataBoundEq")
        )
        .Pageable(p => p.PageSize(10))
        .Sortable()
        .Scrollable(c => c.Enabled(true))
        .Selectable()
        .Filterable()
        .Groupable()
) 
