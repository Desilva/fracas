@{
    StarEnergi.Models.incident_report ir = null;
    bool isEdit = false;
    bool isView = false;
    int? id = null;
    if (ViewBag.mod != null)
    {
        id = ViewBag.mod as Nullable<Int32>;
        ViewBag.Title = "Edit Incident Report";
        ir = ViewBag.datas as StarEnergi.Models.incident_report;
        isEdit = true;
        isView = ir.field_manager_approve != null;
    }
    else
    {
        ViewBag.Title = "Add Incident Report";
    }
    List<StarEnergi.Models.user_per_role> li = null;
    if (ViewData["user_role"] != null)
    {
        li = ViewData["user_role"] as List<StarEnergi.Models.user_per_role>;
    }

    List<StarEnergi.Models.EmployeeEntity> has = null;
    if (ViewData["users"] != null) {
        has = ViewData["users"] as List<StarEnergi.Models.EmployeeEntity>;
    }

    string username = HttpContext.Current.Session["username"].ToString();
    int? dept_id = has.Find(p => p.username == username).dept_id;
}
<style>
    h5, h6 {
        margin-top:0px;
        margin-bottom:0px;
    }

    h5 {
        margin-top:0px;
        margin-bottom:0px;
        margin-left:5px;
    }

    small {
        margin-left:5px;
    }

    td {
        color:black;
        border:0;
    }

    table.tabs {border: 1px solid black}
    table.tabs2 {border: 1px solid black}
    table.tabs tr td {
        border-top: 1px solid black;
        border-bottom: 1px solid black;
    }

    .right {
        border-right:1px solid black;
    }

    input[type=text] {
        margin-left:5px;
        width:310px;
    }

    tr.borderless td {
        border-width:0;
        margin:5px;
    }

    #content-inc
    {
        padding-left: 10px;
    }

    select {
        width:166px;
    }

</style>
<h2>@ViewBag.Title</h2>
<div id="content-inc">
<h3> I. General Information</h3><br />
<table id="tabGenInfo" class="tabs" style="width:980px" cellspacing="0" cellpadding="0">
    <tbody style="width:100%">
        <tr>
            <td colspan="18" class="right">
                <h5>Business Unit / Facility</h5><br />
                <input type="radio" id="on_the_job" name="type_report" @(li.Exists(p => p.role == (int)StarEnergi.Config.role.SHE) && !isView ? "" : "disabled") value="1" @(isEdit ? ir.type_of_report == 1 ? "checked" : "" : "")/>On the job
                <input type="radio" id="off_the_job" name="type_report" @(li.Exists(p => p.role == (int)StarEnergi.Config.role.SHE) && !isView ? "" : "disabled") value="0" @(isEdit ? ir.type_of_report == 0 ? "checked" : "" : "")/>Off the job
            </td>
        </tr>
        <tr>
            <td colspan="6" class="right" style="width:33%">
                <h5>Business Unit / Facility</h5><br />
                <select id="bus_unit" name="bus_unit" @(li.Exists(p => p.role == (int)StarEnergi.Config.role.SHE) && !isView ? "" : "disabled")>
                    @foreach (StarEnergi.Models.rca_facility fac in ViewBag.facility as List<StarEnergi.Models.rca_facility>)
                    {
                        if (isEdit && ir.facility == fac.name) {
                            <option value="@fac.name" selected>@fac.name</option>
                        } else if (fac.id == 1)
                        {
                            <option value="@fac.name" selected>@fac.name</option>
                        } else {
                            <option value="@fac.name">@fac.name</option>
                        }
                    }
                </select>
            </td>
            <td colspan="6" class="right" style="width:33%">
                <h5>Incident Location</h5><br />
                <input type="text" id="inc_loc" name="inc_loc" @(li.Exists(p => p.role == (int)StarEnergi.Config.role.SHE) && !isView ? "" : "disabled") value="@(isEdit ? ir.incident_location : "")"/>
            </td>
            <td colspan="6" style="width:33%">
                <h5>Reference Number</h5><br />
                <input type="text" id="ref_num" name="ref_num" disabled value="@(isEdit ? ir.reference_number : ViewBag.ir_ref as string)"/>
            </td>
        </tr>
        <tr>
            <td colspan="6" class="right" style="width:33%">
                <h5>Type of Report</h5><br />
                <input type="radio" id="on_the_job" name="type_report" @(li.Exists(p => p.role == (int)StarEnergi.Config.role.SHE) && !isView ? "" : "disabled") value="1" @(isEdit ? ir.type_of_report == 1 ? "checked" : "" : "")/>On the job
                <input type="radio" id="off_the_job" name="type_report" @(li.Exists(p => p.role == (int)StarEnergi.Config.role.SHE) && !isView ? "" : "disabled") value="0" @(isEdit ? ir.type_of_report == 0 ? "checked" : "" : "")/>Off the job
            </td>
            <td colspan="6" class="right" style="width:33%">
                <h5>Date/Time of Incident</h5><br />
                @(Html.Telerik().DateTimePicker()
                        .Name("date_incident")
                        .HtmlAttributes(new { id = "datetime_wrapper", style = "width:310px;margin-left:5px" })
                        .Value(isEdit ? ir.date_incident : DateTime.Now)
                        .Enable(li.Exists(p => p.role == (int)StarEnergi.Config.role.SHE) && !isView ? true : false)
                )
            </td>
            <td colspan="6" style="width:33%">
                <h5>Title</h5><br />
                <input type="text" id="titles" name="title" @(li.Exists(p => p.role == (int)StarEnergi.Config.role.SHE) && !isView ? "" : "disabled") value="@(isEdit ? ir.title : "")"/>
            </td>
        </tr>
        <tr>
            <td colspan="6" class="right">
                <h5>Incident Type</h5>
                <small>(Choose one criteria most apply)</small>
            </td>
            <td colspan="4">
                <input type="radio" id="injury" name="incident_type" @(li.Exists(p => p.role == (int)StarEnergi.Config.role.SHE) && !isView ? "" : "disabled") value="Injury / Illness" @(isEdit ? ir.incident_type == "Injury / Illness" ? "checked" : "" : "") onclick="investigation();"/>Injury / Illness<br />
                <input type="radio" id="enviro_loss" name="incident_type" @(li.Exists(p => p.role == (int)StarEnergi.Config.role.SHE) && !isView ? "" : "disabled") value="Environmental Loss" @(isEdit ? ir.incident_type == "Environmental Loss" ? "checked" : "" : "") onclick="investigation();"/>Environmental Loss<br />
                <input type="radio" id="prop_dmg" name="incident_type" @(li.Exists(p => p.role == (int)StarEnergi.Config.role.SHE) && !isView ? "" : "disabled") value="Properti Damage" @(isEdit ? ir.incident_type == "Properti Damage" ? "checked" : "" : "") onclick="investigation();"/>Properti Damage
            </td>
            <td colspan="4">
                <input type="radio" id="disturb" name="incident_type" @(li.Exists(p => p.role == (int)StarEnergi.Config.role.SHE) && !isView ? "" : "disabled") value="Process Loss / Disturb" @(isEdit ? ir.incident_type == "Process Loss / Disturb" ? "checked" : "" : "") onclick="investigation();"/>Process Loss / Disturb<br />
                <input type="radio" id="ext_rel" name="incident_type" @(li.Exists(p => p.role == (int)StarEnergi.Config.role.SHE) && !isView ? "" : "disabled") value="External Relation" @(isEdit ? ir.incident_type == "External Relation" ? "checked" : "" : "") onclick="investigation();"/>External Relation<br />
                <input type="radio" id="theft" name="incident_type" @(li.Exists(p => p.role == (int)StarEnergi.Config.role.SHE) && !isView ? "" : "disabled") value="Theft / Crimes" @(isEdit ? ir.incident_type == "Theft / Crimes" ? "checked" : "" : "") onclick="investigation();"/>Theft / Crimes
            </td>
            <td colspan="4">
                <input type="radio" id="vehicular" name="incident_type" @(li.Exists(p => p.role == (int)StarEnergi.Config.role.SHE) && !isView ? "" : "disabled") value="Vehicular" @(isEdit ? ir.incident_type == "Vehicular" ? "checked" : "" : "") onclick="investigation();"/>Vehicular<br />
                <input type="radio" id="near_miss" name="incident_type" @(li.Exists(p => p.role == (int)StarEnergi.Config.role.SHE) && !isView ? "" : "disabled") value="Near Miss" @(isEdit ? ir.incident_type == "Near Miss" ? "checked" : "" : "") onclick="investigation();"/>Near Miss<br />
                <input type="radio" id="other" name="incident_type" @(li.Exists(p => p.role == (int)StarEnergi.Config.role.SHE) && !isView ? "" : "disabled") value="" @(isEdit ? ir.incident_type != "Injury / Illness" && ir.incident_type != "Environmental Loss" && ir.incident_type != "Properti Damage"
                && ir.incident_type != "Process Loss / Disturb" && ir.incident_type != "External Relation" && ir.incident_type != "Theft / Crimes" && ir.incident_type != "Vehicular" && ir.incident_type != "Near Miss" ? "checked" : "" : "")/>Other:
                <input type="text" id="other_text" name="other" style="width:175px" @(li.Exists(p => p.role == (int)StarEnergi.Config.role.SHE) && !isView ? "" : "disabled") value="@(isEdit ? ir.incident_type != "Injury / Illness" && ir.incident_type != "Environmental Loss" && ir.incident_type != "Properti Damage"
                && ir.incident_type != "Process Loss / Disturb" && ir.incident_type != "External Relation" && ir.incident_type != "Theft / Crimes" && ir.incident_type != "Vehicular" && ir.incident_type != "Near Miss" ? ir.incident_type : "" : "")" onkeyup="investigation();"/>
            </td>
        </tr>
        <tr>
            <td colspan="6" class="right">
                <h5>Actual Loss Severity</h5>
            </td>
            <td colspan="3">
                <input type="radio" name="actual_loss" @(li.Exists(p => p.role == (int)StarEnergi.Config.role.SHE) && !isView ? "" : "disabled") value="1" @(isEdit ? ir.actual_loss_severity == 1 ? "checked" : "" : "")/>Major
            </td>
            <td colspan="3">
                <input type="radio" name="actual_loss" @(li.Exists(p => p.role == (int)StarEnergi.Config.role.SHE) && !isView ? "" : "disabled") value="2" @(isEdit ? ir.actual_loss_severity == 2 ? "checked" : "" : "")/>Serious
            </td>
            <td colspan="3">
                <input type="radio" name="actual_loss" @(li.Exists(p => p.role == (int)StarEnergi.Config.role.SHE) && !isView ? "" : "disabled") value="3" @(isEdit ? ir.actual_loss_severity == 3 ? "checked" : "" : "")/>Moderate
            </td>
            <td colspan="3">
                <input type="radio" name="actual_loss" @(li.Exists(p => p.role == (int)StarEnergi.Config.role.SHE) && !isView ? "" : "disabled") value="4" @(isEdit ? ir.actual_loss_severity == 4 ? "checked" : "" : "")/>Minor
            </td>
        </tr>
        <tr>
            <td colspan="6" class="right">
                <h5>Potential Loss Severity</h5>
            </td>
            <td colspan="3">
                <input type="radio" name="potential_loss" @(li.Exists(p => p.role == 6) && !isView ? "" : "disabled") value="1" @(isEdit ? ir.potential_loss_severity == 1 ? "checked" : "" : "") onclick="investigation();"/>Major
            </td>
            <td colspan="3">
                <input type="radio" name="potential_loss" @(li.Exists(p => p.role == 6) && !isView ? "" : "disabled") value="2" @(isEdit ? ir.potential_loss_severity == 2 ? "checked" : "" : "") onclick="investigation();"/>Serious
            </td>
            <td colspan="3">
                <input type="radio" name="potential_loss" @(li.Exists(p => p.role == 6) && !isView ? "" : "disabled") value="3" @(isEdit ? ir.potential_loss_severity == 3 ? "checked" : "" : "") onclick="investigation();"/>Moderate
            </td>
            <td colspan="3">
                <input type="radio" name="potential_loss" @(li.Exists(p => p.role == 6) && !isView ? "" : "disabled") value="4" @(isEdit ? ir.potential_loss_severity == 4 ? "checked" : "" : "") onclick="investigation();"/>Minor
            </td>
        </tr>
        <tr>
            <td colspan="6" class="right">
                <h5>Probability of Recurrence</h5>
                <small>(If no corrective action taken)</small>
            </td>
            <td colspan="3">
                <input type="radio" name="probability" @(li.Exists(p => p.role == 6) && !isView ? "" : "disabled") value="1" @(isEdit ? ir.probability == 1 ? "checked" : "" : "") onclick="investigation();"/>Frequent
            </td>
            <td colspan="3">
                <input type="radio" name="probability" @(li.Exists(p => p.role == 6) && !isView ? "" : "disabled") value="2" @(isEdit ? ir.probability == 2 ? "checked" : "" : "") onclick="investigation();"/>Occasional
            </td>
            <td colspan="3">
                <input type="radio" name="probability" @(li.Exists(p => p.role == 6) && !isView ? "" : "disabled") value="3" @(isEdit ? ir.probability == 3 ? "checked" : "" : "") onclick="investigation();"/>Seldom
            </td>
            <td colspan="3">
                <input type="radio" name="probability" @(li.Exists(p => p.role == 6) && !isView ? "" : "disabled") value="4" @(isEdit ? ir.probability == 4 ? "checked" : "" : "") onclick="investigation();"/>Rare
            </td>
        </tr>
    </tbody>
</table>
<br />
<h3> II. Factual Information</h3>
<small>(Describe the events and actions before, during, and after the incident (who, what, how, when, & why). Include pertinent information related to incident.</small>
<br /><small>Attach additional pages if necessary)</small>
<table id="tabFacInfo" class="tabs" style="width:980px" cellspacing="0" cellpadding="0">
    <tbody style="width:100%">
        <tr>
            <td>
                <textarea id="facts" name="facts" rows="7" cols="119" style="resize:none" "@(li.Exists(p => p.role == 6) && !isView ? "" : "disabled")>@(isEdit ? Html.Raw(System.Web.HttpUtility.HtmlDecode(ir.factual_information)).ToHtmlString() : "")</textarea>
            </td>
        </tr>
        <tr>
            <td>
                <h5>Cost Estimate<small>(Estimated cost for medical treatment, rehabilitation, damage to property, loss to process, etc.)</small></h5><br />
                <input type="text" id="cost" name="cost" style="width:968px" @(li.Exists(p => p.role == 6) && !isView ? "" : "disabled") value="@(isEdit ? ir.cost_estimate : "")"/>
            </td>
        </tr>
    </tbody>
</table>
<br />
<h3> III. Immediate Actions</h3>
<small>(to control situation)</small>
<table id="tabImAct" class="tabs" style="width:980px" cellspacing="0" cellpadding="0">
    <tbody style="width:100%">
        <tr>
            <td>
                <textarea id="imme_action" name="imme_action" rows="7" cols="119" style="resize:none" @(li.Exists(p => p.role == 6) && !isView ? "" : "disabled")>@(isEdit ? Html.Raw(System.Web.HttpUtility.HtmlDecode(ir.immediate_action)).ToHtmlString() : "")</textarea>
            </td>
        </tr>
    </tbody>
</table>
<br />
<table id="tabImAct2" class="tabs2" style="width:980px" cellspacing="0" cellpadding="0">
    <tbody style="width:100%">
        <tr class="borderless">
            <td>
                <h5>Prepared by:</h5>
            </td>
            <td colspan="2">
                @if (li.Exists(p => p.role == 6) && !isView)
                {
                    <select id="prepared" name="prepared" onchange="bindpre()">
                        <option value="" selected disabled>Choose One</option>
                        @foreach (StarEnergi.Models.EmployeeEntity user in ViewData["users"] as List<StarEnergi.Models.EmployeeEntity>)
                        {
                            if (!isEdit && user.username == HttpContext.Current.Session["username"].ToString())
                            {
                                <option value="@user.id" selected>@user.alpha_name</option>
                            }
                            else if (isEdit && user.id == Int32.Parse(ir.prepared_by == null ? "0" : ir.prepared_by))
                            {
                                <option value="@user.id" selected>@user.alpha_name</option>
                            }
                            else
                            {
                                <option value="@user.id">@user.alpha_name</option>
                            }
                        }
                    </select>
                }
                else
                {
                    <input type="text" name="prepared" id="prepared" value="@(isEdit ? has.Find(p => p.id == Int32.Parse(ir.prepared_by)).alpha_name : "")" disabled/>
                }
            </td>
            <td>
                <h5>Ack by supervisor</h5>
            </td>
            <td colspan="2">
                @if (li.Exists(p => p.role == 6) && !isView)
                {
                    <select id="ack" name="ack" onchange="bindack()">
                        <option value="" selected disabled>Choose One</option>
                        @foreach (StarEnergi.Models.EmployeeEntity user in ViewData["users"] as List<StarEnergi.Models.EmployeeEntity>)
                        {
                            if (user.level == 1) {
                                if (!isEdit && user.dept_id == dept_id)
                                {
                                    <option value="@user.id" selected>@user.alpha_name</option>
                                }
                                else if (isEdit && user.id == Int32.Parse(ir.ack_supervisor == null ? "0" : ir.ack_supervisor))
                                {
                                    <option value="@user.id" selected>@user.alpha_name</option>
                                }
                                else
                                {
                                    <option value="@user.id">@user.alpha_name</option>
                                }
                            }
                        }
                    </select>
                }
                else
                {
                    <input type="text" name="ack" id="ack" value="@(isEdit ? has.Find(p => p.id == Int32.Parse(ir.ack_supervisor)).alpha_name : "")" disabled/>
                }
            </td>
        </tr>
        <tr class="borderless">
            <td>
                <h5>Job title:</h5>
            </td>
            <td colspan="2" id="pre_job">
            </td>
            <td>
                <h5>Job Title:</h5>
            </td>
            <td colspan="2" id="ack_job">
            </td>
        </tr>
        <tr class="borderless">
            <td>
                <h5>Date:</h5>
            </td>
            <td colspan="2">
                @(Html.Telerik().DatePicker()
                        .Name("date_prepared")
                        .HtmlAttributes(new { id = "datetime_wrapper", style = "width:166px" })
                        .Value(isEdit ? ir.prepare_date : DateTime.Now)
                        .Enable(li.Exists(p => p.role == 6) && !isView ? true : false)
                )
            </td>
            <td>
                <h5>Date:</h5>
            </td>
            <td colspan="2">
                @(Html.Telerik().DatePicker()
                        .Name("date_ack")
                        .HtmlAttributes(new { id = "datetime_wrapper", style = "width:166px" })
                        .Value(isEdit ? ir.ack_date : DateTime.Now)
                        .Enable(li.Exists(p => p.role == 6) && !isView ? true : false)
                )
            </td>
        </tr>
    </tbody>
</table>
<br />
<table id="tabImAct3" class="tabs" style="width:980px" cellspacing="0" cellpadding="0">
    <tbody style="width:100%">
        <tr>
            <td style="width:16.67%" class="right">
                <h5>Approved by:</h5>
            </td>
            <td style="width:16.67%" class="right">
                <h5>Name</h5>
            </td>
            <td style="width:16.67%" class="right">
                <h5>Date</h5>
            </td>
            <td style="width:16.67%" class="right">
                <h5>Approved by:</h5>
            </td>
            <td style="width:16.67%" class="right">
                <h5>Name</h5>
            </td>
            <td style="width:16.67%">
                <h5>Date</h5>
            </td>
        </tr>
        <tr>
            <td style="width:16.67%" class="right">
                <h5>Superintendent</h5>
            </td>
            <td style="width:16.67%" class="right">
                @if (li.Exists(p => p.role == 6) && !isView)
                {
                    <select id="sup_name" name="sup_name"  @(isEdit && ir.superintendent_approve != null ? "disabled" : "")>
                        <option value="" selected disabled>Choose One</option>
                        @foreach (StarEnergi.Models.EmployeeEntity user in ViewData["users"] as List<StarEnergi.Models.EmployeeEntity>)
                        {
                            if (user.level == 0) {
                                if (!isEdit && user.dept_id == dept_id)
                                {
                                    <option value="@user.id" selected>@user.alpha_name</option>
                                }
                                else if (isEdit && user.id == Int32.Parse(ir.superintendent == null ? "0" : ir.superintendent))
                                {
                                    <option value="@user.id" selected>@user.alpha_name</option>
                                }
                                else
                                {
                                    <option value="@user.id">@user.alpha_name</option>
                                }
                            }
                        }
                    </select>
                    if (isEdit) {
                        if (has.Find(p => p.username == username).id == Int32.Parse(ir.superintendent == null ? "0" : ir.superintendent)) {
                            if (ir.superintendent_approve == null) {
                        <input type="button" id="approve_superintendent" name="approve_superintendent" />
                            }
                        }
                        <img id="img_approve_superintendent" width="50" height="50" @(ir.superintendent_approve != null ? "style='display:none;'" : "style='display:block;'")  src="@ir.superintendent_approve"/>
                    }
                }
                else
                {
                    <input type="text" name="sup_name" id="sup_name" value="@(isEdit ? has.Find(p => p.id == Int32.Parse(ir.superintendent)).alpha_name : "")" disabled style="width:166px"/>
                    <img id="img_approve_superintendent" width="50" height="50" @(ir.superintendent_approve != null ? "style='display:none;'" : "style='display:block;'")  src="@ir.superintendent_approve"/>
                }
            </td>
            <td style="width:16.67%" class="right">
                @(Html.Telerik().DatePicker()
                        .Name("date_sup")
                        .HtmlAttributes(new { id = "datetime_wrapper", style = "width:161px" })
                        .Value(isEdit ? ir.superintendent_date : DateTime.Now)
                        .Enable(li.Exists(p => p.role == 6) && (!isEdit || ir.superintendent_approve == null) && !isView ? true : false)
                )
            </td>
            <td style="width:16.67%" class="right">
                <h5>Field Manager</h5>
            </td>
            <td style="width:16.67%" class="right">
                @if (li.Exists(p => p.role == 6) && !isView)
                {
                    <select id="field_man_name" name="field_man_name" @(isEdit && ir.field_manager_approve != null ? "disabled" : "")>
                        <option value="" selected disabled>Choose One</option>
                        @foreach (StarEnergi.Models.EmployeeEntity user in ViewData["users"] as List<StarEnergi.Models.EmployeeEntity>)
                        {
                            if (isEdit && user.id == Int32.Parse(ir.field_manager == null ? "0" : ir.field_manager))
                            {
                                <option value="@user.id" selected>@user.alpha_name</option>
                            }
                            else
                            {
                                <option value="@user.id">@user.alpha_name</option>
                            }
                        }
                    </select>
                    if (isEdit) {
                        if (has.Find(p => p.username == username).id == Int32.Parse(ir.field_manager == null ? "0" : ir.field_manager)) {
                            if (ir.field_manager_approve == null)
                            {
                        <input type="button" id="approve_field_manager" name="approve_field_manager" />
                            }
                        }
                        <img id="img_approve_field_manager" width="50" height="50" @(ir.field_manager_approve != null ? "style='display:none;'" : "style='display:block;'")  src="@ir.field_manager_approve"/>
                    }
                }
                else
                {
                    <input type="text" name="field_man_name" id="field_man_name" value="@(isEdit ? has.Find(p => p.id == Int32.Parse(ir.field_manager)).alpha_name : "")" disabled style="width:166px"/>
                    <img id="img_approve_field_manager" width="50" height="50" @(ir.field_manager_approve != null ? "style='display:none;'" : "style='display:block;'")  src="@ir.field_manager_approve"/>
                }
            </td>
            <td style="width:16.67%">
                @(Html.Telerik().DatePicker()
                        .Name("date_field_man")
                        .HtmlAttributes(new { id = "ddatetime_wrapper", style = "width:161px" })
                        .Value(isEdit ? ir.field_manager_date : DateTime.Now)
                        .Enable(li.Exists(p => p.role == 6) && (!isEdit || ir.field_manager_approve == null) && !isView ? true : false)
                )
            </td>
        </tr>
        <tr>
            <td style="width:16.67%" class="right">
                <h5>SHE Representative</h5>
            </td>
            <td style="width:20%" class="right">
                @if (li.Exists(p => p.role == 6) && !isView)
                {
                    <select id="loss_control_name" name="loss_control_name" @(isEdit && ir.loss_control_approve != null ? "disabled" : "")>
                        <option value="" selected disabled>Choose One</option>
                        @foreach (StarEnergi.Models.EmployeeEntity user in ViewData["users"] as List<StarEnergi.Models.EmployeeEntity>)
                        {
                            if (isEdit && user.id == Int32.Parse(ir.loss_control == null ? "0" : ir.loss_control))
                            {
                                <option value="@user.id" selected>@user.alpha_name</option>
                            }
                            else
                            {
                                <option value="@user.id">@user.alpha_name</option>
                            }
                        }
                    </select>
                    if (isEdit)
                    {
                       if (has.Find(p => p.username == username).id == Int32.Parse(ir.loss_control == null ? "0" : ir.loss_control)) {
                            if (ir.loss_control_approve == null)
                            {
                        <input type="button" id="approve_loss_control" name="approve_loss_control" />
                            }
                        }
                        <img id="img_approve_loss_control" width="50" height="50" @(ir.loss_control_approve != null ? "style='display:none;'" : "style='display:block;'")  src="@ir.loss_control_approve"/>
                    }
                }
                else
                {
                    <input type="text" name="loss_control_name" id="loss_control_name" value="@(isEdit ? has.Find(p => p.id == Int32.Parse(ir.loss_control)).alpha_name : "")" disabled style="width:166px"/>
                    <img id="img_approve_loss_control" width="50" height="50" @(ir.loss_control_approve != null ? "style='display:none;'" : "style='display:block;'")  src="@ir.loss_control_approve"/>
                }
            </td>
            <td style="width:13.33%" class="right">
                @(Html.Telerik().DatePicker()
                        .Name("date_loss_control")
                        .HtmlAttributes(new { id = "datetime_wrapper", style = "width:161px" })
                        .Value(isEdit ? ir.loss_date : DateTime.Now)
                        .Enable(li.Exists(p => p.role == 6) && (!isEdit || ir.loss_control_approve == null) && !isView ? true : false)
                )
            </td>
            <td class="right" colspan="3">
                &nbsp;
            </td>
        </tr>
    </tbody>
</table>
<br />
<table id="tabImAct4" class="tabs" style="width:980px" cellspacing="0" cellpadding="0">
    <tbody style="width:100%">
        <tr>
            <td style="width:16.67%" class="right">
                <h5>Investigation Required?</h5>
            </td>
            <td style="width:8.33%">
                <input type="radio" name="investigation" id="investigation_1" value="1" disabled @(isEdit ? ir.investigation == 1 ? "checked" : "" : "")/>yes
            </td>
            <td style="width:8.33%" class="right">
                <input type="radio" name="investigation" id="investigation_0" value="0" disabled @(isEdit ? (ir.investigation == 0 || ir.investigation == null) ? "checked" : "" : "checked")/>no
            </td>
            <td style="width:16.67%" class="right">
                <h5>Investigation Request by</h5>
            </td>
            <td style="width:16.67%" class="right">
                <input type="hidden" name="request_name_hid" id="request_name_hid" value="@(isEdit ? ir.investigation_req == null || ir.investigation_req == "null" ? "" : ir.investigation_req : "")"/>
                <input type="text" name="request_name" id="request_name" value="@(isEdit ? ir.investigation_req == null || ir.investigation_req == "null" ? "" : has.Find(p => p.id == Int32.Parse(ir.investigation_req)).alpha_name : "")" disabled style="width:166px"/>
            </td>
            <td style="width:16.67%" class="right">
                <h5>Investigation Lead by</h5>
            </td>
            <td style="width:16.67%" class="right">
                @if (li.Exists(p => p.role == 6) && !isView)
                {
                    <select id="lead_name" name="lead_name" @(isEdit && ir.investigation == 1 ? "" : "disabled")>
                        <option value="" selected disabled>Choose One</option>
                        @foreach (StarEnergi.Models.EmployeeEntity user in ViewData["users"] as List<StarEnergi.Models.EmployeeEntity>)
                        {
                            if (user.level == 1) {
                                if (isEdit && user.id == Int32.Parse(ir.lead_name == null ? "0" : ir.lead_name))
                                {
                                    <option value="@user.id" selected>@user.alpha_name</option>
                                }
                                else
                                {
                                    <option value="@user.id">@user.alpha_name</option>
                                }
                            }
                        }
                    </select>
                }
                else
                {
                    <input type="text" name="lead_name" id="lead_name" value="@(isEdit ? has.Find(p => p.id == Int32.Parse(ir.lead_name)).alpha_name : "")" disabled style="width:166px"/>
                }
            </td>
        </tr>
    </tbody>
</table>
<br/>
<div class="submit">
    @if(!isView) {
	    <input name="Submit" value="Simpan" type="submit" onclick="save()"/>
    }
        <input type="button" value="Batal" onclick="back()"/>
        @if (isEdit)
        {
            <button type="button" value="Print Incident Report" onclick="window.open('@Url.Action("printIR", "Incident", new { id = id })','_newtab');">
                @Html.ActionLink("Print Incident Report", "printIR", "Incident", new { id = id }, new { target = "_blank", id = "link", onclick = "window.open(this.href,'_blank');" })
            </button>
            if(!isView) {
                <input type="button" id="attachment" name="attachment" />
            }
        }
</div>
<br/>
<b>Attachment(s):</b>
<div class="attachment" id="atch">

</div>    
<br/>
</div>
<script type="text/javascript" src="@Url.Content("~/Scripts/jquery.uploadify.min.js")"></script>
<script type="text/javascript">
    var isInv = '@li.Exists(p => p.role == (int)StarEnergi.Config.role.SHE)';
    var isVV = '@li.Exists(p => p.role == (int)StarEnergi.Config.role.APPROVALIR)';
    var isEdit = '@isEdit';
    var has = Array();
    @foreach(StarEnergi.Models.EmployeeEntity ue in ViewData["users"] as List<StarEnergi.Models.EmployeeEntity>) {
        <text>has["@ue.id"] = '@ue.position';</text>
    }

    $('#approve_loss_control').uploadify({
        'swf': '@Url.Content("~/Content/image/uploadify/uploadify.swf")',
        'uploader': '@Url.Action("approveLossControl","Incident", new { id = id })',
        'buttonText': 'Approve',
        'width': 60,
        'height': 25,
        'fileTypeExts': '*.jpg;*.jpeg;*.png;*.gif;',
        'onUploadSuccess': function (file, data, response) {
            var dat = jQuery.parseJSON(data);
            $('#approve_loss_control').hide();
            $('#img_approve_loss_control').attr('src', dat.path);
            $('#img_approve_loss_control').css('display', 'block');
            $('#loss_control_name').prop('disabled', true);
            $('#date_loss_control').prop('disabled', true);
        }
    });

    $('#approve_superintendent').uploadify({
        'swf': '@Url.Content("~/Content/image/uploadify/uploadify.swf")',
        'uploader': '@Url.Action("approveSuperintendent","Incident", new { id = id })',
        'buttonText': 'Approve',
        'width': 60,
        'height': 25,
        'fileTypeExts': '*.jpg;*.jpeg;*.png;*.gif;',
        'onUploadSuccess': function (file, data, response) {
            var dat = jQuery.parseJSON(data);
            $('#approve_superintendent').hide();
            $('#img_approve_superintendent').attr('src', dat.path);
            $('#img_approve_superintendent').css('display', 'block');
            $('#sup_name').prop('disabled', true);
            $('#date_sup').prop('disabled', true);
        }
    });

    $('#approve_field_manager').uploadify({
        'swf': '@Url.Content("~/Content/image/uploadify/uploadify.swf")',
        'uploader': '@Url.Action("approveFieldManager","Incident", new { id = id })',
        'buttonText': 'Approve',
        'width': 60,
        'height': 25,
        'fileTypeExts': '*.jpg;*.jpeg;*.png;*.gif;',
        'onUploadSuccess': function (file, data, response) {
            var dat = jQuery.parseJSON(data);
            $('#approve_field_manager').hide();
            $('#img_approve_field_manager').attr('src', dat.path);
            $('#img_approve_field_manager').css('display', 'block');
            $('#field_man_name').prop('disabled', true);
            $('#date_field_man').prop('disabled', true);
            back();
        }
    });

    $('#attachment').uploadify({
        'swf': '@Url.Content("~/Content/image/uploadify/uploadify.swf")',
        'uploader': '@Url.Action("attachment","Incident", new { id = id })',
        'buttonText': 'Attach',
        'width': 60,
        'height': 25,
        'fileTypeExts': '*.jpg;*.jpeg;*.png;*.gif;',
        'onUploadSuccess': function (file, data, response) {
            var dat = jQuery.parseJSON(data);
            var has = dat.files.split(";;");
            $('#atch').empty();
            for (var f in has) {
                if (has[f] != "") {
                    $('#atch').append('<a href="' + dat.path + has[f] + '">' + has[f] + '</a><br/>');
                }
            }
        }
    });

    $(document).ready(function () {
        bindpre();
        bindack();
        bindatch();
    });

    function bindatch() {
        $.post("Incident/Atch", { id: '@id' }, function (data) {
            var has = data.files.split(";;");
            $('#atch').empty();
            for (var f in has) {
                if (has[f] != "") {
                    $('#atch').append('<a href="' + data.path + has[f] + '">' + has[f] + '</a><br/>');
                }
            }
        });
    }

    function investigation() {
        var incident_type = "";
        var checkBoxes = $("input[name='incident_type']");
        $.each(checkBoxes, function () {
            if ($(this).attr('checked')) {
                incident_type = $(this).val();
            }
        });
        if (incident_type == "") {
            incident_type = $('#other_text').val();
        }

        var potential_loss = "0";
        var checkBoxes = $("input[name='potential_loss']");
        $.each(checkBoxes, function () {
            if ($(this).attr('checked')) {
                potential_loss = $(this).val();
            }
        });

        var probability = "0";
        var checkBoxes = $("input[name='probability']");
        $.each(checkBoxes, function () {
            if ($(this).attr('checked')) {
                probability = $(this).val();
            }
        });



        if (incident_type == "Injury / Illness") {
            if (!$('#investigation_1').attr('checked')) {
                $('#investigation_1').attr('checked', true);
                $('#request_name').val('@has.Find(p => p.username == HttpContext.Current.Session["username"].ToString()).alpha_name');
                $('#request_name_hid').val('@has.Find(p => p.username == HttpContext.Current.Session["username"].ToString()).id');
                alert('Investigation required!');
            }
        } else {
            if (parseInt(potential_loss) == 0 || parseInt(probability) == 0) {
                $('#investigation_0').attr('checked', true);
                $('#request_name').val('');
                $('#request_name_hid').val('');
            } else if (parseInt(potential_loss) + parseInt(probability) <= 4) {
                if (!$('#investigation_1').attr('checked')) {
                    $('#investigation_1').attr('checked', true);
                    $('#request_name').val('@has.Find(p => p.username == HttpContext.Current.Session["username"].ToString()).alpha_name');
                    $('#request_name_hid').val('@has.Find(p => p.username == HttpContext.Current.Session["username"].ToString()).id');
                    alert('Investigation required!');
                }
            } else {
                $('#investigation_0').attr('checked', true);
                $('#request_name').val('');
                $('#request_name_hid').val('');
            }
    }
}

function save() {
    if (isInv == 'True') {
        if (validate()) {
            var type_report;
            var checkBoxes = $("input[name='type_report']");
            $.each(checkBoxes, function () {
                if ($(this).attr('checked')) {
                    type_report = $(this).val();
                }
            });

            var incident_type = "";
            var checkBoxes = $("input[name='incident_type']");
            $.each(checkBoxes, function () {
                if ($(this).attr('checked')) {
                    incident_type = $(this).val();
                }
            });
            if (incident_type == "") {
                incident_type = $('#other_text').val();
            }

            var actual_loss = "";
            var checkBoxes = $("input[name='actual_loss']");
            $.each(checkBoxes, function () {
                if ($(this).attr('checked')) {
                    actual_loss = $(this).val();
                }
            });

            var potential_loss = "";
            var checkBoxes = $("input[name='potential_loss']");
            $.each(checkBoxes, function () {
                if ($(this).attr('checked')) {
                    potential_loss = $(this).val();
                }
            });

            var probability = "";
            var checkBoxes = $("input[name='probability']");
            $.each(checkBoxes, function () {
                if ($(this).attr('checked')) {
                    probability = $(this).val();
                }
            });

            var values = {
                facility: $('#bus_unit').val(),
                incident_location: $('#inc_loc').val(),
                reference_number: $('#ref_num').val(),
                type_of_report: type_report,
                date_incident: $('#date_incident').val(),
                title: $('#titles').val(),
                incident_type: incident_type,
                actual_loss_severity: actual_loss,
                potential_loss_severity: potential_loss,
                probability: probability,
                factual_information: $('#facts').val(),
                cost_estimate: $('#cost').val(),
                immediate_action: $('#imme_action').val(),
                prepared_by: $('#prepared').val(),
                ack_supervisor: $('#ack').val(),
                prepare_date: $('#date_prepared').val(),
                ack_date: $('#date_ack').val(),
                superintendent: $('#sup_name').val(),
                loss_control: $('#loss_control_name').val(),
                field_manager: $('#field_man_name').val(),
                doms: $('#doms_name').val(),
                superintendent_date: $('#date_sup').val(),
                loss_date: $('#date_loss_control').val(),
                field_manager_date: $('#date_field_man').val(),
                doms_date: $('#date_doms').val(),
                investigation: $('input:radio[name=investigation]:checked').val(),
                investigation_req: $('#request_name_hid').val(),
                lead_name: $('#lead_name').val()
            }
            $('#realmod_save').css("display", "block");
            if (isEdit == 'False') {
                $.post("Incident/Add", values, function (data) {
                    if (data != undefined) {
                        $('#realmod_save').css("display", "none");
                        alert('incident report berhasil disimpan');
                        back();
                    } else {
                        $('#realmod_save').css("display", "none");
                        alert('Gagal menambahkan data event');
                    }
                });
            } else if (isEdit == 'True') {
                var ids = '@id';
                values.id = ids;
                $.post("Incident/Edit", values, function (data) {
                    if (data != undefined) {
                        $('#realmod_save').css("display", "none");
                        if (isVV == 'False') alert('incident report berhasil diubah');
                        back();
                    } else {
                        $('#realmod_save').css("display", "none");
                        if (isVV == 'False') alert('Gagal mengubah incident report');
                    }
                });
            }
        }
    }
}
    function back() {
        $('#content').load('Incident/Index');
    }

    function validate() {
        return true;
    }

    function bindpre() {
        document.getElementById('pre_job').innerHTML = has[document.getElementById('prepared').value];
    }

    function bindack() {
        document.getElementById('ack_job').innerHTML = has[document.getElementById('ack').value];
    }

    var editor_factual_information = CKEDITOR.replace('factual_information', {
        uiColor: '#14B8C4',
        filebrowserBrowseUrl: '/Scripts/Filemanager/index.html',
        filebrowserImageBrowseUrl: '/Scripts/Filemanager/index.html?type=Images',
        filebrowserFlashBrowseUrl: '/Scripts/Fileanager/index.html?type=Flash',
        removePlugins: 'about'
    });

    var editor_immediate_action = CKEDITOR.replace('immediate_action', {
        uiColor: '#14B8C4',
        filebrowserBrowseUrl: '/Scripts/Filemanager/index.html',
        filebrowserImageBrowseUrl: '/Scripts/Filemanager/index.html?type=Images',
        filebrowserFlashBrowseUrl: '/Scripts/Fileanager/index.html?type=Flash',
        removePlugins: 'about'
    });

</script>
