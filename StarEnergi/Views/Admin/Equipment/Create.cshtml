@model StarEnergi.Models.equipment

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $("#installed_date").val('@DateTime.Now');
        $("#sertifikasi").val('@DateTime.Now');
        $("#installed_date").prop('disabled', true);
        $("#sertifikasi").prop('disabled', true);
        $("#id_tag_type").addClass('input-dropdown');
        $.post("Equipment/GetOCR",
           function (data) {
               hasil = eval(data);
               $("#id_ocr").html("");
               $('<option data-score="0" data-value="0" value="">-- Select OCR --</option>').appendTo("#id_ocr");
               for (var i = 0; i < hasil.length; i++) {
                   $("<option data-value='" + hasil[i]['ocr_value'] + "'  data-score='" + hasil[i]['ocr_score'] + "' value='" + hasil[i]['id'] + "'>" + hasil[i]['ocr_value'] + "-" + hasil[i]['nama'] + "</option>").appendTo("#id_ocr");
               }
           }
       );

        $.post("Equipment/GetAFP",
           function (data) {
               hasil = eval(data);
               $("#id_afp").html("");
               $('<option data-score="0" data-value="0" value="">-- Select AFP --</option>').appendTo("#id_afp");
               for (var i = 0; i < hasil.length; i++) {
                   $("<option data-value='" + hasil[i]['afp_value'] + "'  data-score='" + hasil[i]['afp_score'] + "' value='" + hasil[i]['id'] + "'>" + hasil[i]['afp_value'] + "-" + hasil[i]['nama'] + "</option>").appendTo("#id_afp");
               }
           }
       );

        $("#id_ocr").change(function () {
            var ocr = $("#id_ocr").find('option:selected');
            var ocrScore = parseFloat(ocr.data('score'));
            var ocrValue = parseFloat(ocr.data('value'));
            console.log(parseFloat('@ViewBag.scr'))
            var totalAcr = parseFloat('@ViewBag.scr'.replace(',','.')) * ocrValue;
            $("#acr_label").val(totalAcr)
        });

        $("#id_afp").change(function () {
            var afp = $("#id_afp").find('option:selected');
            var afpScore = parseFloat(afp.data('score'));
            var afpValue = parseFloat(afp.data('value'));
            var totalMpi = parseFloat($("#acr_label").val())* afpValue;
            $("#mpi_label").val(totalMpi)
        });
    });

    function save() {
        var values =
        {
            @*"Tag_num": $('#tag_num').val(),
            "Pnid_tag_num": $('#pnid_tag_num').val(),
            "Nama"              : $('#nama').val(),
            "Econ"              : $('#econ').val(),
            "Ram_crit"          : $('#ram_crit').val(),
            "Id_discipline"     : $('#id_discipline').val(),
            "Installed_date"    : $('#installed_date').val(),
            "Sertifikasi"       : $('#sertifikasi').val(),
            "Warranty"          : $('#warranty').val(),
            "Vendor"            : $('#vendor').val(),
            "Id_tag_type"       : $('#id_tag_type').val(),
            "Data_sheet_path"   : $('.t-filename').attr("title"),
            "id_equipment_group": eval('@ViewBag.id_equipment_group')*@

            "nama": $('#nama').val(),
            "tag_num": $('#tag_num').val(),
            "functional_code": $('#functional_code').val(),
            "installed_date": $('#installed_date').val(),
            "id_ocr": $('#id_ocr').val(),
            "acr": $('#acr_label').val().replace('.',','),
            "id_afp": $('#id_afp').val(),
            "mpi": $('#mpi_label').val().replace('.', ','),
            "id_tag_type": $('#id_tag_type').val(),
            "id_discipline": $('#id_discipline').val(),
            "sertifikasi": $('#sertifikasi').val(),
            "id_equipment_group": eval('@ViewBag.id_equipment_group')
        }

        $.post("equipment/Create", values, function (data) {
            if (data != undefined) {
                if (data["status"] == 0) {
                    var value = 'EQUIPMENT;' + data["message"];
                    $('#content').load('equipment/details/' + data["message"]);
                    //AppendItem($('#tag_num').val(), value);                    
                    AppendItem($('#nama').val(), value);         
                    DeselectNode();
                    SelectNode(value);
                } else if (data["status"] == 1) {
                    clearError();
                    $.each(data, function (index, value) {
                        if (index != "status") {
                            //error render
                            $('#'+index).next('div').html(value);
                        }
                    });
                } else {
                    alert("Data equipment sudah terdaftar");
                }
            } else {
                alert('Gagal menambahkan data equipment');
            }
        });

    }

    function clearError() {
        //var field = ["tag_num", "nama", "econ", "ram_crit", "id_discipline", "installed_date", "sertifikasi", "warranty", "vendor", "id_tag_type", "data_sheet_path"];
        var field = ["nama", "tag_num", "functional_code", "installed_date", "id_ocr", "acr", "id_afp", "mpi", "id_tag_type", "id_discipline", "sertifikasi"];
        $.each(field, function (index, value) {
            $('#'+value).next('div').html('');
        });
    }

    $(document).ready(function () {
        $("#id_tag_type").bind("change", function () {
            getSubClass($("#id_tag_type").val(), '#loading-class', '#id_discipline', "");
        });
    })
</script>

<div class="fieldR">* Required Field</div>

@Html.ValidationSummary(true)
<fieldset>
    <legend>Equipment</legend>

    @*<div class="editor-label">
        @Html.LabelFor(model => model.tag_num)<a class="bintang">*</a>
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.tag_num)
        <div class="errorM"></div>
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.pnid_tag_num)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.pnid_tag_num)
        <div class="errorM"></div>
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.nama)<a class="bintang">*</a>
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.nama)
        <div class="errorM"></div>
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.econ)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.econ)
        <div class="errorM"></div>
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.ram_crit)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.ram_crit)
        <div class="errorM"></div>
    </div>
   
    <div class="editor-label">
        @Html.LabelFor(model => model.id_tag_type)
    </div>
    <div class="editor-field">
        @Html.DropDownList("id_tag_type", String.Empty)
        <span id="loading-class" style="display:none;"><img src="../../../Content/image/loading.gif"></span>
        <div class="errorM"></div>
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.id_discipline)
    </div>
    <div class="editor-field">
        <select name="id_discipline" id="id_discipline">
            <option value="">-- Select Class First --</option>
        </select>
        <div class="errorM"></div>
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.installed_date)
    </div>
    <div class="editor-field">
        @(Html.Telerik().DateTimePickerFor(model => model.installed_date)
              .HtmlAttributes(new { id = ViewData.TemplateInfo.GetFullHtmlFieldName(string.Empty) + "_wrapper" })
              .Value(DateTime.Now)
        )
        <div class="errorM"></div>
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.sertifikasi)
    </div>
    <div class="editor-field">
        @(Html.Telerik().DateTimePickerFor(model => model.sertifikasi)
              .HtmlAttributes(new { id = ViewData.TemplateInfo.GetFullHtmlFieldName(string.Empty) + "_wrapper" })
              .Value(DateTime.Now)
        )<div class="errorM"></div>
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.warranty)
    </div>
    <div class="editor-field">
        @(Html.Telerik().IntegerTextBoxFor(model => model.warranty)
            .Value(0)
        )&nbsp;Hour
        <div class="errorM"></div>
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.vendor)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.vendor)
        <div class="errorM"></div>
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.data_sheet_path)
    </div>
    <div class="editor-field">
        @(Html.Telerik().Upload()
            .Name("attachments")
            .Multiple(false)
            .Async(async => async
                .Save("Save", "Upload")
                .Remove("Remove", "Upload")
                .AutoUpload(true)
            )
        )
        <div class="errorM"></div>
    </div>*@

    <div class="editor-label">
        @Html.LabelFor(model => model.nama)<a class="bintang">*</a>
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.nama)
        <div class="errorM"></div>
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.tag_num)<a class="bintang">*</a>
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.tag_num)
        <div class="errorM"></div>
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.functional_code)
    </div>
    <div class="editor-field">
        @ViewBag.unitFuncCode@ViewBag.systemFuncCode@Html.EditorFor(model => model.functional_code)
        <div class="errorM"></div>
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.installed_date)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.installed_date)
        <div class="errorM"></div>
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.id_ocr)
    </div>
    <div class="editor-field">
        <select name="id_ocr" id="id_ocr" class="input-dropdown">
            <option value="">-- Pilih OCR --</option>
        </select>
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.acr)
    </div>
    <div class="editor-field">
        <input id="acr_label" class="input-dropdown" disabled></input>
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.id_afp)
    </div>
    <div class="editor-field">
        <select name="id_afp" id="id_afp" class="input-dropdown">
            <option value="">-- Pilih AFP --</option>
        </select>
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.mpi)
    </div>
    <div class="editor-field">
        <input id="mpi_label" class="input-dropdown" disabled></input>
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.id_tag_type)
    </div>
    <div class="editor-field">
        @Html.DropDownList("id_tag_type", String.Empty)
        <span id="loading-class" style="display:none;"><img src="../../../Content/image/loading.gif"></span>
        <div class="errorM"></div>
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.id_discipline)
    </div>
    <div class="editor-field">
        <select name="id_discipline" id="id_discipline" class="input-dropdown">
            <option value="">-- Select Class First --</option>
        </select>
        <div class="errorM"></div>
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.sertifikasi)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.sertifikasi)
        <div class="errorM"></div>
    </div>

    <p>
        <input type="submit" value="Create" onclick="save()"/>
    </p>
</fieldset>
