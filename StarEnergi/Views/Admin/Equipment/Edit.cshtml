@{
    //calculate width
    int baseWidth = 200;
    int length = (((ViewBag.areaFuncCode==null)?0:ViewBag.areaFuncCode.Length) +
        ((ViewBag.unitFuncCode == null) ? 0 : ViewBag.unitFuncCode.Length) +
        ((ViewBag.systemFuncCode == null) ? 0 : ViewBag.systemFuncCode.Length)) * 8;
    int width = baseWidth - length;
    <text>
        <style>
        .text-box-width {
        width: @(width)px !important;
    }
        </style>

    </text>
}

@model StarEnergi.Models.EquipmentEntity
<script type="text/javascript">
    $(document).ready(function () {
        @*$('#updateBOM').load('BuildOfMAterial/RenderUpdate/?id='+'@Model.equipment.id'+'&level=5');*@
        $('#updateBOM').load('BuildOfMAterial/RenderUpdate/?id=' + '@Model.equipment.id' + '&type=equip');
    })

</script>

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $("#equipment_installed_date").prop('disabled', true);
        $("#equipment_sertifikasi").prop('disabled', true);
        $("#id_tag_type").addClass('input-dropdown');
        var oldAcr = $("#equipment_acr").val();
        var oldMpi = $("#equipment_mpi").val();
        if(oldAcr !== null)
            $("#acr_label").val(oldAcr.replace(',', '.'));
        if(oldMpi !== null)
            $("#mpi_label").val(oldMpi.replace(',', '.'));

        $.post("Equipment/GetOCR",
           function (data) {
               hasil = eval(data);
               $("#id_ocr").html("");
               $('<option data-score="0" data-value="0" value="">-- Select OCR --</option>').appendTo("#id_ocr");
               for (var i = 0; i < hasil.length; i++) {
                   $("<option data-value='" + hasil[i]['ocr_value'] + "'  data-score='" + hasil[i]['ocr_score'] + "' value='" + hasil[i]['id'] + "'>" + hasil[i]['ocr_value'] + "-" + hasil[i]['nama'] + "</option>").appendTo("#id_ocr");
               }
               $("#id_ocr").val('@ViewBag.ocr');
           }
       );

        $.post("Equipment/GetAFP",
           function (data) {
               hasil = eval(data);
               $("#id_afp").html("");
               $('<option data-score="0" data-value="0" value="">-- Select AFP --</option>').appendTo("#id_afp");
               for (var i = 0; i < hasil.length; i++) {
                   $("<option data-value='" + hasil[i]['afp_value'] + "'  data-score='" + hasil[i]['afp_score'] + "' value='" + hasil[i]['id'] + "'>" + hasil[i]['afp_value'] + "-" + hasil[i]['nama'] + "</option>").appendTo("#id_afp");
               }
               $("#id_afp").val('@ViewBag.afp');
           }
       );

        $(".input-dropdown").change(function () {
            var ocr = $("#id_ocr").find('option:selected');
            var ocrScore = parseFloat(ocr.data('score'));
            var ocrValue = parseFloat(ocr.data('value'));
            var scrValue = '@ViewBag.scr.ToString().Replace(',', '.')';
            if(scrValue == null)            
                scr = 0;            
            var totalAcr = parseFloat(scrValue) * ocrValue;
            $("#acr_label").val(totalAcr)

            var afp = $("#id_afp").find('option:selected');
            var afpScore = parseFloat(afp.data('score'));
            var afpValue = parseFloat(afp.data('value'));
            var acr = $("#acr_label").val();
            if(acr == "")
                acr = 0;
            var totalMpi = parseFloat(acr)* afpValue;
            $("#mpi_label").val(totalMpi)
        });
    });
    function save() {
        var values =
        {
            @*"Id": $('#equipment_id').val(),
            "Tag_num": $('#equipment_tag_num').val(),
            "pnid_tag_num": $('#equipment_pnid_tag_num').val(),
            "Nama": $('#equipment_nama').val(),
            "Econ": $('#equipment_econ').val(),
            "Ram_crit": $('#equipment_ram_crit').val(),
            "Id_discipline": $('#id_discipline').val(),
            "Installed_date": $('#equipment_installed_date').val(),
            "Sertifikasi": $('#equipment_sertifikasi').val(),
            "Warranty": $('#equipment_warranty').val(),
            "Vendor": $('#equipment_vendor').val(),
            "Id_tag_type": $('#id_tag_type').val(),
            "Data_sheet_path": $('.t-filename').attr("title"),
            "id_equipment_group": eva('@ViewBag.id_equipment_group')*@

            "id": $('#equipment_id').val(),
            "nama": $('#equipment_nama').val(),
            "tag_num": $('#equipment_tag_num').val(),
            "functional_code": $('#equipment_functional_code').val(),
            "installed_date": $('#equipment_installed_date').val(),
            "id_ocr": $('#id_ocr').val(),
            "acr": $('#acr_label').val().replace('.', ','),
            "id_afp": $('#id_afp').val(),
            "mpi": $('#mpi_label').val().replace('.', ','),
            "id_tag_type": $('#id_tag_type').val(),
            "id_discipline": $('#id_discipline').val(),
            "sertifikasi": $('#equipment_sertifikasi').val(),
            "assessment_date":$('#equipment_assessment_date').val(),
            "id_equipment_group": eval('@ViewBag.id_equipment_group')
        }        
        $.post("Equipment/Edit", values, function (data) {
            if (data != undefined) {
                if (data["status"] == 0) {
                    var html = $('#TreeSBS').find('input.t-input[name="itemValue"][value="' + data["message"] + '"]').prev().find('img').attr('src');
                    var image = '<img class="t-image" src="' + html + '" alt="image">';
                    $('#TreeSBS').find('input.t-input[name="itemValue"][value="' + data["message"] + '"]').prev().html(image + $('#equipment_nama').val());
                    $('#content').load('Equipment/details/' + $('#equipment_id').val());
                } else {
                    clearError();
                    $.each(data, function (index, value) {
                        if (index != "status") {
                            //error render
                            if ((index == 'id_tag_type') || (index == 'id_discipline'))
                                $('#' + index).next('div').html(value);
                            else
                                $('#equipment_' + index).next('div').html(value);
                        }
                    });
                }
            } else {
                alert('Gagal melakukan edit equipment');
            }
        });

    }

    function clearError() {
        //var field = ["tag_num", "nama", "econ", "ram_crit", "id_discipline", "installed_date", "sertifikasi", "warranty", "vendor", "id_tag_type", "data_sheet_path"];
        var field = ["nama", "tag_num", "functional_code", "installed_date", "id_ocr", "acr", "id_afp", "mpi", "id_tag_type", "id_discipline", "sertifikasi"];
        $.each(field, function (index, value) {
            $('#' + value).next('div').html('');
        });
    }

    function OnRowDataBound(e) {
        var dataItem = e.dataItem;
        var row = e.row;
        if(dataItem.status == 1){
            row.cells[5].innerHTML = 'Running';
        } else {
            row.cells[5].innerHTML = 'Down';
            row.cells[5].style.color = 'red';
        }

    }

    function OnEdit(e) {
        console.log(e);
        var tag_num = e.dataItem.tag_num;
        if (e.mode == "edit") {
            $('div.t-widget.t-dropdown.t-header').parent().html(tag_num);
        }
    }

    function OnSave(e) {
        console.log(e.values);
        var values = {
            "id_eq"     : e.values.id,
            "id_part"   : e.values.id_parts
        }
        $.post("Equipment/CheckPart", values, function (data) {
            if (!data) {
                alert("Part number sudah terdaftar");
            }
        });
    }

    function addPart() {
        $('#content').load('Part/Index/' + $('#equipment_id').val());
    }

    $(document).ready(function () {
        getSubClass('@Model.equipment.id_tag_type', '#loading-class', '#id_discipline', '@Model.equipment.id_discipline');
        $("#id_tag_type").bind("change", function () {
            getSubClass($("#id_tag_type").val(), '#loading-class', '#id_discipline', '@Model.equipment.id_discipline');
        });
    })
</script>
<div class="fieldR">* Required Field</div>
@Html.ValidationSummary(true)
<fieldset>
    <legend>Equipment</legend>

    @Html.HiddenFor(model => model.equipment.id)
    @Html.HiddenFor(model => model.equipment.acr)
    @Html.HiddenFor(model => model.equipment.mpi)

    @*<div class="editor-label">
            @Html.LabelFor(model => model.equipment.tag_num)<a class="bintang">*</a>
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.equipment.tag_num)
            <div class="errorM"></div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.equipment.pnid_tag_num)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.equipment.pnid_tag_num)
            <div class="errorM"></div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.equipment.nama)<a class="bintang">*</a>
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.equipment.nama)
            <div class="errorM"></div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.equipment.econ)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.equipment.econ)
            <div class="errorM"></div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.equipment.ram_crit)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.equipment.ram_crit)
            <div class="errorM"></div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.equipment.id_tag_type)
        </div>
        <div class="editor-field">
            @Html.DropDownList("id_tag_type", string.Empty)
            <span id="loading-class" style="display:none;"><img src="../../../Content/image/loading.gif"></span>
            <div class="errorM"></div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.equipment.id_discipline)
        </div>
        <div class="editor-field">
            <select name="id_discipline" id="id_discipline">
                <option value="">-- Select Class First --</option>
            </select>
            <div class="errorM"></div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.equipment.installed_date)
        </div>
        <div class="editor-field">
            @(Html.Telerik().DateTimePickerFor(model => model.equipment.installed_date)
                  .HtmlAttributes(new { id = ViewData.TemplateInfo.GetFullHtmlFieldName(string.Empty) + "_wrapper" })
            )
            <div class="errorM"></div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.equipment.sertifikasi)
        </div>
        <div class="editor-field">
            @(Html.Telerik().DateTimePickerFor(model => model.equipment.sertifikasi)
                  .HtmlAttributes(new { id = ViewData.TemplateInfo.GetFullHtmlFieldName(string.Empty) + "_wrapper" })
            )
           <div class="errorM"></div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.equipment.warranty)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.equipment.warranty)
            <div class="errorM"></div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.equipment.vendor)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.equipment.vendor)
            <div class="errorM"></div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.equipment.data_sheet_path)<br />
        </div>
        <div class="editor-field">
            @{
                if (Model.equipment.data_sheet_path == null)
                {
                    <span>-</span>
                }
                else
                {
                    @Html.DisplayFor(model => model.equipment.data_sheet_path)
                }

             }
        </div>

        <div >
            @(Html.Telerik().Upload()
                .Name("attachments")
                .Multiple(false)
                .Async(async => async
                    .Save("Save", "Upload")
                    .Remove("Remove", "Upload")
                    .AutoUpload(true)
                )
            )
            <!--@Html.EditorFor(model => model.equipment.data_sheet_path)-->
            <div class="errorM"></div>
        </div>
    *@

    <div class="editor-label">
        @Html.LabelFor(model => model.equipment.nama)<a class="bintang">*</a>
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.equipment.nama)
        <div class="errorM"></div>
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.equipment.tag_num)<a class="bintang">*</a>
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.equipment.tag_num)
        <div class="errorM"></div>
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.equipment.functional_code)
    </div>
    <div class="editor-field">
        <span class="font-monospace">@ViewBag.areaFuncCode@ViewBag.unitFuncCode@ViewBag.systemFuncCode</span>@Html.TextBoxFor(model => model.equipment.functional_code, new { @class = "text-box-width" })
        <div class="errorM"></div>
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.equipment.installed_date)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.equipment.installed_date)
        <div class="errorM"></div>
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.equipment.id_ocr)
    </div>
    <div class="editor-field">
        <select name="id_ocr" id="id_ocr" class="input-dropdown">
            <option value="">-- Pilih OCR --</option>
        </select>
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.equipment.acr)
    </div>
    <div class="editor-field">
        <input id="acr_label" class="input-dropdown" disabled></input>
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.equipment.id_afp)
    </div>
    <div class="editor-field">
        <select name="id_afp" id="id_afp" class="input-dropdown">
            <option value="">-- Pilih AFP --</option>
        </select>
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.equipment.mpi)
    </div>
    <div class="editor-field">
        <input id="mpi_label" class="input-dropdown" disabled></input>
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.equipment.id_tag_type)
    </div>
    <div class="editor-field">
        @Html.DropDownList("id_tag_type", String.Empty)
        <span id="loading-class" style="display:none;"><img src="../../../Content/image/loading.gif"></span>
        <div class="errorM"></div>
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.equipment.id_discipline)
    </div>
    <div class="editor-field">
        <select name="id_discipline" id="id_discipline" class="input-dropdown">
            <option value="">-- Select Class First --</option>
        </select>
        <div class="errorM"></div>
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.equipment.sertifikasi)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.equipment.sertifikasi)
        <div class="errorM"></div>
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.equipment.assessment_date)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.equipment.assessment_date)
        <div class="errorM"></div>
    </div>
    <p>
        <input type="submit" value="Save" onclick="save()" />
    </p>
</fieldset>
<div id="updateBOM">

</div>
