@model StarEnergi.Models.employee

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script type="text/javascript">
    function onSuccessSignature(data) {
        $('#img_signature').attr('src', data.response.path);
        $('#img_signature').css('display', 'block');
        $('#img_sign_src').val(data.response.path);
    }

    function save() {
        var values =
        {
            "Id": $('#id').val(),
            "employee_no": $('#employee_no').val(),
            "alpha_name": $('#alpha_name').val(),
            "position": $('#position').val(),
            "work_location": $('#work_location').val(),
            "dob": $('#dob').val(),
            "email": $('#email').val(),
            "dept_id": eval('@ViewBag.dept_id'),
            "department": $('#department').val(),
            "employee_dept": eval('@ViewBag.dept_id'),
            "signature": $('#img_sign_src').val()
        }

        $.post("EmployeeBoss/Edit", values, function (data) {
            if (data != undefined) {
                if (data["status"] == 0) {
                    var html = $('#TreeSBSEmployee').find('input.t-input[name="itemValue"][value="' + data["message"] + '"]').prev().find('img').attr('src');
                    var image = '<img class="t-image" src="' + html + '" alt="image">';
                    $('#TreeSBSEmployee').find('input.t-input[name="itemValue"][value="' + data["message"] + '"]').prev().html(image + $('#alpha_name').val());
                    $('#content').load('EmployeeBoss/details/' + $('#id').val());
                } else {
                    clearError();
                    $.each(data, function (index, value) {
                        if (index != "status") {
                            //error render
                            $('#' + index).next('div').html(value);
                        }
                    });
                }
            } else {
                alert('Gagal mengedit data employee');
            }
        });

    }

    function clearError() {
        var field = ["alpha_name", "employee_no", "location", "work_location", "dob"];
        $.each(field, function (index, value) {
            $('#' + value).next('div').html('');
        });
    }
</script>
<div class="fieldR">* Required Field</div>
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Employee</legend>

        @Html.HiddenFor(model => model.id)

        <div class="editor-label">
            @Html.LabelFor(model => model.employee_no)<a class="bintang">*</a>
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.employee_no)
            <div class="errorM"></div>
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.alpha_name)<a class="bintang">*</a>
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.alpha_name)
            <div class="errorM"></div>
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.department)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.department)
            <div class="errorM"></div>
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.position)<a class="bintang">*</a>
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.position)
            <div class="errorM"></div>
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.work_location)<a class="bintang">*</a>
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.work_location)
            <div class="errorM"></div>
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.dob)<a class="bintang">*</a>
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.dob)
            <div class="errorM"></div>
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.email)<a class="bintang">*</a>
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.email)
            <div class="errorM"></div>
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.signature)
        </div>
        <div class="editor-field">
            @(Html.Telerik().Upload()
                .Name("signature")
                .Async(async => async
                    .Save("saveSignature", "EmployeeBoss", new { id = Model.id })
                    .AutoUpload(true)
                    )
                .ClientEvents(events => events
                    .OnSuccess("onSuccessSignature"))
                .ShowFileList(false)
                .HtmlAttributes(new { @class = "signature" })
            )
            <img id="img_signature" width="100" height="100" @(Model.signature == null ? "style=display:none;" : "style=display:block;")  src="@Model.signature"/>
            <input id="img_sign_src" type="hidden" value ="@Model.signature" />
            <div class="errorM"></div>
        </div>
        <p>
            <input type="submit" value="Save" onclick="save()"/>
        </p>
    </fieldset>
