@using StarEnergi
@model IEnumerable<StarEnergi.Models.plant>
<script type="text/javascript">
    function onSelectTree(e) {
        var treeview = $('#TreeSBS').data('tTreeView');
        var value = treeview.getItemValue(e.item).split(';');
        if (value[0] == '@Config.TreeType.AREA') {
            //$('#content').load('foc/Create', { 'id': value[1]} );
            $('#content').load('Foc/Details/' + value[1]);
        } else if (value[0] == '@Config.TreeType.UNIT') {
            $('#content').load('Unit/Details/' + value[1]);
        } else if (value[0] == '@Config.TreeType.SYSTEM') {
            $('#content').load('System/Details/' + value[1]);
        } else if (value[0] == '@Config.TreeType.EQUIPMENT_GROUP') {
            $('#content').load('EquipmentGroup/Details/' + value[1]);
        } else if (value[0] == '@Config.TreeType.EQUIPMENTS') {
            $('#content').load('Equipment/Details/' + value[1]);
        } else if (value[0] == '@Config.TreeType.PART') {
            $('#content').load('SubEquipment/Details/' + value[1]);
        } else if (value[0] == '@Config.TreeType.COMPONENT') {
            $('#content').load('Component/Details/' + value[1]);
        } else if (value[0] == '@Config.TreeType.SUBCOMPONENT') {
            $('#content').load('SubComponent/Details/' + value[1]);
        } else {

        }
    }
</script>
   @(
    Html.Telerik().TreeView()
        .Name("TreeSBS")
        //.DragAndDrop(true)
        .BindTo(Model, mappings =>
        {
            mappings.For<StarEnergi.Models.plant>(binding => binding
                    .ItemDataBound((item, plant) =>
                    {
                        item.Text = plant.nama;
                        item.Value = Config.TreeType.PLANT + ";" + plant.id.ToString();
                        item.Expanded = true;
                        if (plant.focs.Count != 0) {
                            item.ImageUrl = ("~/Content/image/folder.png");
                        }else
                            item.ImageUrl = ("~/Content/image/file.png");
                    })
                    .Children(plant => plant.focs));
            
            mappings.For<StarEnergi.Models.foc>(binding => binding
                    .ItemDataBound((item, foc) =>
                    {
                        item.Text = foc.nama;
                        item.Value = Config.TreeType.AREA +";"+ foc.id.ToString();
                        if (foc.units.Count != 0)
                        {
                            item.ImageUrl = ("~/Content/image/folder.png");
                        }
                        else
                            item.ImageUrl = ("~/Content/image/file.png");
                       
                    })
                    .Children(foc => foc.units));

            mappings.For<StarEnergi.Models.unit>(binding => binding
                    .ItemDataBound((item, unit) =>
                    {
                        item.Text = unit.nama;
                        item.Value = Config.TreeType.UNIT + ";" + unit.id.ToString();
                        if (unit.systems.Count != 0)
                        {
                            item.ImageUrl = ("~/Content/image/folder.png");
                        }
                        else
                            item.ImageUrl = ("~/Content/image/file.png");
                    })
                    .Children(unit => unit.systems));
            
            mappings.For<StarEnergi.Models.system>(binding => binding
                   .ItemDataBound((item, system) =>
                   {
                       item.Text = system.nama;
                       item.Value = Config.TreeType.SYSTEM + ";" + system.id.ToString();
                       if (system.equipment_groups.Count != 0)
                       {
                           item.ImageUrl = ("~/Content/image/folder.png");
                       }
                       else
                           item.ImageUrl = ("~/Content/image/file.png");
                   })
                   .Children(system => system.equipment_groups));
            
            mappings.For<StarEnergi.Models.equipment_groups>(binding => binding
                  .ItemDataBound((item, equipment_groups) =>
                  {
                      item.Text = equipment_groups.description == null ? "a" : equipment_groups.description;
                      item.Value = Config.TreeType.EQUIPMENT_GROUP + ";" + equipment_groups.id.ToString();
                      if (equipment_groups.equipments.Count != 0)
                      {
                          item.ImageUrl = ("~/Content/image/folder.png");
                      }
                      else
                          item.ImageUrl = ("~/Content/image/file.png");
                  })
                  .Children(equipment_groups => equipment_groups.equipments));
            
            mappings.For<StarEnergi.Models.equipment>(binding => binding
                 .ItemDataBound((item, equipment) =>
                 {
                     item.Text = equipment.tag_num;
                     item.Value = Config.TreeType.EQUIPMENTS + ";" + equipment.id.ToString();
                     if (equipment.equipment_part.Count != 0)
                      {
                          item.ImageUrl = ("~/Content/image/folder.png");
                      }
                      else
                          item.ImageUrl = ("~/Content/image/file.png");
                 })
                 .Children(equipment => equipment.equipment_part));

            mappings.For<StarEnergi.Models.equipment_part>(binding => binding
                 .ItemDataBound((item, equipment_part) =>
                 {
                     item.Text = equipment_part.part.tag_number;
                     item.Value = Config.TreeType.PART + ";" + equipment_part.id.ToString();
                     if (equipment_part.components.Count != 0)
                     {
                         item.ImageUrl = ("~/Content/image/folder.png");
                     }
                     else
                         item.ImageUrl = ("~/Content/image/file.png");
                 })
                 .Children(equipment_part => equipment_part.components));

            mappings.For<StarEnergi.Models.component>(binding => binding
                 .ItemDataBound((item, component) =>
                 {
                     item.Text = component.tag_number;
                     item.Value = Config.TreeType.COMPONENT + ";" + component.id.ToString();
                     if (component.sub_component.Count != 0)
                     {
                         item.ImageUrl = ("~/Content/image/folder.png");
                     }
                     else
                         item.ImageUrl = ("~/Content/image/file.png");
                 })
                 .Children(component => component.sub_component));

            mappings.For<StarEnergi.Models.sub_component>(binding => binding
                 .ItemDataBound((item, sub_component) =>
                 {
                     item.Text = sub_component.tag_number;
                     item.Value = Config.TreeType.SUBCOMPONENT + ";" + sub_component.id.ToString();
                     item.ImageUrl = ("~/Content/image/file.png");
                 }));
            
            
        })
        .ClientEvents(eventsTree =>
                   eventsTree.OnSelect("onSelectTree")
                  .OnLoad("onLoad")
        )
   )
<div class="borderTree"></div>
