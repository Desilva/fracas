@using StarEnergi
@model IEnumerable<StarEnergi.Models.plant>
<script type="text/javascript">
    function onSelectTreeEmployee(e) {
        var treeview = $('#TreeSBSEmployee').data('tTreeView');
        var value = treeview.getItemValue(e.item).split(';');
        if (value[0] == 'DEPARTMENT') {
            //$('#content').load('foc/Create', { 'id': value[1]} );
            $('#content').load('EmployeeDept/Details/' + value[1]);
        } else if (value[0] == 'EMPLOYEEBOSS') {
            $('#content').load('EmployeeBoss/Details/' + value[1]);
        } else if (value[0] == 'EMPLOYEE') {
            $('#content').load('Employee/Details/' + value[1]);
        } else {

        }
    }

    function onNodeDropEmployee(e) {
        var treeView = $('#TreeSBSEmployee').data('tTreeView');
        var valueDest = treeView.getItemValue(e.destinationItem);
        valueDest = valueDest.split(';');
        var value = treeView.getItemValue(e.item);
        value = value.split(';');
        console.log(value[0] + "  " + valueDest[0]);
        if (e.dropPosition == "before" || e.dropPosition == "after") {
            if (valueDest[0] == "PLANT" || (value[0] != "DEPARTMENT" && valueDest[0] == "DEPARTMENT")) {
                e.isValid = false;
            } else if (value[0] == "DEPARTMENT" && valueDest[0] != "DEPARTMENT") {
                e.isValid = false;
            } else {
            }
        } else {
            if (value[0] == "DEPARTMENT" && valueDest[0] != "PLANT") {
                e.isValid = false;
            } else if (value[0] != "DEPARTMENT" && valueDest[0] == "PLANT") {
                e.isValid = false;
            }
        }

        if (e.isValid == false) {
            e.preventDefault();
        } else {
            if (e.dropPosition == "before" || e.dropPosition == "after") {
                if (value[0] == "EMPLOYEE" && valueDest[0] == "EMPLOYEEBOSS") {
                    var values = {
                        value_id: value[1],
                        dest_id: valueDest[1],
                        type: 1
                    };

                    $.post("Employee/DragDrop", values, function (data) {
                        if (data != undefined) {
                            $(e.item).closest('.t-item').find(':input[name="itemValue"]').eq(0).val("EMPLOYEEBOSS;" + value[1]);
                        }
                    });
                } else if (value[0] == "EMPLOYEEBOSS" && valueDest[0] == "EMPLOYEEBOSS") {
                    var values = {
                        value_id: value[1],
                        dest_id: valueDest[1],
                        type: 3
                    };

                    $.post("Employee/DragDrop", values, function (data) {
                        if (data != undefined) {
                            $(e.item).closest('.t-item').find(':input[name="itemValue"]').eq(0).val("EMPLOYEEBOSS;" + value[1]);
                        }
                    });
                } else if (value[0] == "EMPLOYEE" && valueDest[0] == "EMPLOYEE") {
                    var values = {
                        value_id: value[1],
                        dest_id: valueDest[1],
                        type: 2
                    };

                    $.post("Employee/DragDrop", values, function (data) {
                        if (data != undefined) {
                            $(e.item).closest('.t-item').find(':input[name="itemValue"]').eq(0).val("EMPLOYEE;" + value[1]);
                        }
                    });
                } else if (value[0] == "EMPLOYEEBOSS" && valueDest[0] == "EMPLOYEE") {
                    var values = {
                        value_id: value[1],
                        dest_id: valueDest[1],
                        type: 4
                    };

                    $.post("Employee/DragDrop", values, function (data) {
                        if (data != undefined) {
                            $(e.item).closest('.t-item').find(':input[name="itemValue"]').eq(0).val("EMPLOYEE;" + value[1]);
                        }
                    });
                }
            } else {
                if (value[0] == "EMPLOYEE" && valueDest[0] == "EMPLOYEEBOSS") {
                    var values = {
                        value_id: value[1],
                        dest_id: valueDest[1],
                        type: 5
                    };

                    $.post("Employee/DragDrop", values, function (data) {
                        if (data != undefined) {
                            $(e.item).closest('.t-item').find(':input[name="itemValue"]').eq(0).val("EMPLOYEE;" + value[1]);
                        }
                    });
                } else if (value[0] == "EMPLOYEE" && valueDest[0] == "DEPARTMENT") {
                    var values = {
                        value_id: value[1],
                        dest_id: valueDest[1],
                        type: 6
                    };

                    $.post("Employee/DragDrop", values, function (data) {
                        if (data != undefined) {
                            $(e.item).closest('.t-item').find(':input[name="itemValue"]').eq(0).val("EMPLOYEEBOSS;" + value[1]);
                        }
                    });
                } else if (value[0] == "EMPLOYEE" && valueDest[0] == "EMPLOYEE") {
                    var values = {
                        value_id: value[1],
                        dest_id: valueDest[1],
                        type: 7
                    };

                    $.post("Employee/DragDrop", values, function (data) {
                        if (data != undefined) {
                            $(e.item).closest('.t-item').find(':input[name="itemValue"]').eq(0).val("EMPLOYEE;" + value[1]);
                        }
                    });
                } else if (value[0] == "EMPLOYEEBOSS" && valueDest[0] == "DEPARTMENT") {
                    var values = {
                        value_id: value[1],
                        dest_id: valueDest[1],
                        type: 8
                    };

                    $.post("Employee/DragDrop", values, function (data) {
                        if (data != undefined) {
                            $(e.item).closest('.t-item').find(':input[name="itemValue"]').eq(0).val("EMPLOYEEBOSS;" + value[1]);
                        }
                    });
                } else if (value[0] == "EMPLOYEEBOSS" && valueDest[0] == "EMPLOYEEBOSS") {
                    var values = {
                        value_id: value[1],
                        dest_id: valueDest[1],
                        type: 9
                    };

                    $.post("Employee/DragDrop", values, function (data) {
                        if (data != undefined) {
                            $(e.item).closest('.t-item').find(':input[name="itemValue"]').eq(0).val("EMPLOYEE;" + value[1]);
                        }
                    });
                } else if (value[0] == "EMPLOYEEBOSS" && valueDest[0] == "EMPLOYEE") {
                    var values = {
                        value_id: value[1],
                        dest_id: valueDest[1],
                        type: 10
                    };

                    $.post("Employee/DragDrop", values, function (data) {
                        if (data != undefined) {
                            $(e.item).closest('.t-item').find(':input[name="itemValue"]').eq(0).val("EMPLOYEE;" + value[1]);
                        }
                    });
                }
            }
        }
    }
</script>
@(
    Html.Telerik().TreeView()
        .Name("TreeSBSEmployee")
        .DragAndDrop(true)
        .BindTo(Model, mappings =>
        {
            mappings.For<StarEnergi.Models.plant>(binding => binding
                    .ItemDataBound((item, plant) =>
                    {
                        item.Text = "Employee " + plant.nama;
                        item.Value = Config.TreeType.PLANT + ";" + plant.id.ToString();
                        item.Expanded = true;
                        if (plant.focs.Count != 0)
                        {
                            item.ImageUrl = ("~/Content/image/folder.png");
                        }
                        else
                            item.ImageUrl = ("~/Content/image/file.png");
                        item.LoadOnDemand = plant.employee_dept.Count > 0;
                    }));
                    //.Children(plant => plant.employee_dept));
            //mappings.For<StarEnergi.Models.employee_dept>(binding => binding
            //        .ItemDataBound((item, dept) =>
            //        {
            //            item.Text = dept.dept_name;
            //            item.Value = "DEPARTMENT" + ";" + dept.id.ToString();
            //            if (dept.employees.Count != 0) {
            //                item.ImageUrl = ("~/Content/image/folder.png");
            //            }else
            //                item.ImageUrl = ("~/Content/image/file.png");
            //        })
            //        .Children(dept => dept.employees));
            //mappings.For<StarEnergi.Models.employee>(binding => binding
            //        .ItemDataBound((item, employee) =>
            //        {
            //            item.Text = employee.alpha_name;
            //            item.Value = (employee.employee_boss == null ? "EMPLOYEEBOSS" : "EMPLOYEE") + ";" + employee.id.ToString();
            //            if (employee.employee1.Count != 0)
            //            {
            //                item.ImageUrl = ("~/Content/image/folder.png");
            //            }
            //            else
            //                item.ImageUrl = ("~/Content/image/file.png");

            //        })
            //        .Children(employee => employee.employee1));
        })
        .DataBinding(dataBinding => dataBinding
                .Ajax().Select("_AjaxLoadingTreeViewEmployee", "Admin")
        )
        .ClientEvents(eventsTree =>
                   eventsTree.OnSelect("onSelectTreeEmployee")
                  .OnLoad("onLoadEmployee")
                  .OnNodeDrop("onNodeDropEmployee")
        )
   )
<div class="borderTree"></div>
