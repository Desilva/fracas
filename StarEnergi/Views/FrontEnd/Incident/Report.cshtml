@model IEnumerable<StarEnergi.Models.incident_report>
@{
    ViewBag.Title = "Add Incident Report";
    List<StarEnergi.Models.user_per_role> li = null;
    if (ViewData["user_role"] != null)
    {
        li = ViewData["user_role"] as List<StarEnergi.Models.user_per_role>;
    }
    List<StarEnergi.Models.EmployeeEntity> has = null;
    if (ViewData["users"] != null)
    {
        has = ViewData["users"] as List<StarEnergi.Models.EmployeeEntity>;
    }
    int username = has.Find(p => p.username == HttpContext.Current.Session["username"].ToString()).id;
    string alpha_name = has.Find(p => p.username == HttpContext.Current.Session["username"].ToString()).alpha_name;
    
}
<script type="text/javascript">
    var isInv = '@li.Exists(p => p.role == (int)StarEnergi.Config.role.INITIATORIR)';
    function OnRowDataBoundEq(e) {
        var dataItem = e.dataItem;
        var row = e.row;
        var username = '@username';
        var alpha_name = '@alpha_name';
        var isCanEdit = alpha_name == dataItem.prepared_by ||
            (username == dataItem.ack_supervisor && dataItem.supervisor_approve == null) ||
            (username == dataItem.superintendent && dataItem.superintendent_approve == null) ||
            (username == dataItem.field_manager && dataItem.field_manager_approve == null) ||
            (username == dataItem.loss_control && dataItem.loss_control_approve == null) ||
            (username == dataItem.she_superintendent && dataItem.she_superintendent_approve == null) ||
            (username == dataItem.superintendent_delegate && dataItem.superintendent_approve == null) ||
            (username == dataItem.field_manager_delegate && dataItem.field_manager_approve == null) ||
            (username == dataItem.loss_control_delegate && dataItem.loss_control_approve == null) ||
            (username == dataItem.she_superintendent_delegate && dataItem.she_superintendent_approve == null) ||
            (username == dataItem.supervisor_delegate && dataItem.supervisor_approve == null) ? true : false;
        isCanEdit = (isCanEdit || username == dataItem.lead_name) && dataItem.field_manager_approve == null;

        if ((username == dataItem.field_manager || username == dataItem.field_manager_delegate) && dataItem.field_manager_approve == null) {
            if (dataItem.she_superintendent_approve == null) {
                isCanEdit = false;
            } else {
                isCanEdit = true;
            }
        }

        if ((username == dataItem.she_superintendent || username == dataItem.she_superintendent_delegate) && dataItem.she_superintendent_approve == null) {
            if (dataItem.loss_control_approve == null) {
                isCanEdit = false;
            }
            else {
                isCanEdit = true;
            }
        }

        if ((username == dataItem.loss_control || username == dataItem.loss_control_delegate) && dataItem.loss_control_approve == null) {
            if (dataItem.superintendent_approve == null) {
                isCanEdit = false;
            }
            else {
                isCanEdit = true;
            }
        }

        if ((username == dataItem.superintendent || username == dataItem.superintendent_delegate) && dataItem.superintendent_approve == null) {
            if (dataItem.supervisor_approve == null) {
                isCanEdit = false;
            }
            else {
                isCanEdit = true;
            }
        }


        if ((username == dataItem.ack_supervisor || username == dataItem.supervisor_approve) && dataItem.supervisor_approve == null) {
            isCanEdit = true;
        }

        if (username == dataItem.prepared_by && dataItem.supervisor_approve == null) {
            isCanEdit = true;
        }

        var isApprove = dataItem.field_manager_approve != null && username == dataItem.lead_name;
        var isNeedRCA = dataItem.investigation == 1;
        var isAnalyst = dataItem.id_rca != null;
        var templateComplete = ('<a class="t-button t-grid-fracasedit t-button-icon t-button-icon t-ajax" onClick="Edit(' + dataItem.id + ');" title=' + (isCanEdit ? '"Edit Incident Report"' : '"View Incident Report"') + ' >'
                                + '<span class="t-icon ' + (isCanEdit ? 't-edit' : 't-view') + '"></span>'
                                + '</a>')
                                + ((isApprove && !isAnalyst && isNeedRCA) ? '<a class="t-button t-rca t-button-icon" onClick="toRcas(' + dataItem.id + ');" title="Add to RCA">'
                                + '<span class="t-icon t-rca"></span>'
                                + '</a>' : '')
                                //+ (isCanEdit && dataItem.tsr_number == "" ? '<a class="t-button t-grid-fracasedit t-button-icon t-button-icon t-ajax" onClick="AddTSR(' + dataItem.id + ');" title="Add TSR">'
                                //+ '<span class="t-icon t-tsr"></span></a>' : '')
                                + '<a class="t-button t-rca t-button-icon" onClick="log(' + dataItem.id + ');" title="Incident Report Log">'
                                + '<span class="t-icon t-log"></span>'
                                + '</a>';
        var templateUnComplete = ('<a class="t-button t-grid-fracasedit t-button-icon t-button-icon t-ajax" onClick="Edit(' + dataItem.id + ');" title=' + (isCanEdit ? '"Edit Incident Report"' : '"View Incident Report"') + ' >'
                                + '<span class="t-icon ' + (isCanEdit ? 't-edit' : 't-view') + '"></span>'
                                + '</a>')
                                + ((isApprove && !isAnalyst && isNeedRCA) ? '<a class="t-button t-rca t-button-icon" onClick="toRcas(' + dataItem.id + ');" title="Add to RCA">'
                                + '<span class="t-icon t-rca"></span>'
                                + '</a>' : '')
                                //+ (isCanEdit && dataItem.tsr_number == "" ? '<a class="t-button t-grid-fracasedit t-button-icon t-button-icon t-ajax" onClick="AddTSR(' + dataItem.id + ');" title="Add TSR">'
                                //+ '<span class="t-icon t-tsr"></span></a>' : '')
                                + '<a class="t-button t-rca t-button-icon" onClick="log(' + dataItem.id + ');" title="Incident Report Log">'
                                + '<span class="t-icon t-log"></span>'
                                + '</a>';

        var i = 0;

        if (username == dataItem.superintendent || username == dataItem.superintendent_delegate) {
            if (dataItem.superintendent_approve != null) {
                row.style.background = 'orange';
            }
        }

        if (username == dataItem.loss_control || username == dataItem.loss_control_delegate) {
            if (dataItem.loss_control_approve != null) {
                row.style.background = 'orange';
            }
        }

        if (username == dataItem.she_superintendent || username == dataItem.she_superintendent_delegate) {
            if (dataItem.she_superintendent_approve != null) {
                row.style.background = 'orange';
            }
        }

        if (username == dataItem.field_manager || username == dataItem.field_manager_delegate) {
            if (dataItem.field_manager_approve != null) {
                row.style.background = 'orange';
            }
        }

        if (username == dataItem.ack_supervisor || username == dataItem.supervisor_delegate) {
            if (dataItem.supervisor_approve != null) {
                row.style.background = 'orange';
            }
        }

        for (var a in row.cells) {
            if (row.cells[a].className == "t-group-cell") {
                i++;
            }
        }
        row.cells[i].innerHTML = templateComplete;
    }
    
    function Edit(id) {
        $('#contentEventLog').load('Incident/addIncident', { 'id': id });
    }

    function addIIR(id) {
        $('#contentEventLog').load('Investigation/addInvestigation', { 'id_ir': id });
    }

    function AddTSR(id) {
        $('#contentEventLog').load('TroubleShooting/addTroubleShooting', { 'id_ir': id });
    }

    function AddFracas(id) {
        $('#contentEventLog').load('Fracas/addEvent', { 'id_ir': id });
    }

    function editIIR(id) {
        $('#contentEventLog').load('Investigation/addInvestigation', { 'id': id });
    }

    function log(id) {
        $('#contentEventLog').load('Incident/incidentLog', { 'id': id });
    }

    function deleteIIR(id_iir, id) {
        var r = confirm("Anda yakin mau menghapus incident investigation report?");
        var values = {
            id: id,
            id_iir: id_iir
        }
        if (r) {
            $.post("Investigation/deleteInvestigation/", values, function (data) {
                var grid = $('#incidentReport').data('tGrid');
                grid.ajaxRequest();
            });
        }
    }

    function openChooser(id) {
        $('#Window').data('tWindow').center().open();
        document.getElementById('ids').value = id;
    }

    function toRcas(id) {
        $.ajax({
            type: "POST",
            url: "@Url.Action("getCode", "Incident")",
            traditional: true,
            data: { id: id },
            success: function (data) {
                window.location = 'RCA/addRCA?i=' + data.id + '&a=' + data.analysis_title + '&c=' + data.cost + '&l=' + data.lead_name;
            }
        });

    }

</script>

<style>
    .t-grid .t-grid-header .t-header,
    .t-grid .t-grid-header .t-last-header {
        white-space: normal;
    }
    #Window .t-header {
        background:#b9b7b7;
    }

    .t-rca {
        background-image:url("/Content/image/add_rca.png");
    }

    .t-tsr {
        background-image:url("/Content/image/add_tsr.png");
    }

    .t-fracas {
        background-image:url("/Content/image/add_fracas.png");
    }

    .t-log {
        background-image:url("/Content/image/iconLog.jpg");
        background-size: 16px;
    }

    .t-view {
        background-image:url("/Content/image/view.png");
        background-size: 16px;
    }
</style>

@( 
 Html.Telerik().Grid<StarEnergi.Models.incident_report>()
        .TableHtmlAttributes(new { style = "width:980px" }).HtmlAttributes(new { style = "width:980px" })
        .Name("IncidentReport")
        .DataKeys(keys =>
        {
            keys.Add(p => p.id);
        })
        .DataBinding(dataBinding =>
        {
            dataBinding.Ajax()
                .Delete("_DeleteAjaxIncidentReport", "Incident")
                .Select("_CustomBinding", "Incident");
        })
        .Columns(columns =>
        {
            columns.Command(commands =>
            {
            }).Width(160).Title("Action").HtmlAttributes(new { style = "text-align: center" });
            columns.Bound(o => o.rca_number).Width(165).Title("RCA Number");
            columns.Bound(o => o.id).Hidden();
            columns.Bound(o => o.investigation).Hidden();
            columns.Bound(o => o.reference_number).Width(155).Title("Reference Number");
            columns.Bound(o => o.title).Width(175).Title("Title");
            columns.Bound(o => o.date_incident).Width(175).Title("Date / Time Incident");
            columns.Bound(o => o.inves).Width(100).Title("Investigation");
            columns.Bound(o => o.facility).Width(225).Title("Business Location / Facility");
            columns.Bound(o => o.incident_location).Width(150).Title("Incident Location");
            columns.Bound(o => o.type_report).Width(150).Title("Type of Report");
            columns.Bound(o => o.incident_type).Width(175).Title("Incident Type");
            columns.Bound(o => o.actual_loss).Width(200).Title("Actual Loss Severity");
            columns.Bound(o => o.potential_loss).Width(200).Title("Potential Loss Severity");
            columns.Bound(o => o.probability_str).Width(200).Title("Probability of Reccurence");
            columns.Bound(o => o.prepared_by_name).Width(150).Title("Prepared By");
            columns.Bound(o => o.prepare_date).Width(150).Title("Prepared Date");
        })
        .ClientEvents(
            events => events
                .OnRowDataBound("OnRowDataBoundEq")
        )
        .Pageable(p => p.PageSize(10).Total((int)ViewData["total"]))
        .EnableCustomBinding(true)
        .Sortable()
        .Scrollable(c => c.Enabled(true))
        .Selectable()
        .Filterable()
        .Groupable()
)

@{  Html.Telerik().Window()
        .Name("Window")
        .Title("Choose Analysis Type")
        .Content(@<text>
                <input name="ids" id="ids" type="hidden" value="" />
                <input name="choose" type="radio" value="1" checked/>Tree Diagram
                <input name="choose" type="radio" value="0" />5 - Why
                <input name="choose" type="radio" value="2" />Fishbone Diagram
                <br />
                <div class="form-actions">
                    <input type="button" onclick="toRcas()" value="Go!" />
                </div>
            </text>)
        .Width(400)
        .Draggable(true)
        .Modal(true)
        .Visible(false)
        .Render();
}
