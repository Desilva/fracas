@{
    int? id = null;
    bool isEdit = false;
    bool isView = false;
    StarEnergi.Models.trouble_shooting ts = null;
    int? superintendent_id = null;
    int? supervisor_id = null;
    int? superintendent_id_del = null;
    int? supervisor_id_del = null;
    int? id_ir = ViewBag.id_ir as int?;
    string user_id = HttpContext.Current.Session["id"].ToString();
    if (ViewBag.mod != null)
    {
        id = ViewBag.mod as Nullable<Int32>;
        ts = ViewBag.datas as StarEnergi.Models.trouble_shooting;
        isEdit = true;
        isView = ts.superintendent_approval_signature != null || (user_id != ts.inspector_name && (user_id != ts.supervisor_approval_name || ts.supervisor_approval_signature != null) && (user_id != ts.superintendent_approval_name || ts.superintendent_approval_signature != null) &&
            (user_id != ts.superintendent_delegate || ts.superintendent_approval_signature != null) && (user_id != ts.supervisor_delegate || ts.supervisor_approval_signature != null));
    
    } else {
        supervisor_id = ViewBag.supervisor_id as Nullable<int>;
        superintendent_id = ViewBag.superintendent_id as Nullable<int>;
        supervisor_id_del = ViewBag.supervisor_id_del as Nullable<int>;
        superintendent_id_del = ViewBag.superintendent_id_del as Nullable<int>;
    }
    List<StarEnergi.Models.EmployeeEntity> has = null;
    if (ViewData["users"] != null)
    {
        has = ViewData["users"] as List<StarEnergi.Models.EmployeeEntity>;
    }

    string username = HttpContext.Current.Session["username"].ToString();
}

<link rel="stylesheet" type="text/css" href="../../../Content/screen.css" media="screen, projection" />
<link rel="stylesheet" type="text/css" href="../../../Content/style.css" media="screen, projection" />
<script>
    var isEdit = '@isEdit';
    var isView = '@isView';
    var isSave = false;
    function setIframeHeight(sel, h) {
        $(sel).height(h);
    }

    function htmlEncode(value) {
        //create a in-memory div, set it's inner text(which jQuery automatically encodes)
        //then grab the encoded contents back out.  The div never exists on the page.
        return $('<div/>').text(value).html();
    }

    function save() {
        isSave = true;
        var supervisor_delegate = $('#supervisor_delegate').val();
        var sup_delegate = $('#sup_delegate').val();
        if (validate()) {
            var as_found_condition = htmlEncode(CKEDITOR.instances.as_found_condition.getData());
            var analysis = htmlEncode(CKEDITOR.instances.analysis.getData());
            var values = {
                no: $('#no').val(),
                equipment_no: $('#equipment_no').val(),
                equipment_description: $('#equipment_description').val(),
                date_of_trouble: $('#date_of_trouble').val(),
                time_of_trouble: $('#time_of_trouble').val(),
                start_date_repair: $('#start_date_repair').val(),
                end_date_repair: $('#end_date_repair').val(),
                time_repaired: $('#time_repaired').val(),
                wo_number: $('#wo_number').val(),
                description_trouble: $('#description_trouble').val(),
                as_found_condition: as_found_condition,
                analysis: analysis,
                action: $('#action').val(),
                recommendation: $('#recommendation').val(),
                inspector_name: $('#inspector_name').val(),
                supervisor_approval_name: $('#supervisor_approval_name').val(),
                supervisor_delegate: isEdit == 'False' ? $('#supervisor_delegate_name').val() : (supervisor_delegate == 'True' ? $('#supervisor_name').val() : $('#supervisor_delegate_name').val()),
                superintendent_approval_name: $('#superintendent_approval_name').val(),
                superintendent_delegate: isEdit == 'False' ? $('#sup_delegate_name').val() : (sup_delegate == 'True' ? $('#sup_name').val() : $('#sup_delegate_name').val()),
                inspector_date: $('#inspector_date').val(),
                supervisor_approval_date: $('#supervisor_approval_date').val(),
                superintendent_approval_date: $('#superintendent_approval_date').val(),
                id_ir: '@id_ir.ToString()'
            }

            $('#realmod_save').css("display", "block");
            if (isEdit == 'False') {
                $.post("/TroubleShooting/Add", values, function (data) {
                    if (data != undefined) {
                        isSave = true;
                        $('#realmod_save').css("display", "none");
                        alert('Troubleshooting with number "' + data.ts_no + '" successfully saved');
                        back();
                    } else {
                        $('#realmod_save').css("display", "none");
                        alert('Fail to add troubleshooting');
                    }
                });
            } else if (isEdit == 'True') {
                isSave = true;
                var ids = '@id';
                values.id = ids;
                $.post("/TroubleShooting/Edit", values, function (data) {
                    if (data != undefined) {
                        $('#realmod_save').css("display", "none");
                        alert('Troubleshooting successfully updated');
                        back();
                    } else {
                        $('#realmod_save').css("display", "none");
                        alert('Fail to update troubleshooting');
                    }
                });
            }
    }
}

function validate() {
    return true;
}
</script>
<div class="container">
	<header>
		<div class="page-title" style="width:980px">
			<h1>STAR ENERGY GEOTHERMAL (WAYANG WINDU) LIMITED</h1>
		</div>
		<div class="clearfix" style="width:768px"></div>
		<b><u>TROUBLE SHOOTING/EQUIPMENT REPAIR REPORT</u></b>
	</header>
    <br />
    <b>1. GENERAL INFORMATION</b>
    <div style="float:right;margin-right:19px;">
        <table class="w-border" style="width:100px">
            <tr>
                <td class="no-border-right">No</td>
                <td class="no-border-right no-border-left">:</td>
				<td class="no-border-left"><input type="text" name="no" id="no" value="@(isEdit ? ts.no : ViewBag.ts_no as string)" disabled/></td>
			</tr>
        </table>
    </div>
    <br />
	<div class="log-part1">
		<table class="w-border" style="width:980px">
			<tr>
                <td class="no-border-right">TAG/Equipment No</td>
                <td class="no-border-right no-border-left">:</td>
				<td class="no-border-left" colspan="3"><input type="text" name="equipment_no" id="equipment_no" value="@(isEdit ? ts.equipment_no : "")" @(isView ? "disabled" : "") /></td>
                <td class="no-border-right">Equipment Desc.</td>
                <td class="no-border-right no-border-left">:</td>
				<td class="no-border-left"><input type="text" name="equipment_description" id="equipment_description" value="@(isEdit ? ts.equipment_description : "")" @(isView ? "disabled" : "") /></td>
			</tr>
            <tr>
                <td class="no-border-right">Date of Trouble</td>
                <td class="no-border-right no-border-left">:</td>
				<td class="no-border-left" colspan="3">
                    @(Html.Telerik().DatePicker()
                    .Name("date_of_trouble")
                    .HtmlAttributes(new { id = "datetime_wrapper", style = "width:100px" })
                    .Value(isEdit ? ts.date_of_trouble : null)
                    .Enable(!isView))
				</td>
                <td class="no-border-right">Time of Trouble</td>
                <td class="no-border-right no-border-left">:</td>
				<td class="no-border-left">
                    @(Html.Telerik().TimePicker()
                    .Name("time_of_trouble")
                    .HtmlAttributes(new { id = "time_wrapper", style = "width:90px" })
                    .Interval(1)
                    .Value(isEdit ? ts.time_of_trouble : null)
                    .Enable(!isView))
				</td>
			</tr>
            <tr>
                <td class="no-border-right">Date of Repaired</td>
                <td class="no-border-right no-border-left">:</td>
				<td class="no-border-right no-border-left">
                    @(Html.Telerik().DatePicker()
                    .Name("start_date_repair")
                    .HtmlAttributes(new { id = "datetime_wrapper", style = "width:100px" })
                    .Value(isEdit ? ts.start_date_repair : null)
                    .Enable(!isView))
				</td>
                <td class="no-border-right no-border-left">
                    -
				</td>
                <td class="no-border-left">
                    @(Html.Telerik().DatePicker()
                    .Name("end_date_repair")
                    .HtmlAttributes(new { id = "datetime_wrapper", style = "width:100px" })
                    .Value(isEdit ? ts.end_date_repair : null)
                    .Enable(!isView))
				</td>
                <td class="no-border-right">Time of Repaired</td>
                <td class="no-border-right no-border-left">:</td>
				<td class="no-border-left">
                    <input type="text" name="time_repaired" id="time_repaired" value="@(isEdit ? ts.time_repaired : "")" @(isView ? "disabled" : "") />
				</td>
			</tr>
			<tr>
                <td class="no-border-right">WO Number</td>
                <td class="no-border-right no-border-left">:</td>
				<td class="no-border-left" colspan="3"><input type="text" name="wo_number" id="wo_number" value="@(isEdit ? ts.wo_number : "")" @(isView ? "disabled" : "") /></td>
                <td colspan="3">&nbsp;</td>
			</tr>
            <tr>
                <td colspan="8">
                    Description of Trouble :
                    <textarea name="description_trouble" id="description_trouble" cols="118" rows="5" style="resize:none" @(isView ? "disabled" : "")>@(isEdit ? ts.description_trouble : "")</textarea>
                </td>
			</tr>
		</table>
	</div>
    <br />
    <b>2. AS FOUND CONDITION</b><small>(Include the visual inspection, measurement data and others fact that was found at the equipment)</small>
	<div class="log-part2">
        <table class="w-border" style="width:980px">
		    <tr>
			    <td><textarea cols="118" id="as_found_condition" name="as_found_condition" rows="10" @(isView ? "disabled" : "")>@(isEdit ? Html.Raw(System.Web.HttpUtility.HtmlDecode(ts.as_found_condition)).ToHtmlString() : "")</textarea></td>
		    </tr>
	    </table>
	</div>
    <br />
    <b>3. ANALYSIS</b><small>(Include the trouble shooting step that have been taken, measurement data and analysis base on data that have been collected)</small>
	<div class="log-part3">
        <table class="w-border" style="width:980px">
		    <tr>
			    <td><textarea cols="118" id="analysis" name="analysis" rows="10" @(isView ? "disabled" : "")>@(isEdit ? Html.Raw(System.Web.HttpUtility.HtmlDecode(ts.analysis)).ToHtmlString() : "")</textarea></td>
		    </tr>
	    </table>
	</div>
    <br />
    <b>4. ACTION</b><small>(Include action that have been taken to fixed the problem, equipment condition and measurement data)</small>
	<div class="log-part4">
        <table class="w-border" style="width:980px">
		    <tr>
			    <td><textarea cols="118" id="action" name="action" rows="5" style="resize:none" @(isView ? "disabled" : "")>@(isEdit ? ts.action : "")</textarea></td>
		    </tr>
	    </table>
	</div>
    <br />
    <b>5. RECOMMENDATION</b><small>(Include the recommendation to prevent the problem recurrent, follow up action that needed to be taken)</small>
	<div class="log-part5">
        <table class="w-border" style="width:980px">
		    <tr>
			    <td><textarea cols="118" id="recommendation" name="recommendation" rows="10" style="resize:none" @(isView ? "disabled" : "")>@(isEdit ? ts.recommendation : "")</textarea></td>
		    </tr>
	    </table>
	</div>
    <br />
	<div class="log-part6">
        <table class="w-border" style="width:980px">
		    <tr>
                <td>
                    Inspector Signature
                    <br />
                    @if (isEdit) {
                        <img id="img_inspector_signature" width="50" height="50" @(ts.inspector_signature != null ? "style=display:block;" : "style=display:none;")  src="@ts.inspector_signature"/>
                    }
                </td>
                <td>
                    Supervisor Approval Signature
                    <br />
                    @if (isEdit)
                    {
                        if (has.Find(p => p.username == username).id == Int32.Parse(ts.supervisor_approval_name == null ? "0" : ts.supervisor_approval_name) || has.Find(p => p.username == username).id == Int32.Parse(ts.supervisor_delegate == null ? "0" : ts.supervisor_delegate))
                        {
                            if (ts.supervisor_approval_signature == null)
                            {
                            <div id="button_supervisor_approve">
                                <input type="button" id="approve_supervisor" onclick="approveSupervisor('@HttpContext.Current.Session["id"].ToString()')" value="Approve" />
                                <input type="button" id="reject_supervisor" onclick="reject('1')" value="Reject" />
                            </div>
                            }
                        }
                    <img id="img_approve_supervisor" width="50" height="50" @(ts.supervisor_approval_signature == null ? "style=display:none;" : "style=display:block;")  src="@(ts.supervisor_approval_signature == null ? "" : ts.supervisor_approval_signature.Substring(1))"/>
                    }
                </td>
                <td>
                    Superintendent Approval Signature
                    <br />
                    @if (isEdit && (ts.supervisor_approval_signature != null || ts.supervisor_approval_name == null))
                    {
                        if (has.Find(p => p.username == username).id == Int32.Parse(ts.superintendent_approval_name == null ? "0" : ts.superintendent_approval_name) || has.Find(p => p.username == username).id == Int32.Parse(ts.superintendent_delegate == null ? "0" : ts.superintendent_delegate))
                        {
                            if (ts.superintendent_approval_signature == null)
                            {
                            <div id="button_superintendent_approve">
                                <input type="button" id="approve_superintendent" onclick="approveSuperintendent('@HttpContext.Current.Session["id"].ToString()')" value="Approve" />
                                <input type="button" id="reject_superintendent" onclick="reject('2')" value="Reject" />
                            </div>
                            }
                        }
                    <img id="img_approve_superintendent" width="50" height="50" @(ts.superintendent_approval_signature == null ? "style=display:none;" : "style=display:block;")  src="@(ts.superintendent_approval_signature == null ? "" : ts.superintendent_approval_signature.Substring(1))"/>
                    }
                </td>
            </tr>
            <tr>
                <td>
                    PRINT NAME
                    <br />
                    <select id="inspector_name" name="inspector_name"  disabled>
                        <option value="" selected disabled>Choose One</option>
                        @foreach (StarEnergi.Models.EmployeeEntity user in ViewData["users"] as List<StarEnergi.Models.EmployeeEntity>)
                        {
                            if (!isEdit && user.username == HttpContext.Current.Session["username"].ToString())
                            {
                                <option value="@user.id" selected>@user.alpha_name</option>
                            }
                            else if (isEdit && user.id == Int32.Parse(ts.inspector_name == null ? "0" : ts.inspector_name))
                            {
                                <option value="@user.id" selected>@user.alpha_name</option>
                            }
                            else
                            {
                                <option value="@user.id">@user.alpha_name</option>
                            }
                        }
                    </select>
                </td>
                <td>
                    PRINT NAME
                    <br />
                    @if (isEdit && has.Find(p => p.username == username).id == Int32.Parse(string.IsNullOrWhiteSpace(ts.supervisor_approval_name) ? "0" : ts.supervisor_approval_name) && (string.IsNullOrWhiteSpace(ts.supervisor_approval_signature) ? true : ts.supervisor_approval_signature.Substring(0, 1) == "a"))
                    {
                    }
                    else if (ts != null && ts.supervisor_delegate != null && (ts.supervisor_approval_signature == null ? true : ts.supervisor_approval_signature.Substring(0, 1) == "d"))
                    {
                        <text>a/n </text>
                    }
                    <select id="supervisor_approval_name" name="supervisor_approval_name"  disabled>
                        <option value="" selected disabled>Choose One</option>
                        @{bool supervisor_isDelegate = false; }
                        @foreach (StarEnergi.Models.EmployeeEntity user in ViewData["users"] as List<StarEnergi.Models.EmployeeEntity>)
                        {
                            if (isEdit && user.id == Int32.Parse(ts.supervisor_delegate == null ? "0" : ts.supervisor_delegate))
                            {
                                supervisor_isDelegate = true;
                                <option value="@user.id" selected>@user.alpha_name</option>
                            }
                            else if (user.id == supervisor_id)
                            {
                                <option value="@user.id" selected>@user.alpha_name</option>
                            }
                            else if (user.approval_level == 1)
                            {
                                if (isEdit && user.id == Int32.Parse(ts.supervisor_approval_name == null ? "0" : ts.supervisor_approval_name) && (ts.supervisor_delegate == null || (ts.supervisor_approval_signature == null ? false : ts.supervisor_approval_signature.Substring(0, 1) != "d")))
                                {
                                    <option value="@user.id" selected>@user.alpha_name</option>
                                }
                                else if (isEdit && user.id == Int32.Parse(ts.supervisor_approval_name == null ? "0" : ts.supervisor_approval_name) && has.Find(p => p.username == username).id == Int32.Parse(ts.supervisor_approval_name == null ? "0" : ts.supervisor_approval_name) && (ts.supervisor_approval_signature == null ? true : ts.supervisor_approval_signature.Substring(0, 1) == "a"))
                                {
                                    <option value="@user.id" selected>@user.alpha_name</option>
                                }
                                else
                                {
                                    <option value="@user.id">@user.alpha_name</option>
                                }
                            }
                            else if (isEdit && user.id == Int32.Parse(ts.supervisor_approval_name == null ? "0" : ts.supervisor_approval_name) && (ts.supervisor_delegate == null || (ts.supervisor_approval_signature == null ? false : ts.supervisor_approval_signature.Substring(0, 1) != "d")))
                            {
                                    <option value="@user.id" selected>@user.alpha_name</option>
                            }
                            else if (isEdit && user.id == Int32.Parse(ts.supervisor_approval_name == null ? "0" : ts.supervisor_approval_name) && has.Find(p => p.username == username).id == Int32.Parse(ts.supervisor_approval_name == null ? "0" : ts.supervisor_approval_name) && (ts.supervisor_approval_signature == null ? true : ts.supervisor_approval_signature.Substring(0, 1) == "a"))
                            {
                                    <option value="@user.id" selected>@user.alpha_name</option>
                            }
                            else if (user.id == supervisor_id_del)
                            {
                                supervisor_isDelegate = true;
                                <option value="@user.id" selected>@user.alpha_name</option>
                            }
                        }
                    </select>
                    <input type="hidden" id="supervisor_delegate" value="@supervisor_isDelegate" />
                    <input type="hidden" id="supervisor_delegate_name" value="@(ts != null ? (supervisor_isDelegate ? ts.supervisor_approval_name : "") : supervisor_id_del.ToString())" />
                </td>
                <td>
                    PRINT NAME
                    <br />
                    @if (isEdit && has.Find(p => p.username == username).id == Int32.Parse(ts.superintendent_approval_name == null || ts.superintendent_approval_name == "" ? "0" : ts.superintendent_approval_name) && (ts.superintendent_approval_signature == null ? true : ts.superintendent_approval_signature.Substring(0, 1) == "a"))
                    {
                    }
                    else if (ts != null && ts.superintendent_delegate != null && (ts.superintendent_approval_signature == null ? true : ts.superintendent_approval_signature.Substring(0, 1) == "d"))
                    {
                        <text>a/n </text>
                    }
                    <select id="superintendent_approval_name" name="superintendent_approval_name" disabled>
                        <option value="" selected disabled>Choose One</option>
                        @{bool sup_isDelegate = false; }
                        @foreach (StarEnergi.Models.EmployeeEntity user in ViewData["users"] as List<StarEnergi.Models.EmployeeEntity>)
                        {
                            if (isEdit && user.id == Int32.Parse(ts.superintendent_delegate == null ? "0" : ts.superintendent_delegate))
                            {
                                sup_isDelegate = true;
                                <option value="@user.id" selected>@user.alpha_name</option>
                            }
                            else if (user.id == superintendent_id)
                            {
                                <option value="@user.id" selected>@user.alpha_name</option>
                            }
                            else if (user.approval_level == 2)
                            {
                                if (isEdit && user.id == Int32.Parse(ts.superintendent_approval_name == null ? "0" : ts.superintendent_approval_name) && (ts.superintendent_delegate == null || (ts.superintendent_approval_signature == null ? false : ts.superintendent_approval_signature.Substring(0, 1) != "d")))
                                {
                                    <option value="@user.id" selected>@user.alpha_name</option>
                                }
                                else if (isEdit && user.id == Int32.Parse(ts.superintendent_approval_name == null ? "0" : ts.superintendent_approval_name) && has.Find(p => p.username == username).id == Int32.Parse(ts.superintendent_approval_name == null ? "0" : ts.superintendent_approval_name) && (ts.superintendent_approval_signature == null ? true : ts.superintendent_approval_signature.Substring(0, 1) == "a"))
                                {
                                    <option value="@user.id" selected>@user.alpha_name</option>
                                }
                                else
                                {
                                    <option value="@user.id">@user.alpha_name</option>
                                }
                            }
                            else if (isEdit && user.id == Int32.Parse(ts.superintendent_approval_name == null ? "0" : ts.superintendent_approval_name) && (ts.superintendent_delegate == null || (ts.superintendent_approval_signature == null ? false : ts.superintendent_approval_signature.Substring(0, 1) != "d")))
                            {
                                    <option value="@user.id" selected>@user.alpha_name</option>
                            }
                            else if (isEdit && user.id == Int32.Parse(ts.superintendent_approval_name == null ? "0" : ts.superintendent_approval_name) && has.Find(p => p.username == username).id == Int32.Parse(ts.superintendent_approval_name == null ? "0" : ts.superintendent_approval_name) && (ts.superintendent_approval_signature == null ? true : ts.superintendent_approval_signature.Substring(0, 1) == "a"))
                            {
                                    <option value="@user.id" selected>@user.alpha_name</option>
                            }
                            else if (isEdit && user.id == superintendent_id_del)
                            {
                                sup_isDelegate = true;
                                <option value="@user.id" selected>@user.alpha_name</option>
                            }
                        }
                    </select>
                    <input type="hidden" id="sup_delegate" value="@sup_isDelegate" />
                    <input type="hidden" id="sup_delegate_name" value="@(ts != null ? (sup_isDelegate ? ts.superintendent_approval_name : "") : superintendent_id_del.ToString())" />
                </td>
            </tr>
            <tr>
                <td>
                    DATE
                    <br />
                    @(Html.Telerik().DatePicker()
                    .Name("inspector_date")
                    .HtmlAttributes(new { id = "datetime_wrapper", style = "width:100px" })
                    .Value(isEdit ? ts.inspector_date : DateTime.Today)
                    .Enable(false))
                </td>
                <td>
                    DATE
                    <br />
                    @(Html.Telerik().DatePicker()
                    .Name("supervisor_approval_date")
                    .HtmlAttributes(new { id = "datetime_wrapper", style = "width:100px" })
                    .Value(isEdit ? (ts.supervisor_approval_signature != null ? ts.supervisor_approval_date : DateTime.Today) : null)
                    .Enable(!isView && (isEdit && ts.supervisor_approval_signature == null)))
                </td>
                <td>
                    DATE
                    <br />
                    @(Html.Telerik().DatePicker()
                    .Name("superintendent_approval_date")
                    .HtmlAttributes(new { id = "datetime_wrapper", style = "width:100px" })
                    .Value(isEdit ? (ts.superintendent_approval_signature != null ? ts.superintendent_approval_date : DateTime.Today) : null)
                    .Enable(!isView && (isEdit && ts.superintendent_approval_signature == null)))
                </td>
            </tr>
	    </table>
	</div>
</div>
<br/>
<div class="submit">
    @if (!isView) {
	<input name="Submit" value="Save" type="submit" onclick="save()"/>
    }
    <input type="button" value="Cancel" onclick="back()"/>
    @if (isEdit)
    {
    <button type="button" value="Print Troubleshooting">
        @Html.ActionLink("Print Trouble Shooting", "printTroubleShooting", "TroubleShooting", new { id = id }, new { target = "_blank" })
    </button>
    }
</div>
<br/>
@(Html.Telerik().Window()
    .Name("RejectComment")
    .Visible(false)
    .Title("Reject")
    .Modal(true)
    .Width(400)
    .Content(@<text>
               <div class="info">
		            <div class="info_inside_left">Comment </div>
		            <div class="infoFieldinput"><textarea id="comment" cols="25" rows="4" name="comment"></textarea></div>

	            <p class="submit">
		            <input name="Submit" value="Reject" type="submit" onclick="reject_ajax();" />
                    <span id="reject_ts" style="display:none;"><img src="../../../Content/image/loading.gif"></span>
                    <input name="type" value="" type="hidden" id="type_reject"/>
	            </p>
	         </div>
        </text>)
)
<script type="text/javascript">
    function onSuccessApproveIns(data) {
        $('#inspector_signature').parent().parent().hide();
        $('#img_inspector_signature').attr('src', data.response.path);
        $('#img_inspector_signature').css('display', 'block');
    }

    function onSuccessApprovalSign(data) {
        $('#approval_signature').parent().parent().hide();
        $('#img_approval_signature').attr('src', data.response.path);
        $('#img_approval_signature').css('display', 'block');
    }

    function back() {
        window.location = "/TroubleShooting";
    }

    var editor_as_found_condition = CKEDITOR.replace('as_found_condition', {
        uiColor: '#14B8C4',
        filebrowserBrowseUrl: '/Scripts/Filemanager/index.html',
        filebrowserImageBrowseUrl: '/Scripts/Filemanager/index.html?type=Images',
        filebrowserFlashBrowseUrl: '/Scripts/Fileanager/index.html?type=Flash',
        removePlugins: 'about'
    });

    var editor_analysis = CKEDITOR.replace('analysis', {
        uiColor: '#14B8C4',
        filebrowserBrowseUrl: '/Scripts/Filemanager/index.html',
        filebrowserImageBrowseUrl: '/Scripts/Filemanager/index.html?type=Images',
        filebrowserFlashBrowseUrl: '/Scripts/Fileanager/index.html?type=Flash',
        removePlugins: 'about'
    });

    function approveSuperintendent(employee_id) {
        var r = confirm("Are you sure want to Approve this trouble shooting report?");
        if (r == true) {
            var date = $('#superintendent_approval_date').val();
            $.post("/TroubleShooting/approveSuperintendent", { id: '@id', employee_id: employee_id, date: date }, function (data) {
                if (data.success) {
                    var has = data.path;
                    $('#approve_superintendent').parent().hide();
                    $('#img_approve_superintendent').attr('src', has);
                    $('#img_approve_superintendent').css('display', 'block');
                    $('#superintendent_approval_date').prop('disabled', true);
                } else {
                    alert("You do not supply your signature");
                }
            });
        }
        else {
            e.preventDefault();
        }
    }

    function approveSupervisor(employee_id) {
        var r = confirm("Are you sure want to Approve this trouble shooting report?");
        if (r == true) {
            var date = $('#supervisor_approval_date').val();
            $.post("/TroubleShooting/approveSupervisor", { id: '@id', employee_id: employee_id, date: date }, function (data) {
                if (data.success) {
                    var has = data.path;
                    $('#approve_supervisor').parent().hide();
                    $('#img_approve_supervisor').attr('src', has);
                    $('#img_approve_supervisor').css('display', 'block');
                    $('#supervisor_approval_date').prop('disabled', true);
                } else {
                    alert("You do not supply your signature");
                }
            });
        }
        else {
            e.preventDefault();
        }
    }

    function reject(type) {
        $("#type_reject").val(type);
        $("#comment").val("");
        $('#RejectComment').data('tWindow').center().open();
    }

    function reject_ajax() {
        var type = $('#type_reject').val();
        var route = type == 1 ? "@Url.Action("rejectSupervisor", "Incident")" : type == 2 ? "@Url.Action("rejectSuperintendent", "Incident")" : "";
        $('#reject_ts').css("display", "inline");
        $.ajax({
            type: "POST",
            url: route,
            traditional: true,
            data: {
                comment: $('#comment').val(), 
                id: '@id'
            },
            success: function (data) {
                $('#reject_ts').css("display", "none");
                alert("Comment sent!");
                $("#RejectComment").data("tWindow").close();
            }
        });
    }
</script>
