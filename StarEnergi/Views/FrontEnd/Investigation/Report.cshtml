@model IEnumerable<StarEnergi.Models.investigation_report>
@{
    ViewBag.Title = "Add Incident Report";
    List<StarEnergi.Models.user_per_role> li = null;
    if (ViewData["user_role"] != null)
    {
        li = ViewData["user_role"] as List<StarEnergi.Models.user_per_role>;
    }
    List<StarEnergi.Models.EmployeeEntity> has = null;
    if (ViewData["users"] != null)
    {
        has = ViewData["users"] as List<StarEnergi.Models.EmployeeEntity>;
    }
    int username = has.Find(p => p.username == HttpContext.Current.Session["username"].ToString()).id;
    
}
<script type="text/javascript">
    var isInv = '@li.Exists(p => p.role == (int)StarEnergi.Config.role.IIR)';
    var isViewOnly = '@li.Exists(p => p.role == (int)StarEnergi.Config.role.IIRVIEW)';
    var isMasterAdmin = '@li.Exists(p => p.role == (int)StarEnergi.Config.role.ADMINMASTERSHE)';
    function OnRowDataBoundEq(e) {
        var dataItem = e.dataItem;
        var row = e.row;
        var username = '@HttpContext.Current.Session["id"].ToString()';
        var isCanEdit = dataItem.isCanEdit;
        isCanEdit = isCanEdit || isMasterAdmin == 'True';
        var isApprove = dataItem.field_manager_approve != null && username == dataItem.lead_name;
        var templateComplete = '<a class="t-button t-grid-fracasedit t-button-icon t-button-icon t-ajax" onClick="Edit(' + dataItem.id + ');" title=' + (dataItem.field_manager_approve == null ? '"Edit Incident Investigation Report"' : '"View Incident Investigation Report"') + ' >'
                                + '<span class="t-icon t-edit"></span>'
                                + '</a>'
                                + '<a class="t-button t-rca t-button-icon" onClick="log(' + dataItem.id + ');" title="Investigation Report Log">'
                                + '<span class="t-icon t-log"></span>'
                                + '</a>';
        var templateView = '<a class="t-button t-grid-fracasedit t-button-icon t-button-icon t-ajax" onClick="View(' + dataItem.id + ');" title="View Incident Investigation Report" >'
                                + '<span class="t-icon t-view"></span>'
                                + '</a>'
                                + '<a class="t-button t-rca t-button-icon" onClick="log(' + dataItem.id + ');" title="Investigation Report Log">'
                                + '<span class="t-icon t-log"></span>'
                                + '</a>';
        var i = 0;
        for (var a in row.cells) {
            if (row.cells[a].className == "t-group-cell") {
                i++;
            }
        }

        if (isCanEdit) row.cells[i].innerHTML = templateComplete;
        else if (isViewOnly) row.cells[i].innerHTML = templateView;
        else row.cells[i].innerHTML = "";
    }

    function Edit(id) {
        window.location = "/Investigation/addInvestigation/" + id;
    }

    function View(id) {
        window.location = "/Investigation/addInvestigation/" + id;
    }

    function log(id) {
        $('#contentEventLog').load('Investigation/investigationLog', { 'id': id });
    }
</script>

<style>
    .t-grid .t-grid-header .t-header,
    .t-grid .t-grid-header .t-last-header {
        white-space: normal;
    }
    #Window .t-header {
        background:#b9b7b7;
    }
    .t-log {
        background-image:url("/Content/image/iconLog.jpg");
        background-size: 16px;
    }

    .t-view {
        background-image:url("/Content/image/view.png");
        background-size: 16px;
    }
</style>

@( 
 Html.Telerik().Grid<StarEnergi.Models.investigation_report>()
        .TableHtmlAttributes(new { style = "width:980px" }).HtmlAttributes(new { style = "width:980px" })
        .Name("investigationReport")
        .DataKeys(keys =>
        {
            keys.Add(p => p.id);
        })
        .DataBinding(dataBinding =>
        {
            dataBinding.Ajax()
                .Delete("_DeleteAjaxInvestigationReport", "Investigation")
                .Select("_SelectAjaxInvestigationReport", "Investigation");
        })
        .Columns(columns =>
        {
            columns.Command(commands =>
            {
                commands.Delete().ButtonType(GridButtonType.BareImage);
            }).Width(80).Title("Action").HtmlAttributes(new { style = "text-align: center" });
            columns.Bound(o => o.id).Hidden();
            columns.Bound(o => o.reference_number).Width(200).Title("Reference Number");
            columns.Bound(o => o.date_incident).Width(150).Title("Date / Time").Format("{0:dd MMM yyyy hh:mm tt}");
            columns.Bound(o => o.title).Title("Title");
        })
        .ClientEvents(
            events => events
                .OnRowDataBound("OnRowDataBoundEq")
        )
        .Pageable(p => p.PageSize(10))
        .Sortable()
        .Scrollable(c => c.Enabled(true))
        .Selectable()
        .Filterable()
        .Groupable()
)