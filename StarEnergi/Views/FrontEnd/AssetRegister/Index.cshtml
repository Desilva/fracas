@using StarEnergi
@model IEnumerable<StarEnergi.Models.plant>

<div id = "contentAssetRegister">
@*@model IEnumerable<StarEnergi.Models.AssetRegisterEntity>*@
<h2>@ViewBag.nama
    <img src='@Url.Content("~/Content/image/icon/help.png")' alt="" style="cursor:pointer" onclick="openHelp();" />
</h2>

<script type="text/javascript">
    function openHelp() {
        window.open("Help/index#assetregister", "Help", "height=500,width=1000");
    }

    function onRowSelect(e) {
        var row = e.row;
        $('#contentAssetRegister').load('AssetRegister/DetailEquipment/' + row.cells[0].innerHTML);
    }
</script>
    <script type="text/javascript">
        var src = "asset-register";
    function onSelectTree(e) {
        var treeview = $('#TreeSBSAssetRegister').data('tTreeView');
        var value = treeview.getItemValue(e.item).split(';');

        if (value[0] == '@Config.TreeType.AREA') {
            //$('#content').load('foc/Create', { 'id': value[1]} );
            $('#content').load('Foc/Details/' + value[1]);
        } else if (value[0] == '@Config.TreeType.UNIT') {
            $('#content').load('Unit/Details/' + value[1]);
        } else if (value[0] == '@Config.TreeType.SYSTEM') {
            $('#content').load('System/Details/' + value[1]);
        }  else if (value[0] == '@Config.TreeType.EQUIPMENT') {
            $('#content').load('Equipment/Details/' + value[1]);
        }  else if (value[0] == '@Config.TreeType.COMPONENT') {
            $('#content').load('Component/Details/' + value[1]);
        }  else {

        }
    }
    </script>

@*@(Html.Telerik().Grid<StarEnergi.Models.AssetRegisterEntity>()
        //.HtmlAttributes(new { style = "padding:0 0 0 10px;" })
        .Name("AssetRegister")
        .DataKeys(keys =>
        {
            keys.Add(p => p.id_equipment);
        })
        .DataBinding(dataBinding =>
        {
            dataBinding.Ajax()
                .Select("_SelectAjaxEditing", "AssetRegister");
        })
        .ToolBar(commands => commands
            .Custom()
            .HtmlAttributes(new { id = "importExcel" })
            .Text("Export")
            .Action("importExcel", "AssetRegister")
        )
        .Columns(columns =>
        {
            columns.Bound(o => o.id_equipment).Hidden();
            columns.Bound(o => o.tag_number).Width(100).Title("Tag Number");
            columns.Bound(o => o.unit_name).Title("Unit").Width(110);
            columns.Bound(o => o.system_name).Title("System");
            columns.Bound(o => o.area_name).Title("Area").Width(110);
            columns.Bound(o => o.discipline).Title("Sub Class");
            columns.Bound(o => o.mtbf).Title("MTBF").Format("{0:###,##0.00}");
            columns.Bound(o => o.mttr).Title("MTTR").Format("{0:###,##0.00}");
        })
        .ClientEvents(events => events
                .OnRowSelect("onRowSelect"))
        .Pageable(p => p.PageSize(20))
        .Sortable()
        .Groupable()
        .Filterable()
        .Scrollable(c => c.Enabled(true))
        .Selectable()
        .Resizable(resizing => resizing.Columns(true))

)*@ 




    <div id="tree" style="width:270px">
        @(Html.Telerik().TreeView()
        .Name("TreeSBSAssetRegister")
        .BindTo(Model, mappings =>
        {
            mappings.For<StarEnergi.Models.plant>(binding => binding
                    .ItemDataBound((item, plant) =>
                    {
                        item.Text = plant.nama;
                        item.Value = Config.TreeType.PLANT + ";" + plant.id.ToString();
                        item.Expanded = true;
                        item.LoadOnDemand = plant.focs.Count > 0;
                        if (plant.focs.Count != 0)
                        {
                            item.ImageUrl = ("~/Content/image/folder.png");
                        }
                        else
                            item.ImageUrl = ("~/Content/image/file.png");
                    }));


        })
        .DataBinding(dataBinding => dataBinding
                .Ajax().Select("_AjaxLoadingTreeView", "Admin")
        )
        .ClientEvents(eventsTree =>
                   eventsTree.OnSelect("onSelectTree")
                  
        )
        )
    </div>
    <div id="content" style="float:left;margin-left: 290px;">

    </div>

</div>