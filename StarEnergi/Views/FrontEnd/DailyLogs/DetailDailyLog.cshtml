@model StarEnergi.Models.daily_log
@{
    int? id = Model.id as Nullable<Int32>;
    int? id2 = ViewBag.mod as Nullable<Int32>;
    StarEnergi.Models.daily_log dl = new StarEnergi.Models.daily_log();

    if (ViewBag.mod != null)
    {
        dl = ViewBag.datas as StarEnergi.Models.daily_log;
    }
    double a;

    List<StarEnergi.Models.daily_log_to_wells> logWells, logWells1, logWells2;
    StarEnergi.Models.daily_log_to_wells findLogWell, findLogWell2;
    int halfCount, i;
}
<link rel="stylesheet" type="text/css" href="../../../Content/screen.css" media="screen, projection, print" />
<link rel="stylesheet" type="text/css" href="../../../Content/style.css" media="screen, projection, print" />
<script>
    
</script>
<div class="container">
	<header>
		<b>Wayang Windu Geothermal Power Plant</b>
	</header>
    <h4>Day Shift</h4>
	<div class="log-part1">
		<table class="w-border no-border-last-row">
			<tr>
				<td class="yellow-bg center">Date</td>
				<td class="yellow-bg center">Group</td>
				<td class="yellow-bg center">Production Foreman</td>
				<td class="yellow-bg center" colspan="4">Production Operators</td>
			</tr>
			<tr>
				<td rowspan="2" class="no-border-btm center">
                    @(Model.date != null ? Model.date.Value.ToLongDateString() : "")&nbsp;
				</td>
				<td rowspan="2" class="no-border-btm center">@(Model.grup)&nbsp;</td>
				<td rowspan="2" class="no-border-btm center">@(Model.production_foreman)&nbsp;</td>
				<td class="center width-100">@(Model.production_operator_1)&nbsp;</td>
				<td class="center width-100">@(Model.production_operator_3)&nbsp;</td>
				<td class="center width-100">@(Model.production_operator_5)&nbsp;</td>
				<td class="center width-100">@(Model.production_operator_7)&nbsp;</td>
			</tr>
			<tr>
				<td class="center width-100">@(Model.production_operator_2)&nbsp;</td>
				<td class="center width-100">@(Model.production_operator_4)&nbsp;</td>
				<td class="center width-100">@(Model.production_operator_6)&nbsp;</td>
				<td class="center width-100">@(Model.production_operator_8)&nbsp;</td>
			</tr>
		</table>
	</div>
	<div class="log-part2">
        <table class="w-border daily-log-table">
		    <tr>
			    <td class="yellow-bg time no-border-btm center" rowspan="2">TIME</td>
			    <td class="yellow-bg center" colspan="2">DESCRIPTION</td>
		    </tr>
		    <tr>
			    <td class="yellow-bg center">PRODUCTION AND INJECTION WELLS</td>
			    <td class="yellow-bg center">POWER STATION</td>
		    </tr>
		    <tr>
			    <td class="time center no-border-btm" rowspan="22">
                    @(Model.time_check)
			    </td>
                <td class="input-wells">
                    <table class="w-border">
                        <tr>
			                <td class="blue-bg center">Wells</td>
			                <td class="blue-bg center width-50">FCV (%)</td>
			                <td class="blue-bg center width-50">Flow (kg/s)</td>
			                <td class="blue-bg center width-50">WHP (Bar)</td>
			                <td class="blue-bg center">Wells</td>
			                <td class="blue-bg center width-50">FCV (%)</td>
			                <td class="blue-bg center width-50">Flow (kg/s)</td>
			                <td class="blue-bg center width-50">WHP (Bar)</td>
                        </tr>
                        @{
                            logWells = Model.daily_log_to_wells.OrderBy(m => m.daily_log_wells.name).ToList();
                            halfCount = (logWells.Count / 2) + (logWells.Count % 2);
                            logWells1 = logWells.Take(halfCount).ToList();
                            logWells2 = logWells.Skip(halfCount).ToList();
                            i = 0;

                            while (i < halfCount)
                            {
                                findLogWell = logWells1.ElementAt(i);
                                findLogWell2 = logWells2.ElementAtOrDefault(i);
		                <tr>
                            @Html.DisplayFor(m => findLogWell)
                            @if(findLogWell2 != null){
                                @Html.DisplayFor(m => findLogWell2);
                            }
		                </tr>
                                i++;
                            }
                        }
		                <tr>
			                <td class="blue-bg center">U1 NCG Flow (kg/s)</td>
			                <td class="blue-bg center">U2 NCG Flow (kg/s)</td>
			                <td class="blue-bg center">U1 Turbine Exp. (mm)</td>
			                <td class="blue-bg center">U2 Turbine Exp. (mm)</td>
			                <td class="blue-bg center">U1 CT Temp. (C)</td>
			                <td class="blue-bg center">U2 CT Temp. (C)</td>
			                <td class="blue-bg center">T1 Exhaust Temp. (C)</td>
			                <td class="blue-bg center">T2 Exhaust Temp. (C)</td>			    
		                </tr>
		                <tr>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.ncg_1, out a) ? a.ToString("f2") : Model.ncg_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.ncg_2, out a) ? a.ToString("f2") : Model.ncg_2)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.turbine_1, out a) ? a.ToString("f2") : Model.turbine_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.turbine_2, out a) ? a.ToString("f2") : Model.turbine_2)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.ct_temp_1, out a) ? a.ToString("f2") : Model.ct_temp_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.ct_temp_2, out a) ? a.ToString("f2") : Model.ct_temp_2)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.exhaust_1, out a) ? a.ToString("f2") : Model.exhaust_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.exhaust_2, out a) ? a.ToString("f2") : Model.exhaust_2)</td>
			    
		                </tr>
		                <tr>
			                <td class="blue-bg center">Upper TP Level (m)</td>
			                <td class="blue-bg center">Lower TP Level (m)</td>
			                <td class="blue-bg center">MV-333 Position (%)</td>
			                <td class="blue-bg center">MV-334 Position (%)</td>
			                <td class="blue-bg center">Brine Level (mm)</td>
			                <td class="blue-bg center">Condensate Level (mm)</td>
			                <td class="blue-bg center">NaOH 48% Level (mm)</td>
			                <td class="blue-bg center">WWD Pond Level (m)</td>			    
		                </tr>
		                <tr>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.upper_tp_level, out a) ? a.ToString("f2") : Model.upper_tp_level) &nbsp;</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.lower_tp_level, out a) ? a.ToString("f2") : Model.lower_tp_level)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.mv_333, out a) ? a.ToString("f2") : Model.mv_333)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.mv_334, out a) ? a.ToString("f2") : Model.mv_334)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.brine_level, out a) ? a.ToString("f2") : Model.brine_level)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.condensate_level, out a) ? a.ToString("f2") : Model.condensate_level)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.naoh_level, out a) ? a.ToString("f2") : Model.naoh_level)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.wwd_pond_level, out a) ? a.ToString("f2") : Model.wwd_pond_level)</td>
		                </tr>
                    </table>
                </td>
                
                <td class="power-station">
                    <table class="w-border">
                        <tr>
			                <td class="blue-bg">&nbsp;</td>
			                <td class="blue-bg center width-50">T/G Unit 1</td>
			                <td class="blue-bg center width-50">T/G Unit 2</td>
			                <td class="blue-bg">&nbsp;</td>
                        </tr>
                        <tr>                            
			                <td>Generator Output</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.generator_output_1, out a) ? a.ToString("f2") : Model.generator_output_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.generator_output_2, out a) ? a.ToString("f2") : Model.generator_output_2)</td>
			                <td>MW</td>
                        </tr>
                        <tr>
			                <td>(gross)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.gross_1, out a) ? a.ToString("f2") : Model.gross_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.gross_2, out a) ? a.ToString("f2") : Model.gross_2)</td>
			                <td>Mvar</td>
                        </tr>
                        <tr>
			                <td>Generator Output Counter</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.generator_output_counter_1, out a) ? a.ToString("f2") : Model.generator_output_counter_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.generator_output_counter_2, out a) ? a.ToString("f2") : Model.generator_output_counter_2)</td>
			                <td>minute</td>
                        </tr>
                        <tr>
			                <td>Power Factor</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.power_factor_1, out a) ? a.ToString("f2") : Model.power_factor_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.power_factor_2, out a) ? a.ToString("f2") : Model.power_factor_2)</td>
			                <td>&nbsp;</td>
                        </tr>
                        <tr>
                            <td>Tap Changer</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.tap_charger_1, out a) ? a.ToString("f2") : Model.tap_charger_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.tap_charger_2, out a) ? a.ToString("f2") : Model.tap_charger_2)</td>
			                <td>step</td>
                        </tr>
                        <tr>
                            <td>PLN Grid Voltage</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.pln_grid_voltage_1, out a) ? a.ToString("f2") : Model.pln_grid_voltage_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.pln_grid_voltage_2, out a) ? a.ToString("f2") : Model.pln_grid_voltage_2)</td>
			                <td>kV</td>
                        </tr>
                        <tr>
                            <td>Valve Limiter</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.valve_limiter_1, out a) ? a.ToString("f2") : Model.valve_limiter_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.valve_limiter_2, out a) ? a.ToString("f2") : Model.valve_limiter_2)</td>
			                <td>%</td>
                        </tr>
                        <tr>
                            <td>Governor Output</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.governor_output_1, out a) ? a.ToString("f2") : Model.governor_output_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.governor_output_2, out a) ? a.ToString("f2") : Model.governor_output_2)</td>
			                <td>%</td>
                        </tr>
                        <tr>
                            <td>WCP Counter</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.wcp_counter_1, out a) ? a.ToString("f2") : Model.wcp_counter_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.wcp_counter_2, out a) ? a.ToString("f2") : Model.wcp_counter_2)</td>
			                <td>minute</td>
                        </tr>
                        <tr>
                            <td>Condenser Pressure</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.condenser_pressure_1, out a) ? a.ToString("f2") : Model.condenser_pressure_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.condenser_pressure_2, out a) ? a.ToString("f2") : Model.condenser_pressure_2)</td>
			                <td>mBar</td>
                        </tr>
                        <tr>
                            <td>Main C/W Flow</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.main_cw_flow_1, out a) ? a.ToString("f2") : Model.main_cw_flow_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.main_cw_flow_2, out a) ? a.ToString("f2") : Model.main_cw_flow_2)</td>
			                <td>kg/s</td>
                        </tr>
                        <tr>
                            <td>PPC-G(CO)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.ppc_g_co_1, out a) ? a.ToString("f2") : Model.ppc_g_co_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.ppc_g_co_2, out a) ? a.ToString("f2") : Model.ppc_g_co_2)</td>
			                <td>%</td>
                        </tr>
                        <tr>
                            <td>Interface Pressure (SP)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.interface_pressure_1, out a) ? a.ToString("f2") : Model.interface_pressure_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.interface_pressure_2, out a) ? a.ToString("f2") : Model.interface_pressure_2)</td>
			                <td>Bar</td>
                        </tr>
                        <tr>
                            <td>Vent Bias(SP)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.vent_bias_1, out a) ? a.ToString("f2") : Model.vent_bias_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.vent_bias_2, out a) ? a.ToString("f2") : Model.vent_bias_2)</td>
			                <td>Bar</td>
                        </tr>
                        <tr>
                            <td>Main C/W Pressure</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.main_cw_pressure_1, out a) ? a.ToString("f2") : Model.main_cw_pressure_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.main_cw_pressure_2, out a) ? a.ToString("f2") : Model.main_cw_pressure_2)</td>
			                <td>Bar</td>
                        </tr>
                        <tr>
                            <td>CT Basin pH</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.ct_basin_ph_1, out a) ? a.ToString("f2") : Model.ct_basin_ph_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.ct_basin_ph_2, out a) ? a.ToString("f2") : Model.ct_basin_ph_2)</td>
			                <td>&nbsp;</td>
                        </tr>
		                <tr>
			                <td>Condenser C/W Inlet-A</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.condenser_cw_inlet_a_1, out a) ? a.ToString("f2") : Model.condenser_cw_inlet_a_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.condenser_cw_inlet_a_2, out a) ? a.ToString("f2") : Model.condenser_cw_inlet_a_2)</td>
			                <td>%</td>
		                </tr>
                        <tr>
                            <td>Condenser C/W Inlet-B</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.condenser_cw_inlet_b_1, out a) ? a.ToString("f2") : Model.condenser_cw_inlet_b_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.condenser_cw_inlet_b_2, out a) ? a.ToString("f2") : Model.condenser_cw_inlet_b_2)</td>
			                <td>%</td>
                        </tr>
                        <tr>
                            <td>Gen. Trans. Winding Temp.</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.gen_trans_winding_temp_1, out a) ? a.ToString("f2") : Model.gen_trans_winding_temp_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.gen_trans_winding_temp_2, out a) ? a.ToString("f2") : Model.gen_trans_winding_temp_2)</td>
			                <td>C</td>
                        </tr>
		                <tr>
			                <td>Unit Trans. Winding Temp.</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.unit_trans_winding_temp_1, out a) ? a.ToString("f2") : Model.unit_trans_winding_temp_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.unit_trans_winding_temp_2, out a) ? a.ToString("f2") : Model.unit_trans_winding_temp_2)</td>
			                <td>C</td>
		                </tr>
                        <tr>
                            <td>Wheel Case Pressure</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.wheel_case_pressure_1, out a) ? a.ToString("f2") : Model.wheel_case_pressure_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(Model.wheel_case_pressure_2, out a) ? a.ToString("f2") : Model.wheel_case_pressure_2)</td>
			                <td>Bar</td>
                        </tr>
                    </table>
                </td>
		    </tr>
	    </table>
	</div>
	<div class="log-part3"></div>
	<div class="log-part4"></div>
	<div class="log-part5">
        <table class="w-border no-border-last-row">
		    <tr>
			    <td class="time center no-border-top no-border-btm" rowspan="14">&nbsp;</td>
			    <td class="yellow-bg center" colspan="9">METERING AND DISPATCH</td>
		    </tr>
		    <tr>
			    <td class="yellow-bg" colspan="2">&nbsp;</td>
			    <td class="yellow-bg center">Unit-1</td>
			    <td class="yellow-bg center">Unit-2</td>
			    <td class="yellow-bg" colspan="2">&nbsp;</td>
			    <td class="yellow-bg center">Unit-1</td>
			    <td class="yellow-bg center">Unit-2</td>
			    <td class="yellow-bg">&nbsp;</td>
		    </tr>
		    <tr>
			    <td rowspan="2">Unit Transformer</td>
			    <td>Active</td>
			    <td class="gray-bg numbers">@(Double.TryParse(Model.uti_active_1, out a) ? a.ToString("f2") : Model.uti_active_1)</td>
			    <td class="gray-bg numbers">@(Double.TryParse(Model.uti_active_2, out a) ? a.ToString("f2") : Model.uti_active_2)</td>
			    <td>MWh</td>
			    <td>SEGWWL Availability</td>
			    <td class="gray-bg numbers">@(Double.TryParse(Model.segwwl_availability_1, out a) ? a.ToString("f2") : Model.segwwl_availability_1)</td>
			    <td class="gray-bg numbers">@(Double.TryParse(Model.segwwl_availability_2, out a) ? a.ToString("f2") : Model.segwwl_availability_2)</td>
			    <td>MWh</td>
		    </tr>
		    <tr>
			    <td>Reactive</td>
			    <td class="gray-bg numbers">@(Double.TryParse(Model.uti_reactive_1, out a) ? a.ToString("f2") : Model.uti_reactive_1)</td>
			    <td class="gray-bg numbers">@(Double.TryParse(Model.uti_reactive_2, out a) ? a.ToString("f2") : Model.uti_reactive_2)</td>
			    <td>Mvarh</td>
			    <td>PLN Dispatch</td>
			    <td class="gray-bg numbers">@(Double.TryParse(Model.pln_dispatch_1, out a) ? a.ToString("f2") : Model.pln_dispatch_1)</td>
			    <td class="gray-bg numbers">@(Double.TryParse(Model.pln_dispatch_2, out a) ? a.ToString("f2") : Model.pln_dispatch_2)</td>
			    <td>MWh</td>
		    </tr>
		    <tr>
			    <td rowspan="2">Steam Consumption</td>
			    <td>Main</td>
			    <td class="gray-bg numbers">@(Double.TryParse(Model.sc_main_1, out a) ? a.ToString("f2") : Model.sc_main_1)</td>
			    <td class="gray-bg numbers">@(Double.TryParse(Model.sc_main_2, out a) ? a.ToString("f2") : Model.sc_main_2)</td>
			    <td>Ton</td>
			    <td>PLN Meter</td>
			    <td class="gray-bg numbers">@(Double.TryParse(Model.pln_meter_1, out a) ? a.ToString("f2") : Model.pln_meter_1)</td>
			    <td class="gray-bg numbers">@(Double.TryParse(Model.pln_meter_2, out a) ? a.ToString("f2") : Model.pln_meter_2)</td>
			    <td>MWh</td>
		    </tr>
		    <tr>
			    <td>Auxiliary</td>
			    <td class="gray-bg numbers">@(Double.TryParse(Model.sc_auxiliary_1, out a) ? a.ToString("f2") : Model.sc_auxiliary_1)</td>
			    <td class="gray-bg numbers">@(Double.TryParse(Model.sc_auxiliary_2, out a) ? a.ToString("f2") : Model.sc_auxiliary_2)</td>
			    <td>Ton</td>
			    <td>SEGWWL Export</td>
			    <td class="gray-bg numbers">@(Double.TryParse(Model.segwwl_export_1, out a) ? a.ToString("f2") : Model.segwwl_export_1)</td>
			    <td class="gray-bg numbers">@(Double.TryParse(Model.segwwl_export_2, out a) ? a.ToString("f2") : Model.segwwl_export_2)</td>
			    <td>MWh</td>
		    </tr>
		    <tr>
			    <td colspan="5" class="yellow-bg center">Production</td>
			    <td>Actual Export</td>
			    <td class="gray-bg numbers">@(Double.TryParse(Model.actual_export_1, out a) ? a.ToString("f2") : Model.actual_export_1)</td>
			    <td class="gray-bg numbers">@(Double.TryParse(Model.actual_export_2, out a) ? a.ToString("f2") : Model.actual_export_2)</td>
			    <td>MWh</td>
		    </tr>
		    <tr>
			    <td rowspan="2">Generate Export (gross)</td>
			    <td>Active</td>
			    <td class="gray-bg numbers">@(Double.TryParse(Model.ge_active_1, out a) ? a.ToString("f2") : Model.ge_active_1)</td>
			    <td class="gray-bg numbers">@(Double.TryParse(Model.ge_active_2, out a) ? a.ToString("f2") : Model.ge_active_2)</td>
			    <td>MWh</td>
			    <td>Production Excess</td>
			    <td class="gray-bg numbers">@(Double.TryParse(Model.production_excess_1, out a) ? a.ToString("f2") : Model.production_excess_1)</td>
			    <td class="gray-bg numbers">@(Double.TryParse(Model.production_excess_2, out a) ? a.ToString("f2") : Model.production_excess_2)</td>
			    <td>MWh</td>
		    </tr>
		    <tr>
			    <td>Reactive</td>
			    <td class="gray-bg numbers">@(Double.TryParse(Model.ge_reactive_1, out a) ? a.ToString("f2") : Model.ge_reactive_1)</td>
			    <td class="gray-bg numbers">@(Double.TryParse(Model.ge_reactive_2, out a) ? a.ToString("f2") : Model.ge_reactive_2)</td>
			    <td>Mvarh</td>
			    <td class="yellow-bg center" colspan="4">Losses</td>
		    </tr>
		    <tr>
			    <td rowspan="2">Metering at 10:00</td>
			    <td>SEGWWL</td>
			    <td class="gray-bg numbers">@(Double.TryParse(Model.metering_segwwl_1, out a) ? a.ToString("f2") : Model.metering_segwwl_1)</td>
			    <td class="gray-bg numbers">@(Double.TryParse(Model.metering_segwwl_2, out a) ? a.ToString("f2") : Model.metering_segwwl_2)</td>
			    <td>MWh</td>
			    <td>RPF</td>
			    <td class="gray-bg numbers">@(Double.TryParse(Model.rpf_1, out a) ? a.ToString("f2") : Model.rpf_1)</td>
			    <td class="gray-bg numbers">@(Double.TryParse(Model.rpf_2, out a) ? a.ToString("f2") : Model.rpf_2)</td>
			    <td>MWh</td>
		    </tr>
		    <tr>
			    <td>PLN</td>
			    <td class="gray-bg numbers">@(Double.TryParse(Model.metering_pln_1, out a) ? a.ToString("f2") : Model.metering_pln_1)</td>
			    <td class="gray-bg numbers">@(Double.TryParse(Model.metering_pln_2, out a) ? a.ToString("f2") : Model.metering_pln_2)</td>
			    <td>MWh</td>
			    <td>PGF</td>
			    <td class="gray-bg numbers">@(Double.TryParse(Model.pgf_1, out a) ? a.ToString("f2") : Model.pgf_1)</td>
			    <td class="gray-bg numbers">@(Double.TryParse(Model.pgf_2, out a) ? a.ToString("f2") : Model.pgf_2)</td>
			    <td>MWh</td>
		    </tr>
		    <tr>
			    <td rowspan="2">Condensate</td>
			    <td>P/S</td>
			    <td class="gray-bg numbers">@(Double.TryParse(Model.condensate_ps_1, out a) ? a.ToString("f2") : Model.condensate_ps_1)</td>
			    <td class="gray-bg numbers">@(Double.TryParse(Model.condensate_ps_2, out a) ? a.ToString("f2") : Model.condensate_ps_2)</td>
			    <td>Ton</td>
			    <td>PLN</td>
			    <td class="gray-bg numbers">@(Double.TryParse(Model.pln_1, out a) ? a.ToString("f2") : Model.pln_1)</td>
			    <td class="gray-bg numbers">@(Double.TryParse(Model.pln_2, out a) ? a.ToString("f2") : Model.pln_2)</td>
			    <td>Ton</td>
		    </tr>
		    <tr>
			    <td>Total</td>
			    <td class="gray-bg numbers" colspan="2">@(Double.TryParse(Model.condensate_total, out a) ? a.ToString("f2") : Model.condensate_total)</td>
			    <td>Ton</td>
			    <td rowspan="2" colspan="4"><b>Note:</b><br />@(Model.note)</td>
		    </tr>
		    <tr>
			    <td>Brine</td>
			    <td>Total</td>
			    <td class="gray-bg numbers" colspan="2">@(Double.TryParse(Model.brine_total, out a) ? a.ToString("f2") : Model.brine_total)</td>
			    <td>Ton</td>
		    </tr>
	    </table>
	</div>	
	<div class="log-part6"></div>	
	<div class="log-part7"></div>
	<div class="log-part8"></div>
<br/>
@if (id2 != null)
{
    <h4>Night Shift</h4>
    <div class="log-part1">
		<table class="w-border no-border-last-row">
			<tr>
				<td class="yellow-bg center">Date</td>
				<td class="yellow-bg center">Group</td>
				<td class="yellow-bg center">Production Foreman</td>
				<td class="yellow-bg center" colspan="4">Production Operators</td>
			</tr>
			<tr>
				<td rowspan="2" class="no-border-btm center">
                    @(dl.date != null ? dl.date.Value.ToLongDateString() : "")&nbsp;&nbsp;
				</td>
				<td rowspan="2" class="no-border-btm center">@(dl.grup)&nbsp;</td>
				<td rowspan="2" class="no-border-btm center">@(dl.production_foreman)&nbsp;</td>
				<td class="center width-100">@(dl.production_operator_1)&nbsp;</td>
				<td class="center width-100">@(dl.production_operator_3)&nbsp;</td>
				<td class="center width-100">@(dl.production_operator_5)&nbsp;</td>
				<td class="center width-100">@(dl.production_operator_7)&nbsp;</td>
			</tr>
			<tr>
				<td class="center width-100">@(dl.production_operator_2)&nbsp;</td>
				<td class="center width-100">@(dl.production_operator_4)&nbsp;</td>
				<td class="center width-100">@(dl.production_operator_6)&nbsp;</td>
				<td class="center width-100">@(dl.production_operator_8)&nbsp;</td>
			</tr>
		</table>
	</div>
	<div class="log-part2">
        <table class="w-border daily-log-table">
		    <tr>
			    <td class="yellow-bg time no-border-btm center" rowspan="2">TIME</td>
			    <td class="yellow-bg center" colspan="2">DESCRIPTION</td>
		    </tr>
		    <tr>
			    <td class="yellow-bg center">PRODUCTION AND INJECTION WELLS</td>
			    <td class="yellow-bg center">POWER STATION</td>
		    </tr>
		    <tr>
			    <td class="time center no-border-btm" rowspan="22">
                    @(dl.time_check)
			    </td>
                <td class="input-wells">
                    <table class="w-border">
                        <tr>
			                <td class="blue-bg center">Wells</td>
			                <td class="blue-bg center width-50">FCV (%)</td>
			                <td class="blue-bg center width-50">Flow (kg/s)</td>
			                <td class="blue-bg center width-50">WHP (Bar)</td>
			                <td class="blue-bg center">Wells</td>
			                <td class="blue-bg center width-50">FCV (%)</td>
			                <td class="blue-bg center width-50">Flow (kg/s)</td>
			                <td class="blue-bg center width-50">WHP (Bar)</td>
                        </tr>
                        @{
                            logWells = dl.daily_log_to_wells.OrderBy(m => m.daily_log_wells.name).ToList();
                            halfCount = (logWells.Count / 2) + (logWells.Count % 2);
                            logWells1 = logWells.Take(halfCount).ToList();
                            logWells2 = logWells.Skip(halfCount).ToList();
                            i = 0;

                            while (i < halfCount)
                            {
                                findLogWell = logWells1.ElementAt(i);
                                findLogWell2 = logWells2.ElementAtOrDefault(i);
		                <tr>
                            @Html.DisplayFor(m => findLogWell)
                            @if(findLogWell2 != null){
                                @Html.DisplayFor(m => findLogWell2);
                            }
		                </tr>
                                i++;
                            }
                        }
		                <tr>
			                <td class="blue-bg center">U1 NCG Flow (kg/s)</td>
			                <td class="blue-bg center">U2 NCG Flow (kg/s)</td>
			                <td class="blue-bg center">U1 Turbine Exp. (mm)</td>
			                <td class="blue-bg center">U2 Turbine Exp. (mm)</td>
			                <td class="blue-bg center">U1 CT Temp. (C)</td>
			                <td class="blue-bg center">U2 CT Temp. (C)</td>
			                <td class="blue-bg center">T1 Exhaust Temp. (C)</td>
			                <td class="blue-bg center">T2 Exhaust Temp. (C)</td>			    
		                </tr>
		                <tr>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.ncg_1, out a) ? a.ToString("f2") : dl.ncg_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.ncg_2, out a) ? a.ToString("f2") : dl.ncg_2)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.turbine_1, out a) ? a.ToString("f2") : dl.turbine_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.turbine_2, out a) ? a.ToString("f2") : dl.turbine_2)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.ct_temp_1, out a) ? a.ToString("f2") : dl.ct_temp_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.ct_temp_2, out a) ? a.ToString("f2") : dl.ct_temp_2)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.exhaust_1, out a) ? a.ToString("f2") : dl.exhaust_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.exhaust_2, out a) ? a.ToString("f2") : dl.exhaust_2)</td>
		                </tr>
		                <tr>
			                <td class="blue-bg center">Upper TP Level (m)</td>
			                <td class="blue-bg center">Lower TP Level (m)</td>
			                <td class="blue-bg center">MV-333 Position (%)</td>
			                <td class="blue-bg center">MV-334 Position (%)</td>
			                <td class="blue-bg center">Brine Level (mm)</td>
			                <td class="blue-bg center">Condensate Level (mm)</td>
			                <td class="blue-bg center">NaOH 48% Level (mm)</td>
			                <td class="blue-bg center">WWD Pond Level (m)</td>
		                </tr>
		                <tr>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.upper_tp_level, out a) ? a.ToString("f2") : dl.upper_tp_level)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.lower_tp_level, out a) ? a.ToString("f2") : dl.lower_tp_level)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.mv_333, out a) ? a.ToString("f2") : dl.mv_333)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.mv_334, out a) ? a.ToString("f2") : dl.mv_334)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.brine_level, out a) ? a.ToString("f2") : dl.brine_level)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.condensate_level, out a) ? a.ToString("f2") : dl.condensate_level)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.naoh_level, out a) ? a.ToString("f2") : dl.naoh_level)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.wwd_pond_level, out a) ? a.ToString("f2") : dl.wwd_pond_level)</td>
		                </tr>
                    </table>
                </td>
                
                <td class="power-station">
                    <table class="w-border">
                        <tr>
			                <td class="blue-bg">&nbsp;</td>
			                <td class="blue-bg center width-50">T/G Unit 1</td>
			                <td class="blue-bg center width-50">T/G Unit 2</td>
			                <td class="blue-bg">&nbsp;</td>
		                </tr>
                        <tr>
                            <td>Generator Output</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.generator_output_1, out a) ? a.ToString("f2") : dl.generator_output_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.generator_output_2, out a) ? a.ToString("f2") : dl.generator_output_2)</td>
			                <td>MW</td>
                        </tr>
                        <tr>
                            <td>(gross)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.gross_1, out a) ? a.ToString("f2") : dl.gross_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.gross_2, out a) ? a.ToString("f2") : dl.gross_2)</td>
			                <td>Mvar</td>
                        </tr>
                        <tr>
                            <td>Generator Output Counter</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.generator_output_counter_1, out a) ? a.ToString("f2") : dl.generator_output_counter_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.generator_output_counter_2, out a) ? a.ToString("f2") : dl.generator_output_counter_2)</td>
			                <td>minute</td>
                        </tr>
                        <tr>
                            <td>Power Factor</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.power_factor_1, out a) ? a.ToString("f2") : dl.power_factor_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.power_factor_2, out a) ? a.ToString("f2") : dl.power_factor_2)</td>
			                <td>&nbsp;</td>
                        </tr>
                        <tr>
                            <td>Tap Changer</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.tap_charger_1, out a) ? a.ToString("f2") : dl.tap_charger_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.tap_charger_2, out a) ? a.ToString("f2") : dl.tap_charger_2)</td>
			                <td>step</td>
                        </tr>
                        <tr>
                            <td>PLN Grid Voltage</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.pln_grid_voltage_1, out a) ? a.ToString("f2") : dl.pln_grid_voltage_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.pln_grid_voltage_2, out a) ? a.ToString("f2") : dl.pln_grid_voltage_2)</td>
			                <td>kV</td>
                        </tr>
                        <tr>
                            <td>Valve Limiter</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.valve_limiter_1, out a) ? a.ToString("f2") : dl.valve_limiter_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.valve_limiter_2, out a) ? a.ToString("f2") : dl.valve_limiter_2)</td>
			                <td>%</td>
                        </tr>
                        <tr>
                            <td>Governor Output</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.governor_output_1, out a) ? a.ToString("f2") : dl.governor_output_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.governor_output_2, out a) ? a.ToString("f2") : dl.governor_output_2)</td>
			                <td>%</td>
                        </tr>
                        <tr>
                            <td>WCP Counter</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.wcp_counter_1, out a) ? a.ToString("f2") : dl.wcp_counter_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.wcp_counter_2, out a) ? a.ToString("f2") : dl.wcp_counter_2)</td>
			                <td>minute</td>
                        </tr>
                        <tr>
                            <td>Condenser Pressure</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.condenser_pressure_1, out a) ? a.ToString("f2") : dl.condenser_pressure_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.condenser_pressure_2, out a) ? a.ToString("f2") : dl.condenser_pressure_2)</td>
			                <td>mBar</td>
                        </tr>
                        <tr>
                            <td>Main C/W Flow</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.main_cw_flow_1, out a) ? a.ToString("f2") : dl.main_cw_flow_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.main_cw_flow_2, out a) ? a.ToString("f2") : dl.main_cw_flow_2)</td>
			                <td>kg/s</td>
                        </tr>
                        <tr>
                            <td>PPC-G(CO)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.ppc_g_co_1, out a) ? a.ToString("f2") : dl.ppc_g_co_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.ppc_g_co_2, out a) ? a.ToString("f2") : dl.ppc_g_co_2)</td>
			                <td>%</td>
                        </tr>
                        <tr>
                            <td>Interface Pressure (SP)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.interface_pressure_1, out a) ? a.ToString("f2") : dl.interface_pressure_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.interface_pressure_2, out a) ? a.ToString("f2") : dl.interface_pressure_2)</td>
			                <td>Bar</td>
                        </tr>
                        <tr>
                            <td>Vent Bias(SP)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.vent_bias_1, out a) ? a.ToString("f2") : dl.vent_bias_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.vent_bias_2, out a) ? a.ToString("f2") : dl.vent_bias_2)</td>
			                <td>Bar</td>
                        </tr>
                        <tr>
                            <td>Main C/W Pressure</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.main_cw_pressure_1, out a) ? a.ToString("f2") : dl.main_cw_pressure_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.main_cw_pressure_2, out a) ? a.ToString("f2") : dl.main_cw_pressure_2)</td>
			                <td>Bar</td>
                        </tr>
                        <tr>
                            <td>CT Basin pH</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.ct_basin_ph_1, out a) ? a.ToString("f2") : dl.ct_basin_ph_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.ct_basin_ph_2, out a) ? a.ToString("f2") : dl.ct_basin_ph_2)</td>
			                <td>&nbsp;</td>
                        </tr>
		                <tr>
			                <td>Condenser C/W Inlet-A</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.condenser_cw_inlet_a_1, out a) ? a.ToString("f2") : dl.condenser_cw_inlet_a_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.condenser_cw_inlet_a_2, out a) ? a.ToString("f2") : dl.condenser_cw_inlet_a_2)</td>
			                <td>%</td>
		                </tr>
                        <tr>
                            <td>Condenser C/W Inlet-B</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.condenser_cw_inlet_b_1, out a) ? a.ToString("f2") : dl.condenser_cw_inlet_b_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.condenser_cw_inlet_b_2, out a) ? a.ToString("f2") : dl.condenser_cw_inlet_b_2)</td>
			                <td>%</td>
                        </tr>
                        <tr>
                            <td>Gen. Trans. Winding Temp.</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.gen_trans_winding_temp_1, out a) ? a.ToString("f2") : dl.gen_trans_winding_temp_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.gen_trans_winding_temp_2, out a) ? a.ToString("f2") : dl.gen_trans_winding_temp_2)</td>
			                <td>C</td>
                        </tr>
		                <tr>
			                <td>Unit Trans. Winding Temp.</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.unit_trans_winding_temp_1, out a) ? a.ToString("f2") : dl.unit_trans_winding_temp_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.unit_trans_winding_temp_2, out a) ? a.ToString("f2") : dl.unit_trans_winding_temp_2)</td>
			                <td>C</td>
		                </tr>
                        <tr>
                            <td>Wheel Case Pressure</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.wheel_case_pressure_1, out a) ? a.ToString("f2") : dl.wheel_case_pressure_1)</td>
			                <td class="gray-bg numbers">@(Double.TryParse(dl.wheel_case_pressure_2, out a) ? a.ToString("f2") : dl.wheel_case_pressure_2)</td>
			                <td>Bar</td>
                        </tr>
                    </table>
                </td>
	    </table>
	</div>
	<div class="log-part32"></div>
	<div class="log-part42"></div>
	<div class="log-part62"></div>	
	<div class="log-part72"></div>
	<div class="log-part82"></div>	
}
</div>
<br />
<div class="submit">
    <button type="button" value="Back" onclick="back();">
        @Html.ActionLink("Back", "Index", "DailyLogs")
    </button>
    <button type="button" value="Print Daily Log">
        @Html.ActionLink("Print Daily Log", "printDL", "DailyLogs", new { id = id }, new { target = "_blank" })
    </button>
</div>
<script type="text/javascript">
    function loadContent() {
        $('.log-part3').load('DailyLogs/part3View?id=@id');
        $('.log-part4').load('DailyLogs/part4View?id=@id');
        $('.log-part6').load('DailyLogs/part6View?id=@id');
        $('.log-part7').load('DailyLogs/part7View?id=@id');
        $('.log-part8').load('DailyLogs/part8View?id=@id');
        $('.log-part32').load('DailyLogs/part3View?id=@id2');
        $('.log-part42').load('DailyLogs/part4View?id=@id2');
        $('.log-part62').load('DailyLogs/part6View?id=@id2');
        $('.log-part72').load('DailyLogs/part7View?id=@id2');
        $('.log-part82').load('DailyLogs/part8View?id=@id2');
    }

    $(document).ready(function () {
        //resizeIframe();
        loadContent();
    });

    function back() {
        window.location = '/DailyLogs';
    }

    function setIframeHeight(sel, h) {
        $(sel).height(h);
    }
</script>