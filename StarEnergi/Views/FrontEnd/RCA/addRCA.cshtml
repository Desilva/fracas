@model StarEnergi.Models.RCAEntityModel
@{
    int? isPublish = Model != null ? Model.is_publish : 0;
    List<StarEnergi.Models.user_per_role> li = null;
    if (ViewData["user_role"] != null)
    {
        li = ViewData["user_role"] as List<StarEnergi.Models.user_per_role>;
    }
    if (ViewBag.types == "add")
    {
        ViewBag.Title = "add RCA - 1";
    }
    else if (ViewBag.types == "edit")
    {
        if ((isPublish == null || isPublish == 0) && li.Exists(p => p.role == (int)StarEnergi.Config.role.RCA))
        {
            ViewBag.Title = "edit RCA - 1";
        }
        else
        {
            ViewBag.Title = "view RCA - 1";
        }
    }

    int? id_eq = null;
    if (ViewBag.id_eq != null) {
        id_eq = ViewBag.id_eq as Nullable<Int32>;    
    }

    int? i = null;
    if (ViewBag.i != null)
    {
        i = ViewBag.i as Nullable<Int32>;
    }
}


<br />
@using(Html.BeginForm()) {
    <div class="addContent">
        <div class="addImage">
            <img src="../../../Content/image/addImage.png">
        </div>
        <div class="addInfo">
            <div class="infoAbove grey">
                <div class="up">Create a new Analysis by entering all the information you know. Some fields are pre-populated from your</div>
                <div class="down">Administration dashboard, if your administrator has filled this in.</div>
            </div>
            <div class="addField">
                <input type="hidden" name="isPublish" id="isPublish" value="@isPublish" />
                <input type="hidden" name="types" id="types" value="@ViewBag.types" />
                <input type="hidden" name="id_eq" id="id_eq" value="@id_eq" />
                <input type="hidden" name="i" id="i" value="@i" />
                <input type="hidden" name="l" id="l" value="@ViewBag.l" />
                <div class="info_new_left">Analysis Title <a class="bintang">*</a></div>
                <div class="infonewinput"><input id="analysisName" type="text" name="analysis_Name" value="@(ViewBag.a != null ? ViewBag.a : (Model != null ? Model.name : ""))" @if ((isPublish == null || isPublish == 0) && li.Exists(p => p.role == (int)StarEnergi.Config.role.RCA) && ViewBag.a == null && ViewBag.isView != null)
                                                                                                                                   { <text></text> } else { <text>disabled</text> }/>@if (ViewBag.a != null){<input id="analysisNameHidden" type="hidden" name="analysis_Name" value="@ViewBag.a" />}@Html.ValidationMessage("name", "Analysis title required")</div>
                <br />
                <div class="info_new_left">Analysis Description</div>
                <div class="infonewinput"><textarea rows="5" cols="22" id="analysisDescription" name="analysis_Description" @((isPublish == null || isPublish == 0) && li.Exists(p => p.role == (int)StarEnergi.Config.role.RCA) && ViewBag.isView != null ? "" : "disabled")>@(Model != null ? Model.description : "")</textarea></div>
                <br />
                <div class="info_new_left">Analysis Type <a class="bintang">*</a></div>
                <div class="infonewinput">
                        @if ((isPublish == null || isPublish == 0) && li.Exists(p => p.role == (int)StarEnergi.Config.role.RCA) && ViewBag.isView != null)
                        {
                        <select name="id_type" id="id_type">
                            @foreach (StarEnergi.Models.rca_analisys_type a in ViewBag.listAnalysisType as List<StarEnergi.Models.rca_analisys_type>)
                            {
                                if (Model == null)
                                {
                                    <option value="@a.id">@a.name</option>
                                }
                                else if (a.id == Model.id_type)
                                {
                                    <option value="@a.id" selected="selected">@a.name</option>
                                } else {
                                    <option value="@a.id">@a.name</option>
                                }
                            }
                        </select>
                        } else {
                            <input id="id_type" type="text" name="id_type" value="@Model.type_name" disabled/>   
                        }
                </div>
                <br />
                <div class="info_new_left">Estimated Annual Cost of Event (Benefit)</div>
                <div class="infonewinput">
                    @(Html.Telerik().NumericTextBox()
                        .Name("benefit")
                        .InputHtmlAttributes(new { id = "benefit" })
                        .HtmlAttributes(new { style = "margin-left:100px" })
                        .Spinners(false)
                        .MinValue(0)
                        .MaxValue(100000000)
                        .Enable((isPublish == null || isPublish == 0) && li.Exists(p => p.role == (int)StarEnergi.Config.role.RCA) && ViewBag.isView != null)
                        .Value(ViewBag.c != null ? Double.Parse(ViewBag.c) : Model == null ? 0 : Double.Parse(Model.cost))
                    )&nbsp;USD</div>
                <br />
                <div class="addSubmit">
	                <input name="cancel" value="Cancel" type="submit"/>
                    <input type="submit" value="Next" name="next"/>
                </div>
            </div> 
        </div>
    </div>
}

<script type="text/javascript">
    $('a').click(function () {
        // confirmation if user really want to exit the wizard
        var r = confirm("Are you sure want to exit this wizard?\nIf you just add new RCA, then this RCA will be deleted.");
        if (r == true) {
            // if is add, checking from the type of RCA
            if ($('#types').val() == "add") {
                // delete the RCA (call url to delete RCA)
                $.ajax({
                    type: 'POST',
                    url: "/RCA/DeleteCurrentRCA",
                    data: null,
                    success: function (e) { },
                    async: false
                });
            }
            // else just make this happen
        } else {
            event.preventDefault();
        }
    });
</script>