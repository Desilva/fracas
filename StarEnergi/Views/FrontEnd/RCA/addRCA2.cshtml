@using StarEnergi
@model StarEnergi.Models.RCAEntityModel
@{
    int? isPublish = Model != null ? Model.is_publish : 0;
    List<StarEnergi.Models.user_per_role> li = null;
    if (ViewData["user_role"] != null)
    {
        li = ViewData["user_role"] as List<StarEnergi.Models.user_per_role>;
    }
    if (ViewBag.types == "add")
    {
        ViewBag.Title = "add RCA - 2";
    }
    else if (ViewBag.types == "edit")
    {
        if ((isPublish == null || isPublish == 0) && li.Exists(p => p.role == 2))
        {
            ViewBag.Title = "edit RCA - 2";
        }
        else
        {
            ViewBag.Title = "view RCA - 2";
        }
    }

    List<StarEnergi.Models.plant> plant = ViewBag.plant as List<StarEnergi.Models.plant>;
}
<script type="text/javascript" src="../../../Scripts/jquery-1.4.4.js"></script>
@using (Html.BeginForm())
{
<div class="addContent">
    <div class="addImage">
        <img src="../../../Content/image/addImage.png">
    </div>

    <div class="addInfo">
        <div class="infoAbove white">
            <div class="up">Where is the system to be analyzed located?</div>
        </div>
        <div class="addField blue">
            <input type="hidden" name="isPublish" id="isPublish" value="@isPublish" />
            <input type="hidden" name="types" id="types" value="@ViewBag.types" />
            <div class="info_new_left">Facility</div>
            <div class="infonewinput">
                    @if ((isPublish == null || isPublish == 0) && li.Exists(p => p.role == (int)StarEnergi.Config.role.RCA) && ViewBag.isView != null)
                    {
                    <select name="id_facility" id="id_facility">
                        <!-- <option value="" disabled selected>Choose Facility</option> -->
                        @foreach (StarEnergi.Models.rca_facility a in ViewData["facility"] as List<StarEnergi.Models.rca_facility>)
                        {
                            if (Model == null)
                            {
                                if (a.id == 1) {
                                    <option value="@a.id" selected>@a.name</option>
                                } else {
                                    <option value="@a.id">@a.name</option>
                                }
                            }
                            else if (a.id == Model.id_facility)
                            {
                                <option value="@a.id" selected="selected">@a.name</option>
                            }
                            else
                            {
                                <option value="@a.id">@a.name</option>
                            }
                        }
                    </select>
                    }
                    else
                    {
                        <input id="id_facility" type="text" name="id_facility" value="@Model.facility" disabled/>   
                    }
            </div>
            <br />
            <div class="info_new_left">Department</div>
            <div class="infonewinput">
                    @if ((isPublish == null || isPublish == 0) && li.Exists(p => p.role == (int)StarEnergi.Config.role.RCA) && ViewBag.isView != null)
                    {
                    <select name="id_division" id="id_division">
                        <option value="" disabled selected>Choose Department</option>
                        @foreach (StarEnergi.Models.rca_department a in ViewData["departments"] as List<StarEnergi.Models.rca_department>)
                        {
                            if (Model == null)
                            {
                            <option value="@a.id">@a.name</option>
                            }
                            else if (a.id == Model.id_division)
                            {
                            <option value="@a.id" selected="selected">@a.name</option>
                            }
                            else
                            {
                            <option value="@a.id">@a.name</option>
                            }
                        }
                    </select>
                    }
                    else
                    {
                        <input id="id_division" type="text" name="id_division" value="@Model.division" disabled/>   
                    }
            </div>
            <br />
            <div class="info_new_left">Section</div>
            <div class="infonewinput">
                @if ((isPublish == null || isPublish == 0) && li.Exists(p => p.role == (int)StarEnergi.Config.role.RCA) && ViewBag.isView != null)
                {
                <select name="id_department" id="id_department">
                    <option value="" disabled>Choose Department</option>
                    @if (Model != null && Model.department != null)
                    {
                        foreach (StarEnergi.Models.rca_section a in ViewData["sections"] as List<StarEnergi.Models.rca_section>)
                        {
                            if (Model == null)
                            {
                            <option value="@a.id">@a.name</option>
                            }
                            else if (a.id == Model.id_department)
                            {
                            <option value="@a.id" selected="selected">@a.name</option>
                            }
                            else
                            {
                            <option value="@a.id">@a.name</option>
                            }
                        }
                    }
                </select>
                }
                else
                {
                    <input id="id_department" type="text" name="id_department" value="@Model.department" disabled/>   
                }
            </div>
            <br />
            @*<!--<div class="info_new_left">Building</div>
            <div class="infonewinput">
                @if ((isPublish == null || isPublish == 0) && li.Exists(p => p.role == 2))
                {
                <select name="id_building" id="id_building">
                    <option value="" disabled>Choose Facility</option>
                        @if (ViewBag.id_building != "")
                        {
                            foreach (StarEnergi.Models.rca_building a in ViewData["buildings"] as List<StarEnergi.Models.rca_building>)
                            {
                                if (ViewBag.id_building == null)
                                {
                                <option value="@a.id">@a.name</option>
                                }
                                else if (a.id.ToString().CompareTo(ViewBag.id_building) == 0)
                                {
                                <option value="@a.id" selected="selected">@a.name</option>
                                }
                                else
                                {
                                <option value="@a.id">@a.name</option>
                                }
                            }
                        }
                </select>
                }
                else
                {
                    <input id="id_building" type="text" name="id_building" value="@ViewBag.building" disabled/>   
                }
            </div>
            <br />
            <div class="info_new_left">Floor</div>
            <div class="infonewinput">
                @if ((isPublish == null || isPublish == 0) && li.Exists(p => p.role == 2))
                {
                    <select name="id_floor" id="id_floor">
                        <option value="" disabled selected>Choose Facility</option>
                        @if (ViewBag.id_floor != "")
                        {
                            foreach (StarEnergi.Models.rca_floor a in ViewData["floors"] as List<StarEnergi.Models.rca_floor>)
                            {
                                if (ViewBag.id_floor == null)
                                {
                                <option value="@a.id">@a.name</option>
                                }
                                else if (a.id.ToString().CompareTo(ViewBag.id_floor) == 0)
                                {
                                <option value="@a.id" selected="selected">@a.name</option>
                                }
                                else
                                {
                                <option value="@a.id">@a.name</option>
                                }
                            }
                        }
                    </select>
                }
                else
                {
                    <input id="id_building" type="text" name="id_building" value="@ViewBag.building" disabled/>   
                }
            </div>
            <br />-->*@
            <div class="info_new_left"><div>Functional Location</div><div> (ID Number)</div></div>
            <div class="infonewinput">
                <input id="functional_location" type="text" name="functional_location" value="@Model.functional_location" @((isPublish == null || isPublish == 0) && li.Exists(p => p.role == (int)StarEnergi.Config.role.RCA) && ViewBag.isView != null ? "" : "disabled")/>
                <input id="browse" name="browse" type="button" style="@((isPublish == null || isPublish == 0) && li.Exists(p => p.role == (int)StarEnergi.Config.role.RCA) && ViewBag.isView != null ? "display:inline" : "display:none;")" onclick="browseEquipment()" value="Browse" />
            </div>
            <br />
            <div class="addSubmit">
	            <input name="cancel" value="Cancel" type="submit"/>
                <input type="submit" value="Previous" name="previous"/>
                <input type="submit" value="Next" name="next"/>
            </div>
        </div> 
    </div>
</div>
}

@(Html.Telerik().Window()
    .Name("BrowseEquipment")
    .Visible(false)
    .Title("Choose Functional Location")
    .Modal(true)
    .Width(400)
    .Height(600)
    .Content(@<text>
               @(
            Html.Telerik().TreeView()
                .Name("TreeSBS")
                .BindTo(plant, mappings =>
                {
                    mappings.For<StarEnergi.Models.plant>(binding => binding
                            .ItemDataBound((items, plants) =>
                            {
                                items.Text = plants.nama;
                                items.Value = Config.TreeType.PLANT + ";" + plants.id.ToString();
                                items.Expanded = true;
                                if (plants.focs.Count != 0) {
                                    items.ImageUrl = ("~/Content/image/folder.png");
                                }else
                                    items.ImageUrl = ("~/Content/image/file.png");
                            })
                            .Children(plants => plants.focs));
            
                    mappings.For<StarEnergi.Models.foc>(binding => binding
                            .ItemDataBound((items, foc) =>
                            {
                                items.Text = foc.nama;
                                items.Value = Config.TreeType.AREA +";"+ foc.id.ToString();
                                if (foc.units.Count != 0)
                                {
                                    items.ImageUrl = ("~/Content/image/folder.png");
                                }
                                else
                                    items.ImageUrl = ("~/Content/image/file.png");
                       
                            })
                            .Children(foc => foc.units));

                    mappings.For<StarEnergi.Models.unit>(binding => binding
                            .ItemDataBound((items, unit) =>
                            {
                                items.Text = unit.nama;
                                items.Value = Config.TreeType.UNIT + ";" + unit.id.ToString();
                                if (unit.systems.Count != 0)
                                {
                                    items.ImageUrl = ("~/Content/image/folder.png");
                                }
                                else
                                    items.ImageUrl = ("~/Content/image/file.png");
                            })
                            .Children(unit => unit.systems));
            
                    mappings.For<StarEnergi.Models.system>(binding => binding
                           .ItemDataBound((items, system) =>
                           {
                               items.Text = system.nama;
                               items.Value = Config.TreeType.SYSTEM + ";" + system.id.ToString();
                               if (system.equipment_groups.Count != 0)
                               {
                                   items.ImageUrl = ("~/Content/image/folder.png");
                               }
                               else
                                   items.ImageUrl = ("~/Content/image/file.png");
                           })
                           .Children(system => system.equipment_groups));
            
                    mappings.For<StarEnergi.Models.equipment_groups>(binding => binding
                          .ItemDataBound((items, equipment_groups) =>
                          {
                              items.Text = equipment_groups.description == null ? equipment_groups.nama : equipment_groups.description;
                              items.Value = Config.TreeType.EQUIPMENT_GROUP + ";" + equipment_groups.id.ToString();
                              if (equipment_groups.equipments.Count != 0)
                              {
                                  items.ImageUrl = ("~/Content/image/folder.png");
                              }
                              else
                                  items.ImageUrl = ("~/Content/image/file.png");
                          })
                          .Children(equipment_groups => equipment_groups.equipments));
            
                    mappings.For<StarEnergi.Models.equipment>(binding => binding
                         .ItemDataBound((items, equipment) =>
                         {
                             items.Text = equipment.nama;
                             items.Value = Config.TreeType.EQUIPMENTS + ";" + equipment.id.ToString();
                                  items.ImageUrl = ("~/Content/image/file.png");
                         }));
            
                })
                .ClientEvents(eventsTree =>
                           eventsTree.OnLoad("onLoadTree")
                )
           )
        </text>)
)
<script type="text/javascript">
    $(function () {
        $('#id_facility').change(function () {
            $.post('@Url.Action("getDepartment", "RCA")', { selectedFacility: $(this).val() }, function (result) {
                var str = '<option value="" disabled selected>Choose Department</option>';
                if (result.count == 0) {
                    $('#id_division').html('<option value="" disabled>Choose Facility</option>');
                } else {
                    $.each(result, function () {
                        str += '<option value="' + this.id_division + '">' + this.value + '</option>\n';
                    });
                    $('#id_division').html(str);
                    $('#id_department').html('<option value="" disabled>Choose Department</option>');
                    $('#id_building').html('<option value="" disabled>Choose Department</option>');
                    $('#id_floor').html('<option value="" disabled>Choose Department</option>');
                }
            });
        });
    });

    $(function () {
        $('#id_division').change(function () {
            $.post('@Url.Action("getSection", "RCA")', { selectedDepartment: $(this).val() }, function (result) {
                var str = '<option value="" disabled selected>Choose Section</option>';
                if (result.count == 0) {
                    $('#id_department').html('<option value="" disabled>Choose Department</option>');
                } else {
                    $.each(result, function () {
                        str += '<option value="' + this.id_department + '">' + this.value + '</option>\n';
                    });
                    $('#id_department').html(str);
                    $('#id_building').html('<option value="" disabled>Choose Section</option>');
                    $('#id_floor').html('<option value="" disabled>Choose Section</option>');
                }
            });
        });
    });

    $(function () {
        $('#id_department').change(function () {
            $.post('@Url.Action("getBuilding", "RCA")', { selectedSection: $(this).val() }, function (result) {
                var str = '<option value="" disabled selected>Choose Building</option>';
                if (result.count == 0) {
                    $('#id_building').html('<option value="" disabled>Choose Section</option>');
                } else {
                    $.each(result, function () {
                        str += '<option value="' + this.id_building + '">' + this.value + '</option>\n';
                    });
                    $('#id_building').html(str);
                    $('#id_floor').html('<option value="" disabled>Choose Building</option>');
                }
            });
        });
    });

    $(function () {
        $('#id_building').change(function () {
            $.post('@Url.Action("getFloor", "RCA")', { selectedBuilding: $(this).val() }, function (result) {
                var str = '<option value="" disabled selected>Choose Floor</option>';
                if (result.count == 0) {
                    $('#id_floor').html('<option value="" disabled>Choose Building</option>');
                } else {
                    $.each(result, function () {
                        str += '<option value="' + this.id_floor + '">' + this.value + '</option>\n';
                    });
                    $('#id_floor').html(str);
                }
            });
        });
    });

    $(document).ready(function () {
        //$('#id_facility').change();
    });

    function browseEquipment() {
        var detailWindow = $("#BrowseEquipment").data("tWindow");
        detailWindow.center().open();
    }

    function onLoadTree() {
        $(".t-in", this).live("dblclick", function () {
            var node = $(this).closest('.t-item');
            var text = $(this).text();

            var treeview = $('#TreeSBS').data('tTreeView');
            var value = treeview.getItemValue(node).split(';');
            if (value[0] == '@Config.TreeType.EQUIPMENTS') {
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("getFuncLocation", "RCA")",
                traditional: true,
                data: {
                    id: value[1]
                },
                success: function (data) {
                    $('#functional_location').val(data.tag_number + ' - ' + data.nama);
                }
            });
            var detailWindow = $("#BrowseEquipment").data("tWindow");
            detailWindow.close();
        } else {

        }
        });
    }

    $('a').click(function () {
        // confirmation if user really want to exit the wizard
        var r = confirm("Are you sure want to exit this wizard?\nIf you just add new RCA, then this RCA will be deleted.");
        if (r == true) {
            // if is add, checking from the type of RCA
            if ($('#types').val() == "add") {
                // delete the RCA (call url to delete RCA)
                $.ajax({
                    type: 'POST',
                    url: "/RCA/DeleteCurrentRCA",
                    data: null,
                    success: function (e) { },
                    async: false
                });
            }
            // else just make this happen
        } else {
            event.preventDefault();
        }
    });
</script>

