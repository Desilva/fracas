@using StarEnergi.Utilities;
<link href="@Url.Content("~/Content/Site-new.css")" rel="stylesheet" type="text/css" />
@{    
    var htmlAttributes = new { style = "float: left;width: 180px;position: absolute; margin-left: 10px;" };
    List<StarEnergi.Models.user_per_role> li = null;
    if (HttpContext.Current.Session["roles"] != null)
    {
        li = HttpContext.Current.Session["roles"] as List<StarEnergi.Models.user_per_role>;

    }
    else
    {
        var urlHelper = new UrlHelper(Html.ViewContext.RequestContext);
        var baseurl = urlHelper.Content("~");
        var returnUrl = HttpContext.Current.Request.RawUrl.Replace(baseurl, "");
        System.Diagnostics.Debug.WriteLine("returnUrl = " + returnUrl);
        if ((returnUrl.Contains("rca") || returnUrl.Contains("pir") || returnUrl.Contains("Hse") || returnUrl.Contains("admin")) && !returnUrl.Contains("LogOn"))
        {
            HttpContext.Current.Response.Redirect(@Url.Action("LogOn", "Account", new { returnUrl = returnUrl }));
        }
    }
    StarEnergi.Models.WinnerReport undian = null;
    string s = "";
    if (ViewBag.winner != null)
    {
        undian = ViewBag.winner as StarEnergi.Models.WinnerReport;
        s = "";
        foreach (StarEnergi.Models.WinnerEntity win in undian.winners)
        {
            s += win.winner + ", ";
        }
        s = s.Length > 2 ? s.Remove(s.Length - 2) : s;
    }
    //HttpContext.Current.Response.Redirect(@Url.Action("LogOn","Account",new {returnUrl = returnUrl}));
}    

<link rel="stylesheet" type="text/css" href="/Content/bootstrap.css">
    <link href="/Content/Dashboard.css" rel="stylesheet" type="text/css" />
    <script type="text/javascript" src="/Scripts/bootstrap.min.js"></script>
    <script src="/Scripts/application.js"></script>	
       
<div>
   
            
 

@{
    if (User.Identity.IsAuthenticated)
    {
        if (Session["id"] != null)
        {
            
          <div class="notification-area">
                <div class="notification-header">
                    <h2>Notification Center</h2>
                </div>
                    <div class="notification-body">
                        <link href="@Url.Content("~/Content/kendo/kendo.common.min.css")" rel="stylesheet" type="text/css" />
                        <link href="@Url.Content("~/Content/kendo/kendo.material.min.css")" rel="stylesheet" type="text/css" />
                        <div id="grid"></div>
                    </div>
       </div>
            string userId = Session["id"].ToString();
            StarEnergi.Utilities.KpiDashboard dashboard = new KpiDashboard();
    <div class="kpi-area">
    @{ if (dashboard.Allow(userId, KPIType.SHE_OBSERVATION)) { Html.RenderPartial("kpi", new ViewDataDictionary { { "KPIType", KPIType.SHE_OBSERVATION } }); } }
    @{ if (dashboard.Allow(userId, KPIType.IIR_APPROVED)) { Html.RenderPartial("kpi", new ViewDataDictionary { { "KPIType", KPIType.IIR_APPROVED } }); } }
    @{ if (dashboard.Allow(userId, KPIType.IR_APPROVED)) { Html.RenderPartial("kpi", new ViewDataDictionary { { "KPIType", KPIType.IR_APPROVED } }); } }
    @{ if (dashboard.Allow(userId, KPIType.IIR_OUTSTANDING_APPROVED)) { Html.RenderPartial("kpi", new ViewDataDictionary { { "KPIType", KPIType.IIR_OUTSTANDING_APPROVED } }); } }
    @{ if (dashboard.Allow(userId, KPIType.IR_OUTSTANDING_APPROVAL)) { Html.RenderPartial("kpi", new ViewDataDictionary { { "KPIType", KPIType.IR_OUTSTANDING_APPROVAL } }); } }
    @{ if (dashboard.Allow(userId, KPIType.PIR)) { Html.RenderPartial("kpi", new ViewDataDictionary { { "KPIType", KPIType.PIR } }); } }
    @{ if (dashboard.Allow(userId, KPIType.RCA)) { Html.RenderPartial("kpi", new ViewDataDictionary { { "KPIType", KPIType.RCA } }); } }
    </div>
        }
    }
}

@if (undian != null)
{
    <div class="lucky-winner">
        <div class="lucky-winner-title-area">
            <h3 class="lucky-winner-title">SHE Observation Lucky Draw Winner</h3>
            <p>Period: @undian.from.Value.ToString("dd MMM yyyy") - @undian.to.Value.ToString("dd MMM yyyy")</p>
            <p>Congratulation to all winners!</p>
        </div>
        <div class="lucky-winner-area">
            @if (ViewBag.winner != null)
            {
            <ul>
                @{undian = ViewBag.winner as StarEnergi.Models.WinnerReport;
                  s = "";
                  foreach (StarEnergi.Models.WinnerEntity win in undian.winners)
                  {
                      List<string> name = win.winner.Split(' ').ToList();
                      if (name.Count > 2)
                      {
                          name.RemoveRange(2, name.Count - 2);
                      }
                    <li><span class="icon-thumbs-up icon-white"></span> @string.Join(" ", name)</li>
                  }
                }
            </ul>
            }
        </div>
    </div>
}
</div>
@section menuDashboard {
<div class="menu-area">
    <div class="wrap">
        <div class="toggle-button">
            <a href="javascript:" data-toggle="0" id="toggle-collapse">
                <img src="@Url.Content("~/Content/image/new/toggle-collapse.png")" />
            </a>
        </div>
        <div class="menu">
            <a data-toggle="popover"  data-content='<a href="@Url.Action("Index", "FracasEventLog")">FRACAS Event Log</a><br/><a href="@Url.Action("Index", "FracasHistory")">Historical Data</a>@(li != null && li.Exists(p => p.role == (int)StarEnergi.Config.role.FRACAS) ? "<br/><a href=" + @Url.Action("Index", "Fracas") + ">FRACAS Input</a><br/><a href=" + @Url.Action("Index", "Troubleshooting") + ">Troubleshooting</a>" : "")' data-placement="top" title="FRACAS" data-original-title="Popover on top" data-html="true">
                <img src="@Url.Content("~/Content/image/new/fracas-link.png")" />
                <span class="menu-text">FRACAS</span>
            </a>
        </div>
        <div class="menu">
            <a data-toggle="popover" data-placement="top" data-content="<a href=@Url.Action("Index", "Incident")>SHE Incident Report</a>@if (li != null && li.Exists(p => p.role == (int)StarEnergi.Config.role.IIR))
                                                                                                                                        { <text><br/><a href=@Url.Action("Index", "Investigation")>SHE Incident Investigation Report</a></text>}@if (li != null && li.Exists(p => p.role == (int)StarEnergi.Config.role.AUDITOR))
                                                                                                                                                                                                                                                { <text><br/><a href=@Url.Action("Index", "HseAuditor")>SHE Audit</a></text> }@if (li != null && li.Exists(p => p.role == (int)StarEnergi.Config.role.MEDIC))
                                                                                                                                                                                                                                                                                                                              { <text><br/><a href=@Url.Action("Index", "HseInjuryReport")>SHE Injury Report</a></text>}<br/><a href=@Url.Action("Index", "SheObservation")>SHE Observation Form</a>" title="SHE" data-original-title="Popover on top" data-html="true">
                <img src="@Url.Content("~/Content/image/new/she-link.png")" />
                <span class="menu-text">SHE</span>
            </a>
        </div>
        <div class="menu">
            <a href=@Url.Action("Index", "DailyLogs") title="Daily Log">
                <img src="@Url.Content("~/Content/image/new/dailylog-link.png")" />
                <span class="menu-text">Daily Log</span>
            </a>
        </div>
        <div class="menu">
            <a href=@Url.Action("Index", "EquipmentDailyreport") title="Equipment Daily Report">
                <img src="@Url.Content("~/Content/image/new/equipt-link.png")" />
                <span class="menu-text">Equipt. Report</span>
            </a>
        </div>
        <div class="menu">
            <a href=@Url.Action("Index", "rca") title="RCA">
                <img src="@Url.Content("~/Content/image/new/rca-link.png")" />
                <span class="menu-text">RCA</span>
            </a>
        </div>
        <div class="menu">
            <a data-toggle="popover" data-placement="top" data-content="@(li != null && li.Exists(p => p.role == (int)StarEnergi.Config.role.PIRINITIATOR || p.role == (int)StarEnergi.Config.role.PIRPROCESS || p.role == (int)StarEnergi.Config.role.FULLPIR || p.role == (int)StarEnergi.Config.role.AUDITOR) ? "<a href=" + @Url.Action("Index", "PIR") + ">PIR</a><br/><a href=" + @Url.Action("Report", "PIR", new { id_page = 1 }) + ">PIR Report</a>" : "")" title="PIR" data-original-title="Popover on top" data-html="true">
                <img src="@Url.Content("~/Content/image/new/pir-link.png")" />
                <span class="menu-text">PIR</span>
            </a>
        </div>
        <div class="menu">
            <a href="@System.Configuration.ConfigurationManager.AppSettings["enviro"]" title="Enviro">
                <img src="@Url.Content("~/Content/image/new/enviro-link.png")" />
                <span class="menu-text">Enviro</span>
            </a>
        </div>
        <div class="menu">
            <a href="@System.Configuration.ConfigurationManager.AppSettings["fsr"]" title="Facilities Service Request">
                <img src="@Url.Content("~/Content/image/new/fsr-link.png")" />
                <span class="menu-text">FSR</span>
            </a>
        </div>
        <div class="menu">
            <a href="@System.Configuration.ConfigurationManager.AppSettings["ptw"]" title="Permit To Work">
                <img src="@Url.Content("~/Content/image/new/ptw-link.png")" />
                <span class="menu-text">PTW</span>
            </a>
        </div>
        
        <div class="menu">
            <a href="@System.Configuration.ConfigurationManager.AppSettings["access"]" title="Access Control">
                <img src="@Url.Content("~/Content/image/new/access-link.png")" />
                @*<span class="menu-text">PTW</span>*@
            </a>
        </div>
    </div>
</div>
}

@section scripts {
    <script type="text/javascript" src="@Url.Content("~/Scripts/jQueryRotateCompressed.js")"></script>
    <script src="@Url.Content("~/Scripts/kendo/kendo.web.min.js")" type="text/javascript" ></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('#toggle-collapse').click(function () {
                var toggleStatus = $(this).data('toggle');
                if (toggleStatus == '0') {
                    $('.menu-area').animate({ "bottom": "-210px" }, "slow");
                    $('.menu-area .toggle-button img').rotate({
                        duration: 1000,
                        angle: 0,
                        animateTo: 180
                    });
                    $(this).data('toggle', '1');
                } else {
                    $('.menu-area').animate({ "bottom": "0" }, "slow");
                    $('.menu-area .toggle-button img').rotate({
                        duration: 1000,
                        angle: 180,
                        animateTo: 0
                    });
                    $(this).data('toggle', '0');
                }
            });

            $('#page').css('background', '#efefef url(content/image/new/bg-1.png) no-repeat').css('background-size', '100% 100%');
            $('#mainmenu').css('background', 'transparent');
            $('#mainmenu .t-header').css('background', 'transparent');
            $('#menu .t-item').css('background', 'transparent');
            $('#menu .t-item .t-item').css('background', '#fff');
            var kendoFilter = {
                filterable: {
                    operators: {
                        //filter menu for "string" type columns
                        string: {
                            eq: "Is equal to",
                            neq: "Is not equal to",
                            startswith: "Starts with",
                            contains: "Contains",
                            endswith: "Ends with"
                        },
                    }
                }
            }

            $("#grid").kendoGrid({
                dataSource: {
                    error: function (e) {
                        window.location = "@Url.Action("LogOn", "Account")";
                    },
                     transport: {
                         read: {
                            url: "@Url.Action("Binding")",
                            dataType: "json",
                            type: "POST",
                        },
                        parameterMap: function (options, operation) {
                            if (operation !== "read" && options.models) {

                            } else {

                                if (options.filter) {
                                    filter = options.filter.filters;
                                    for (var i in filter) {
                                        //if (filter[i].field == "CreateDate") {
                                        //    var date = filter[i].value;
                                        //    //date = date.split(' ');
                                        //    //date = date[2] + " " + date[1] + " " + date[3];
                                        //    //console.log(typeof(kendo.parseDate(date,"d MMM yyyy")));
                                        //    filter[i].value = kendo.toString(date, "G");
                                        //    console.log(filter[i].value);
                                        //} else if (filter[i].field == "Status") {
                                        //    filter[i].value = filter[i].value == true ? 1 : 0;
                                        //} else if (filter[i].field == "Name") {
                                        //    filter[i].field = "contractor.first_name";
                                        //    var sor = { field: "contractor.last_name", operator: 'contains', value: filter[i].value };
                                        //    filter.push(sor);
                                        //    options.filter.logic = "or";
                                        //} else if (filter[i].field == "Position") {
                                        //    filter[i].field = "docPosition.position";
                                        //} else if (filter[i].field == "Company") {
                                        //    filter[i].field = "contractor.company.name";
                                        //} else if (filter[i].field == "DurationContract") {
                                        //    filter[i].field = "start_date";
                                        //    filter[i].value = kendo.toString(date, "G");
                                        //}
                                        if (filter[i].field == "ContractDuration") {
                                            var date = new Date(filter[i].value);
                                            filter[i].field = "start_date";
                                            filter[i].operator = "lte";
                                            filter[i].value = kendo.toString(date, "MM/dd/yyyy");
                                            var fil = { field: "end_date", operator: "gte", value: filter[i].value };
                                            filter.push(fil);
                                        }
                                    }
                                }

                                if (options.sort) {
                                    sort = options.sort;
                                    for (var i in sort) {
                                        //if (sort[i].field == "ContractSpv") {
                                        //    sort[i].field = "contract_supervisor";
                                        //} else if (sort[i].field == "Name") {
                                        //    sort[i].field = "contractor.first_name";
                                        //    var sor = { field: "contractor.last_name", dir: sort[i].dir };
                                        //    sort.push(sor);
                                        //} else if (sort[i].field == "Position") {
                                        //    sort[i].field = "docPosition.position";
                                        //} else if (sort[i].field == "Company") {
                                        //    sort[i].field = "contractor.company.name";
                                        //} else if (sort[i].field == "DurationContract") {
                                        //    sort[i].field = "start_date";
                                        //    var sor = { field: "end_date", dir: sort[i].dir };
                                        //    sort.push(sor);
                                        //}
                                        if (sort[i].field == "ContractDuration") {
                                            sort[i].field = "start_date";
                                            var sor = { field: "end_date", dir: sort[i].dir };
                                            sort.push(sor);
                                        }
                                    }
                                }
                                return options;
                            }
                        }
                     },
                     //filter: { field: "IdLogin", operator: "eq", value: " },
                    schema: {
                        data: "data",
                        total: "total",
                        model: {
                            id: "Id",
                            fields: {
                                IdLogin: { type: "number" },
                                ApplicationName: { type: "string" },
                                ReportName: { type: "string" },
                                Remarks: { type: "string" },
                            }
                        }
                    },
                    pageSize: 10,
                    serverPaging: true,
                    serverFiltering: true,
                    serverSorting: true,
                    //filter: { field: "Status", operator: "contains", value: "RETRIEVED" }
                    //sort: { field: "order_num", dir: "desc" },
                },
                 pageable: true,
                 sortable: true,
                 scrollable: true,
                 filterable: true,
                 height: 300,
                 columns: [
                     {
                         field: "ApplicationName",
                         title: "Application Name",
                         width: 160,
                         filterable: {
                             operators: {
                                 //filter menu for "string" type columns
                                 string: {
                                     eq: "Is equal to",
                                     neq: "Is not equal to",
                                     startswith: "Starts with",
                                     contains: "Contains",
                                     endswith: "Ends with"
                                 },
                             },
                             extra: false
                         }
                     },
                     {
                         field: "ReportName",
                         title: "Report",
                         filterable: {
                             operators: {
                                 //filter menu for "string" type columns
                                 string: {
                                     eq: "Is equal to",
                                     neq: "Is not equal to",
                                     startswith: "Starts with",
                                     contains: "Contains",
                                     endswith: "Ends with"
                                 },
                             },
                             extra:false
                         }
                     },
                     {
                         field: "Remarks",
                         title: "Remarks",
                         filterable: {
                             operators: {
                                 //filter menu for "string" type columns
                                 string: {
                                     eq: "Is equal to",
                                     neq: "Is not equal to",
                                     startswith: "Starts with",
                                     contains: "Contains",
                                     endswith: "Ends with"
                                 },
                             },
                             extra:false
                         }

                     },
                     {
                         template: kendo.template($('#command-template').html()),
                         width: 75
                     }
                 ],
             });

        });

        function MarkAsSeen(id) {
            $.ajax({
                url: '@Url.Action("NotificationIsSeen")',
                async: false,
                type: "POST",
                data: {id:id},
                success: function (data) {
                    if (data == true) {
                        $('#grid').data('kendoGrid').dataSource.read();
                    }
                    else {
                        window.location = "@Url.Action("LogOn", "Account")";
                    }
                },
                error: function (data) {
                    window.location="@Url.Action("LogOn", "Account")";
                }
            });
        }

    </script>
<script id="command-template" type="text/x-kendo-template">
            <a class="k-button-icon" title="Go to report" onclick="MarkAsSeen(#=Id #)" href="#= Url #" target="_blank"><span><img style="max-height:10px" src="/Content/glyphicon/glyphicons-145-folder-open.png" /></span></a>
     # if (IsSeen == false){ #
            <a class="k-button-icon" title="Mark as seen" onclick="event.preventDefault(); MarkAsSeen(#=Id #)" href=""><span><img style="max-height:10px" src="/Content/glyphicon/glyphicons-207-ok-2.png" /></span></a>
     # } #
</script>